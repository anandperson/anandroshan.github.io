{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","http/blog-calls.js","components/Post/Share.js","components/RewardsWidget/index.js","components/Cards/LeftThumbCard.js","components/Post/BlogPost.js","components/Post/BlogPosts.js","components/Blog/PopularArticles/index.js","components/Filter/blogFilter.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","getBlogCategories","params","Promise","resolve","reject","makeAxiosGetRequest","config","baseUrl","then","res","data","catch","e","response","createBlog","makeAxiosPostRequest","updateBlog","getPosts","auth","getFilteredBlogPosts","postRemove","getSinglePost","getPopularBlogs","getCategoryBlogs","getAuthorBlogs","clap","sendTips","purchaseBlog","checkPurchasedBlog","likePost","postComment","likeComment","replyComment","getBlogDraft","getBlogStats","Share","props","React","useState","post","inputText","setInputText","className","type","data-dismiss","aria-label","onClick","closeShareModal","aria-hidden","Fragment","target","href","encodeURI","frontEnd","_id","src","GetAssetImage","id","defaultValue","disabled","value","name","cols","rows","placeholder","onChange","event","switchLoader","sharePost","postid","text","resp","a","shareSuccess","error","RewardsWidget","loading","status","setStatus","useEffect","walletCheck","variant","size","LeftThumbCard","setPost","key","k","style","backgroundImage","thumb","url","history","push","undefined","currentUser","shared","authorid","to","slug","require","sharedBy","userid","removePost","reported","unReport","report","saved","unSave","save","title","description","replace","toString","likes","shares","comments","tips","toFixed","category","BlogPost","extractUrl","regex","RegExp","match","reportModal","setState","state","componentDidMount","single","showComments","txt","JSON","parse","editorContent","postText","blocks","getCoins","coins","console","log","len","length","map","i","index","findIndex","item","currencySymbol","currency","amount","EstimatedUSD","postActivityCount","activityType","action","postObj","editPost","postSave","alertBox","message","postUnSave","p","link","postReport","reason","postUnReport","hidePost","postHide","hidden","unhidePost","postUnHide","last","open","removePostConfirm","removed","highlightPost","postHighlight","highlighted","unHighlight","postUnHighlight","likePostFn","postId","liked","likeActive","shareModel","currPost","handleOnReady","setTimeout","playing","handleClose","postCmt","commentText","obj","comment","unshift","getComments","handleChange","evt","replyCmt","showCommentReply","commentId","el","tempPostData","showReply","showCommentReplies","getReplyComments","replies","callBackCommentReply","replyData","commentIndex","tempReplyCmt","getPostContent","filter","pic","contents","content_url","subject","clapsCount","shareCount","cmtsCount","bind","prevProps","this","displayModal","closeModal","onClose","Component","BlogPosts","checkWallet","err","getAllPairs","localStorage","setItem","stringify","coinsLoaded","getPaginatePost","formdata","limit","page","query","mine","filters","f","priceFrom","priceTo","posts","hasMore","postLoaded","showSkeleton","loadFunc","prevState","commentLike","commentReply","callBack","refreshHighlights","getSkeletonContent","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","loadMore","pageStart","initialLoad","fill","PopularArticles","articles","setArticles","seemore","setMore","getArticles","checkMore","BlogFilter","setCategory","setPriceFrom","setPriceTo","categories","setCategories","setKey","getData","dataChange"],"mappings":"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","file":"static/js/10.00ea4cfa.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import config from \"../config/index\";\nimport {\n    makeAxiosGetRequest,\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n\n/**\n * createPost\n * @param {object} data\n */\n\nexport const getBlogCategories = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-categories`, true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const createBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"create-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const updateBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"update-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n/**\n * register\n * @param {object} data email and password\n */\nexport const getPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-posts\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getGlobalPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-global-blogs\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getFilteredBlogPosts = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-filtered-blog-posts\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postRemove = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"remove-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getComments = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-comments`, auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\n\nexport const getSinglePost = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getPopularBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-popular-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getCategoryBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-category-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getAuthorBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-author-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const getSuggestedBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-suggested-blogs\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const clap = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"blog-clap\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const sendTips = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"send-tips\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const purchaseBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"purchase-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const checkPurchasedBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"check-purchased-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likePost = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + \"like-blog\", auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const postComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + 'comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likeComment = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'like-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const replyComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'reply-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getBlogDraft = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-draft\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const postSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postUnSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"un-save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\nexport const getBlogStats = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"blog-stats\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};","import React from 'react';\nimport { sharePost } from '../../http/http-calls';\nimport { switchLoader, alertBox } from '../../commonRedux/';\nimport { GetAssetImage } from '../../globalFunctions';\nimport config from '../../config/index';\n\nconst Share = props => {\n    const [post, setPost] = React.useState(props.post);\n    const [shareType, setShareType] = React.useState('post');\n    const [inputText, setInputText] = React.useState(\"\");\n\n    const sharePostFn = () => {\n        switchLoader(true, 'Please wait. Your post sharing...!')\n        sharePost({ postid: post._id, text: inputText, type: props.type }, true)\n        .then(async resp => {\n            props.shareSuccess();\n            props.closeShareModal();\n            switchLoader();\n        }, error => {\n            \n            props.closeShareModal();\n            switchLoader();\n        });\n    }\n    const onChangeHandler = event => {\n        setInputText(event.target.value);\n    }\n    return (\n        <div className=\"social-wall-share-popup \">\n            <div className=\"modal-content share-popup--content\">\n                <div className=\"modal-header d-flex align-items-center\">\n                    <h5 className=\"modal-title\">Share</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.closeShareModal}>\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                \n                <div className=\"modal-body\">\n                    <div className=\"shareIcons text-center mb-2\">\n                        {\n                            props.type == 'blog' ?\n                            <React.Fragment>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\"+encodeURI(config.frontEnd+\"blog/\"+post._id)}><img src={GetAssetImage(\"facebook.png\")} /></a>\n                                <a target=\"_blank\" href={\"http://twitter.com/share?url=\"+encodeURI(config.frontEnd+\"blog/\"+post._id)}><img src={GetAssetImage(\"twitter.png\")} /></a>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\"+encodeURI(config.frontEnd+\"post/\"+post._id)}><img src={GetAssetImage(\"facebook.png\")} /></a>\n                                <a target=\"_blank\" href={\"http://twitter.com/share?url=\"+encodeURI(config.frontEnd+\"post/\"+post._id)}><img src={GetAssetImage(\"twitter.png\")} /></a>\n                            </React.Fragment>\n                        }\n                    \n                    </div>\n                    <div className=\"mb-2 text-center\">-OR-</div>\n                    <ul className=\"p-0 m-0 w-100\">\n                        <li className=\"list-group-item p-0 pt-1\">\n                            <select className=\"form-control custom-select\" id=\"\" defaultValue={'DEFAULT'} >\n                                <option disabled value=\"DEFAULT\"> Share on my wall</option>\n                            </select>\n                        </li>\n                        <li className=\"list-group-item p-0 pt-2\">\n                            <textarea name=\"inputText\" id=\"\" cols=\"30\" rows=\"4\" placeholder=\"Message\" value={inputText} onChange={onChangeHandler}></textarea>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"modal-footer d-flex align-items-center pt-1\">\n                    <button type=\"button\" className=\"btn btn-secondary cancel-btn\" data-dismiss=\"modal\" onClick={props.closeShareModal}>Cancel</button>\n                    <button type=\"button\" className=\"btn btn-primary yes-btn\" onClick={sharePostFn}>Send</button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\nexport default Share;","import React, { useState, useEffect } from \"react\";\nimport A from \"../A\";\nimport Button from \"../Button\";\nimport \"./style.css\";\nimport Spinner from \"../Spinner\";\nimport { getTradePairs } from \"../../http/wallet-calls\";\nimport { GetAssetImage } from \"../../globalFunctions\";\nimport walletCheck from \"../../hooks/walletCheck\";\n\nconst RewardsWidget = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(null);\n\n  useEffect(() => {\n    walletCheck().then((resp) => {\n      try {\n        setStatus(resp.data.status);\n      } catch (error) {}\n    });\n  }, []);\n\n  return (\n    <div\n      className={\n        \" empty-inner-container-with-border widget rewardsWidget \" +\n        (props.variant != null && \" \" + props.variant)\n      }\n    >\n      <div className=\"col\">\n        <ul className=\"list-group w-100\">\n          <li className=\"widgetTitle\">\n            <img src={GetAssetImage(\"icon-material-royalty.svg\")} />\n            <span>Rewards</span>\n          </li>\n        </ul>\n        {/* <div className=\"list-group-item d-flex justify-content-between align-items-center header-drak widgetTitle\">\n                  <div>BUY CRYPTOCURRENCY</div>\n                </div> */}\n        <div className=\"widgetBody\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <div className=\"flex-row\">\n              <img\n                src={GetAssetImage(\"icon-material-stars.svg\")}\n                className=\"icon-star\"\n              />\n\n              {status == \"Accept\" ? (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>400 Points</strong> on\n                    your KYC.\n                  </p>\n                  <p>\n                    Refer your friend and earn <strong>500 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              ) : (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>100 Points</strong> on\n                    your Registration.\n                  </p>\n                  <p>\n                    Complete your KYC and earn <strong>400 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RewardsWidget;\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport A from '../A';\nimport Truncate from 'react-truncate';\nimport {history} from '../../store';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\n\n  \nconst LeftThumbCard = props => {\n  const [post, setPost] = useState(props.post);\n  const goTo = (url) => {\n    history.push(url);\n  };\n  useEffect(()=>{\n    setPost(props.post);\n  }, [props.post]);\n  \n  return (\n   <div className=\"card leftThumbCard\" key={props.k}>\n    <div className=\"card-thumb pointer\" style={{backgroundImage: \"url(\" + props.thumb + \")\"}} onClick={() => goTo(props.url)}>\n    {post.status == 'draft' && <small className=\"badge badge-secondary draft-label ml-2 mt-1\">Draft</small> } \n    </div>\n    <div className=\"card-body\">\n      {\n        props.currentUser != undefined && props.shared == undefined && props.authorid == props.currentUser._id ? <span className=\"list-group-item  p-1 pr-2 pointer  dropdown pull-right\">\n        <i className=\"fa fa-ellipsis-h\"></i>\n    <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n    <Link to={\"/edit-blog/\"+post.slug} className=\"dropdown-item\">\n            <img className=\"mr-1\" src={require(\"../../assets/images/edit-icon.png\")} />\n            <span className=\"m-1\">Edit</span></Link> \n        \n        {props.currentUser != undefined && post.sharedBy == props.currentUser._id || post.userid == props.currentUser._id && <a className=\"dropdown-item\"  onClick={(e) => props.removePost(post._id)}>\n            <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n            <span className=\"m-1\">Remove</span></a>}\n    </div>\n    </span>\n    :\n    <span className=\"list-group-item  p-1 pr-2 pointer  dropdown pull-right\">\n        <i className=\"fa fa-ellipsis-h\"></i>\n\n      <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n        {\n          props.reported ?\n            <a onClick={()=>props.unReport()} className=\"dropdown-item\">\n            <i className=\"fa fa-undo\"></i>\n                <span className=\"m-1\">Undo Report</span></a> \n          :\n            <a onClick={()=>props.report()} className=\"dropdown-item\">\n            <i className=\"fa fa-exclamation-circle\"></i>\n                <span className=\"m-1\">Report</span></a> \n        }\n             {\n          props.saved  ?\n            <a onClick={()=>props.unSave()} className=\"dropdown-item\">\n            <i className=\"fa fa-undo\"></i>\n                <span className=\"m-1\">Remove from Wishlist</span></a> \n          :\n            <a onClick={()=>props.save()} className=\"dropdown-item\">\n            <i className=\"fa fa-plus\"></i>\n                <span className=\"m-1\">Add to Wishlist</span></a> \n        }\n        \n        </div>\n    </span>\n      }\n   \n      <A href={props.url}><h3 className=\"card-title\">{props.title} </h3> </A>\n      \n      {/* <p className=\"card-description\">{props.description}</p> */}\n      {/* <Truncate lines={2} className=\"card-description\" ellipsis={<span>... </span>}>\n        \n      </Truncate> */}\n      <div>\n      <div className=\"card-description\">\n        {props.description != undefined && props.description.replace(/<\\/?[^>]+(>|$)/g, \"\").toString()}\n      </div>\n      <div><a href={props.url} className=\"readmore\">Read more</a></div>\n      </div>\n      \n      {\n        props.shared == undefined && <div className=\"card-stats\">\n        <div><strong>{props.likes}</strong> <i className=\"fa fa-hand-paper-o\"></i></div>\n        <div><strong>{props.shares}</strong> <i className=\"fa fa-share-alt\"></i></div>\n        <div><strong>{props.comments}</strong> <i className=\"fa fa-comment-o\"></i></div>\n        <div><strong>${props.tips.toFixed(2)}</strong> <i>Tips</i></div>\n        <div className=\"card-sub-title\">{props.category}</div>\n      </div>\n      }\n      \n    </div> \n   </div>\n  );\n\n};\n\nexport default LeftThumbCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport Modal from '../../components/Popup';\nimport ReactPlayer from 'react-player';\nimport { getComments,   getReplyComments, postReport, postUnReport } from '../../http/http-calls';\nimport { postSave, postUnSave, postHide, postUnHide, postHighlight, postUnHighlight} from '../../http/post-calls';\nimport {postRemove, likePost, postComment} from '../../http/blog-calls';\nimport update from 'react-addons-update';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport { switchLoader, alertBox, modal } from '../../commonRedux/';\nimport A from '../A';\nimport {GetAssetImage, pic, profilePic} from '../../globalFunctions';\nimport Truncate from 'react-truncate';\nimport config from \"../../config/index\";\nimport Dialog from '@material-ui/core/Dialog';\nimport LeftThumbCard from '../Cards/LeftThumbCard';\nimport  Button  from '../Button';\nrequire(\"./styles.css\");\n\nconst reactStringReplace = require('react-string-replace');\n\nclass BlogPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open:false,\n            url: props.post.url,\n            post: props.post,\n            last: null,\n            key: props.post._id,\n            shareModel: false,\n            reported:props.post.reported == 1?true:false,\n            saved:props.post.saved == 1?true:false,\n            category: \"\",\n            reason: \"\",\n            reportModal:false,\n            currPost: {},\n            coins: [],\n            playing: false,\n            tips:0,\n            showComments: false,\n            commentText: '',\n            postText: '',\n            replyCmt: []\n        }\n        // this.likePostFn = this.likePostFn.bind(this);\n        this.sharePost = this.sharePost.bind(this);\n        this.closeShareModal = this.closeShareModal.bind(this);\n    }\n    extractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\t\treturn text.match(regex)\n    }\n    reportModal = () => {\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n\n    componentDidMount = () => {\n        \n        if(this.props.single){\n            this.showComments(this.state.post._id);\n        }        \n        \n        try {\n            var txt = JSON.parse(this.props.post.editorContent);\n            this.setState({\n                postText: txt.blocks[0].data.text\n            })\n        } catch (error) {\n            this.setState({\n                postText: this.props.post.text\n            })\n        }\n        this.getCoins();\n    };\n\n    componentDidUpdate(prevProps){\n        if(prevProps.coins != this.props.coins){\n            this.getCoins();\n        }\n    }\n\n    getCoins = () => {\n        this.setState({\n            coins : this.props.coins\n        },() => {\n            console.log(this.state.post.tips, this.state.coins)\n        if(this.state.post != undefined && this.state.post.tips != undefined && this.state.coins != undefined){\n                var len = this.state.post.tips.length;\n                if(len > 0){\n                    var tips = 0;\n                    this.state.post.tips.map((e, i) => {\n                        var index = this.state.coins.findIndex(function(item, i){\n                            return item.currencySymbol === e.currency\n                        });\n                        try {\n                            tips += e.amount/this.state.coins[index].EstimatedUSD;\n                        } catch (error) {\n                            \n                        }\n                        if(i == (len-1)){\n                            this.setState({\n                                tips: tips\n                            })\n                        }\n                    });\n                }\n            }\n        }\n        )\n    }\n\n    postActivityCount = (activityType, action = 'add') => {\n\n        const postObj = this.state.post;\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        this.setState({ post: postObj });\n    }\n\n    editPost = (id) => {\n\n    };\n    save = (id) => {\n        //modal(true, \"sdf\");\n        postSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ saved: true });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unSave = (id) => {\n        postUnSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ saved: false });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    report = (p) => {\n        if(this.state.category == \"\"){\n            alertBox(true, \"You need to select a category\");\n        }else{\n        var link = \"blog/\"+p.slug;\n        postReport({ id: p._id, type: 'blog', link, category: this.state.category, reason: this.state.reason })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ reportModal: false, reported: true});\n        }, error => {\n            alertBox(true, error.data.message);\n            this.setState({ reportModal: false});\n        });\n    }\n    };\n    unReport = (p) => {\n        postUnReport({ id: p._id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ reported: false  });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    hidePost = (id) => {\n        postHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unhidePost = (id) => {\n        postUnHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    removePost = (id) => {\n        this.setState({last:id, open:true})\n      \n    };\n\n    removePostConfirm = () => {\n        var id = this.state.last;\n        this.setState({open:false, last:null})\n        postRemove({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, removed: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    }\n    highlightPost = (id) => {\n        postHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 1 } }, () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unHighlight = (id) => {\n        postUnHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 0 } },  () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    likePostFn = (postId, liked) => {\n        this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                    this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                alertBox(true, error.data.message);\n            });\n    }\n\n    sharePost = (post) => {\n        this.setState({ shareModel: true, currPost: post })\n    }\n\n    closeShareModal = () => {\n        this.setState({ shareModel: false })\n    }\n\n    handleOnReady = () => setTimeout(() => this.setState({ playing: true }), 100);\n    handleClose = () => this.setState({ open: !this.state.open });\n\n    postCmt = (postid) => {\n        if(this.state.commentText != '' && this.state.commentText != null){\n        switchLoader(true, 'Please wait. Commenting...');\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n                this.postActivityCount('cmtsCount');\n                const postObj = this.state.post;\n                if (!postObj.comment) {\n                    postObj.comment = [];\n                }\n                postObj.comment.unshift(resp.comment);\n                this.setState({ post: postObj, showComments: true, commentText: '' });\n                switchLoader();\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n        }\n    }\n\n    showComments = (postid) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getComments({ postid }, true)\n            .then(async resp => {\n                switchLoader();\n                this.setState({ post: { ...this.state.post, comment: resp } })\n                this.setState({ showComments: true });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    shareSuccess = () => {\n        this.postActivityCount('shareCount');\n    }\n\n    showCommentReply = (commentId) => {\n        let index = this.state.post.comment.findIndex(el => el._id === commentId);\n        const tempPostData = this.state.post;\n        tempPostData.comment[index].showReply = true;\n        this.setState({ post: tempPostData });\n        \n        // this.setState({\n        //     post: { comment: update(this.state.post.comment, { [index]: { showReply: { $set: true } } }) }\n        // }, () => {\n        // });\n    }\n\n    showCommentReplies = (commentId) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getReplyComments({ commentId }, true)\n            .then(async resp => {\n                switchLoader();\n                let index = this.state.post.comment.findIndex(el => el._id === commentId);\n                const tempPostData = this.state.post;\n                tempPostData.comment[index].replies = resp;\n                this.setState({ post: tempPostData });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    callBackCommentReply = (replyData, commentIndex) => {\n        let postObj = this.state.post;\n        if (postObj.comment && postObj.comment[commentIndex]) {\n            if (postObj.comment[commentIndex].replies) {\n                postObj.comment[commentIndex].replies.push(replyData);\n            } else {\n                postObj.comment[commentIndex].replies = [replyData];\n            }\n            let tempReplyCmt = this.state.replyCmt;\n            tempReplyCmt[commentIndex] = '';\n            this.setState({ post: postObj, replyCmt: tempReplyCmt });\n        }\n    }\n\n    // wrapHash = (val) => {\n        \n    //     return val.replace(/#(\\w+)/g, \"<A href='/search/filter=posts&q=$&'>$&</A>\").replace(\"q=#\", \"q=%23\");  \n    // }\n\n    render() {\n\n        const { post, showComments, commentText, replyCmt, key } = this.state;\n\n        return (\n            <div className={\"post \"} key={key}>\n                     <Modal displayModal={this.state.reportModal} closeModal={this.reportModal} >\n                     <div>\n                         <div className=\"form-group\">\n                             <select className=\"form-control\" value={this.state.category}  onChange={(e) => this.setState({category: e.target.value})}>\n                                 <option value=\"\">Select Category</option>\n                                 <option>Violence</option>\n                                 <option>Racism / Hatespeech</option>\n                                 <option>Pornographic</option>\n                                 <option>Spam</option>\n                                 <option>Other</option>\n                             </select>\n                         </div>\n                         <div className=\"form-group\">\n                             <textarea type=\"text\" placeholder=\"Reason\" className=\"form-control\" onChange={(e) => this.setState({reason: e.target.value})} value={this.state.reason} />\n                         </div>\n                     </div>\n                <div className=\"\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.report(post)}>Report</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.reportModal}>Cancel</Button>\n                </div>\n             </Modal>\n                <Dialog onClose={this.handleClose} className=\"confirm-modal\"  open={this.state.open}>\n                    <strong className=\"text-center p-2\"><big>Confirmation</big></strong>\n                    <p className=\"p-2\">Are you sure about deleting this?</p>\n                    <div className=\"p-2 d-flex align-items-center justify-content-around\">\n                        <Button onClick={this.handleClose} variant=\"secondary\">Cancel</Button>\n                        <Button onClick={this.removePostConfirm} variant=\"primary\">Yes</Button>\n                    </div>\n                </Dialog>\n                {!post.sharedBy ? this.getPostContent(post, showComments, commentText, replyCmt) : null}\n                {this.state.shareModel &&\n                    <Share\n                        post={this.state.currPost}\n                        shareSuccess={this.shareSuccess}\n                        closeShareModal={this.closeShareModal}\n                    />}\n            </div>\n        );\n    }\n\n    getPostContent = (post, showComments, commentText, replyCmt) => {\n        return (\n            ((post.removed > 0 ) || (post.hidden > 0 && this.props.filter != 'hidden')) ? null : \n            <LeftThumbCard reported={this.state.reported} saved={this.state.saved} report={this.reportModal} unReport={()=>this.unReport(post)} save={() => this.save(post._id)} unSave={()=>this.unSave(post._id)} url={\"/blog/\"+post.slug} thumb={pic(post.contents != undefined && post.contents[0] != undefined ? post.contents[0].content_url : '')} k={post._id} currentUser={this.props.currentUser} post={post} title={post.subject} likes={post.clapsCount} shares={post.shareCount} tips={this.state.tips} comments={post.cmtsCount} category={post.category} description={this.state.postText} removePost={this.removePost} authorid={post.userid} />\n        )\n    }\n}\n\nexport default BlogPost;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfilePosts, likeComment, replyComment, likePost, postComment, getComments } from '../../http/http-calls';\nimport { getPosts } from '../../http/blog-calls';\nimport BlogPost from './BlogPost';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport TimeAgo from 'react-timeago';\nimport { getAllPairs} from '../../http/wallet-calls';\nimport walletCheck from '../../hooks/walletCheck';\n\nclass BlogPosts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: props.query,\n            filters: props.filters,\n            formdata: props.formdata,\n            posts: [],\n            page: 1,\n            coins:[],\n            coinsLoaded: false,\n            limit: props.limit == null ? 5 : props.limit,\n            hasMore: true,\n            postLoaded: false,\n            showSkeleton: false,\n            showComments: false,\n            commentText: ''\n        }\n        this.commentLike = this.commentLike.bind(this);\n        this.loadFunc = this.loadFunc.bind(this);\n        this.likePost = this.likePost.bind(this);\n        this.getPaginatePost = this.getPaginatePost.bind(this);\n    }\n\n    componentDidMount() {\n        \n        this.setState({\n            page: 1,\n            limit: this.props.limit == null ? 5: this.props.limit,\n            posts: []\n        }, this.getPaginatePost())\n        // this.checkWallet();\n    }\n\n    \n\n    componentDidUpdate(prevProps) {\n        if ((prevProps.filters != this.props.filters) ||(prevProps.query != this.props.query) || (prevProps.loadMore != this.props.loadMore) || (prevProps.formdata != this.props.formdata)) {\n            \n            this.setState({\n                formdata: this.props.formdata,\n                filters: this.props.filters,\n                page: 1,\n                limit: this.props.limit == null ? 5: this.props.limit,\n                posts: []\n            }, () => {\n                this.getPaginatePost();\n            })\n        }\n    }\n\n    // componentWillReceiveProps() {\n    //     if (this.props.latestpost && this.props.latestpost.userid) {\n\n    //         const latestpost = this.props.latestpost;\n    //         const postObj = this.state.posts;\n\n    //         let isExist = postObj.find(item => item._id == latestpost._id)\n    //         if (!(isExist && isExist._id)) {\n    //             postObj.unshift(latestpost);\n    //             this.setState({ posts: [] }, () => {\n    //                 this.setState({ posts: postObj });\n    //             });\n    //         }\n    //     }\n    // }\n \n    checkWallet = () =>{\n        console.log(\"okaoay\")\n        walletCheck().then(resp=>{\n            console.log(\"okaokay\")\n            this.getCoins();\n        }, err => {\n            console.log(\"notokaokay\")\n            console.log(err);\n        })\n    }\n\n    getCoins = () => {\n        // var coins = localStorage.getItem(\"allPairs\");\n        // if(coins != null){\n        //     this.setState({\n        //         coins: JSON.parse(coins)\n        //     }, () => {\n        //         this.setState({\n        //             coinsLoaded:true\n        //         })\n        //     })\n        // }\n        getAllPairs().then(resp => {\n            localStorage.setItem(\"allPairs\", JSON.stringify(resp.data));\n            this.setState({\n                coins: resp.data,\n            }, () => {\n                this.setState({\n                    coinsLoaded:true\n                })\n            });\n        }, err => {\n            console.log(err);\n        })\n    }\n\n    getPaginatePost = () => {\n        // if((typeof this.props.currentUser == undefined || this.props.currentUser == null) || (typeof this.props.match != undefined && this.props.match.params.id != null && typeof this.props.match.params.id != undefined && this.props.match.params.id != '' && this.props.match.params.id != this.props.currentUser._id)){\n        //     getProfilePosts({ userid: this.props.match.params.id, limit: this.state.limit, page: this.state.page})\n        //     .then(async resp => {\n        //         this.setState({\n        //             posts: [...this.state.posts, ...resp.post],\n        //             hasMore: resp.post && resp.post.length > 0 ? true : false,\n        //             postLoaded: true, showSkeleton: false\n        //         });\n        //     }, error => {\n                \n        //         this.setState({ postLoaded: true, showSkeleton: false });\n        //     });\n        //   }else{\n        \n        if(this.state.formdata != undefined && this.state.formdata != null && this.state.formdata != ''){\n            var data = this.state.formdata;\n        }else{\n            var data = { userid: this.props.currentUser._id, limit: this.state.limit, page: this.state.page, query: this.props.query, mine: this.props.mine };\n        }\n        if(this.state.filters != null){\n            var f = this.state.filters;\n            data.query = f.key;\n            data.priceFrom = f.priceFrom;\n            data.priceTo = f.priceTo;\n            data.category = f.category;\n         \n        }\n        console.log(this.state.filters, data);\n        getPosts(data, true)\n            .then(async resp => {\n                this.setState({\n                    posts: data.page == 1 ? resp.post : [...this.state.posts, ...resp.post],\n                    hasMore: resp.post && resp.post.length > 0 ? true : false,\n                    postLoaded: true, showSkeleton: false\n                });\n            }, error => {\n                \n                this.setState({ postLoaded: true, showSkeleton: false });\n            });\n        //}\n    }\n\n    loadFunc = () => {\n        if (!this.state.showSkeleton) {\n            this.setState({ showSkeleton: true })\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    page: prevState.page + 1,\n                    showSkeleton: true\n                }\n            }, () => {\n                this.getPaginatePost();\n            })\n        }\n\n    }\n\n    commentLike = (postid, commentId) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ postid, commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    //this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                   // this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n    }\n\n    commentReply = (postid, commentId, comment, commentIndex, callBack) => {\n        replyComment({ postid: postid, commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n        });\n    }\n\n    likePost = (postid, liked) => {\n        likePost({ postid: postid }, true)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    postCmt = (postid) => {\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    showComments = (postid) => {\n\n        getComments({ postid }, true)\n            .then(async resp => {\n                this.setState({ showComments: true });\n            }, error => {\n                \n\n            });\n    }\n\n    refreshHighlights = () => {\n        \n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    getSkeletonContent = (i) => {\n        return (\n            <div className=\"row empty-inner-container-with-border post\" key={i}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <ul className=\"list-group w-100 m-0\">\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <ContentLoader\n                                    speed={2}\n                                    width={610}\n                                    height={350}\n                                    viewBox=\"0 0 610 350\"\n                                    backgroundColor=\"#f3f3f3\"\n                                    foregroundColor=\"#ecebeb\"\n                                    \n                                >\n                                    <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                    <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                    <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                    <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                                </ContentLoader>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const { post, showComments, commentText } = this.state;\n\n        return (\n            <div>\n                {\n                    this.props.loadMore ?\n                    <InfiniteScroll\n                    pageStart={0}\n                    initialLoad={false}\n                    loadMore={this.loadFunc}\n                    hasMore={this.state.hasMore}\n                >\n                      {this.state.postLoaded && this.state.posts.map((post, i) => (\n                        <BlogPost coins={this.state.coins} post={post} filter=\"\" refreshHighlights={this.refreshHighlights} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                    ))}\n                </InfiniteScroll>\n                :\n                 this.state.postLoaded && this.state.posts.map((post, i) => (\n                    <BlogPost coins={this.state.coins} post={post} filter=\"\" refreshHighlights={this.refreshHighlights} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                ))\n\n                }\n               \n\n                {(this.state.showSkeleton ) &&\n                    <div>\n                        {Array(5).fill().map((item, index) => this.getSkeletonContent(index))}\n                    </div>\n                }\n\n                {(this.state.posts.length === 0 && this.state.postLoaded) &&\n                    <div className=\"post\"><p className=\"post-inner no-found\">No Blogs Found</p></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default BlogPosts;\n","import React, {useEffect, useState} from 'react';\nimport A from '../../A';\nimport './styles.css';\nimport { defaultPic, GetAssetImage } from '../../../globalFunctions';\nimport {getPopularBlogs} from '../../../http/blog-calls';\nimport config from '../../../config';\n\nconst PopularArticles = props => {\n    const [articles, setArticles] = useState([]);\n    const [limit, setLimit] = useState(5);\n    const [page, setPage] = useState(1);\n    const [seemore, setMore] = useState(false);\n    useEffect(() => {\n        getArticles();        \n    }, []);\n    const getArticles = () => {\n        getPopularBlogs({limit: limit, page: page}).then(resp => {\n            console.log(resp);\n            setArticles(resp.post);\n            checkMore();\n        }, error => {\n            console.log(error);\n        });\n    };\n\n    const checkMore = () => {\n        getPopularBlogs({limit: limit, page: page+1}).then(resp => {\n            if(resp.post.length > 0){\n                setMore(true);\n            }\n        }, error => {\n            console.log(error);\n        });\n    }\n\n  return (\n    <div className=\"empty-inner-container-with-border popularArticles widget\">\n    <div className=\"container\">\n        <div className=\"row\">\n            <ul className=\"list-group w-100\">\n                <li className=\"widgetTitle\">\n                    <i className=\"fa fa-star\"></i>\n                    <span>Popular Blogs</span>\n                </li>\n            </ul>\n\n            {\n            articles.length > 0 && articles.map((e, i) => (\n                e.removed > 0 ? null :\n                <ul className=\"list-group w-100\" key={i}>\n                    <li className=\"list-group-item\">\n                        <div className=\"media\">\n                            <div className=\"media-left\">\n                                <A href={\"/blog/\"+e.slug}>\n                                    <div className=\"thumbnail\" style={{backgroundImage: 'url('+(e.contents != undefined && e.contents[0] != undefined ? e.contents[0].content_url : require(\"../../../assets/images/post-image@2x.png\"))+')'}}>\n\n                                    </div>\n                                </A>\n                            </div>\n                            <div className=\"media-body\">\n                                <A href={\"/blog/\"+e.slug}><p className=\"media-heading\">{e.subject}</p></A>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            ))\n            }\n\n           {\n               seemore && <A href=\"/all/popular-blogs\"  className=\"seemore-text\">See More\n               </A>\n           }\n            \n\n        </div>\n    </div>\n</div>\n  );\n\n};\n\nexport default PopularArticles;","import React, { useState, useEffect } from 'react';\nimport A from '../A';\nimport {getCategories } from '../../http/gig-calls';\nimport Button from '../Button';\nimport Slider from '@material-ui/core/Slider';\nimport './styles.scss';\nimport { getBlogCategories } from '../../http/blog-calls';\nimport { GetAssetImage } from '../../globalFunctions';\n\nconst BlogFilter = props => {\n\n  const [category, setCategory] = useState('');\n  const [priceFrom, setPriceFrom] = useState('');\n  const [priceTo, setPriceTo] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [key, setKey] = useState('');\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    getBlogCategories().then(resp => {\n    //   if(l == 1){\n        setCategories(resp);\n    //   }else{\n    //     setSubCategory(\"\");\n    //     setSubCategories(resp)\n    //   }\n    }, err => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    var data = {\n      category,\n      priceFrom,\n      priceTo,\n      key\n    };\n    console.log(data);\n    props.dataChange(data);\n  },[category, priceFrom, priceTo, key]);\n\n    return (\n        <div className=\"widget empty-inner-container-with-border filterWidget\">\n          \n        <div className=\"container\">\n          <div className=\"row\">\n          <ul className=\"list-group w-100\"><li className=\"widgetTitle\">\n          <img src={GetAssetImage(\"Icon feather-filter.png\")} />\n            <span>Filter</span>\n            </li></ul>\n          <form className=\"form p-3 w-100\">\n          <div className=\"form-group\">\n            <label>Search Keyword</label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"eg: Logo Design\" value={key}  onChange={(e) => {setKey(e.target.value)}}  />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Category</label>\n            <select className=\"form-control\" value={category} onChange={(e) => {setCategory(e.target.value); }} ><option value=\"\">All</option>\n            {\n              categories.length > 0 && categories.map((e, i) => {\n                return <option value={e._id}>{e.category}</option>\n              })\n            }\n            </select>\n          </div>\n          \n\n          <div className=\"form-group\">\n            <label>Price Range</label>\n            <div className=\"d-flex align-items-center justify-content-between\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"$\" value={priceFrom}  onChange={(e) => {setPriceFrom(e.target.value)}} />\n            <div className=\"px-2\">-</div>\n            <input type=\"text\" className=\"form-control\" placeholder=\"$\" value={priceTo} onChange={(e) => {setPriceTo(e.target.value)}}  />\n            </div>\n          </div>\n          {/* <div className=\"form-group\">\n            <label>Rating</label>\n            <div className=\"d-flex align-items-center justify-content-between starRating\">\n            <i className={\"fa \"+(rating >= 1 ? 'fa-star' : 'fa-star-o')} onClick={() => {setRating(1)}}></i>\n            <i className={\"fa \"+(rating >= 2 ? 'fa-star' : 'fa-star-o')} onClick={() => {setRating(2)}}></i>\n            <i className={\"fa \"+(rating >= 3 ? 'fa-star' : 'fa-star-o')} onClick={() => {setRating(3)}}></i>\n            <i className={\"fa \"+(rating >= 4 ? 'fa-star' : 'fa-star-o')} onClick={() => {setRating(4)}}></i>\n            <i className={\"fa \"+(rating >= 5 ? 'fa-star' : 'fa-star-o')} onClick={() => {setRating(5)}}></i>\n            <div className=\"px-2 text-small text-secondary\">{rating} and up</div>\n            </div>\n          </div> */}\n         \n          </form>\n\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BlogFilter;"],"sourceRoot":""}