{"version":3,"sources":["pages/ForgotPassword/index.js","components/FrontPageFooter/index.js"],"names":["require","ForgotPassword","props","sendVerificationCode","e","preventDefault","switchLoader","obj","state","fpInput","getVerificationCode","then","resp","a","alertBox","setPasswordStep","setState","authKey","message","error","data","forgotPassword","verificationPage","changePassword","verifyAccessCode","target","encodeURIComponent","authkey","code","accessCodeInput","params","JSON","stringify","verifyAccessCodeService","changeNewPassword","password","newPassword","confirmpassword","confirmPassword","step","setForgetPassword","history","push","handleChange","evt","name","value","this","Fragment","className","href","src","GetAssetImage","alt","action","method","onSubmit","type","placeholder","onChange","variant","disabled","inProgress","React","Component","FrontPageFooter","useState","undefined","layout","config","frontEnd"],"mappings":"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","file":"static/js/52.568d9030.chunk.js","sourcesContent":["import React from 'react';\nimport { alertBox, switchLoader } from '../../commonRedux/';\nimport A from '../../components/A';\nimport Button from '../../components/Button';\nimport FrontPageFooter from '../../components/FrontPageFooter';\nimport { GetAssetImage } from '../../globalFunctions';\nimport { getVerificationCode, setForgetPassword, verifyAccessCodeService } from '../../http/http-calls';\nimport { history } from '../../store';\nrequire(\"../Login/styles.scss\");\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forgotPassword:true,\n      verificationPage:false,\n      changePassword:false,\n      fpInput:\"\",\n      accessCodeInput:\"\",\n      newPassword:\"\",\n      confirmPassword:\"\",\n      authKey:''\n    };\n  }\n  \n  componentDidMount() {\n   \n  }\n  sendVerificationCode = (e) => {\n    e.preventDefault();\n    switchLoader(true,'Sending Access code. Please wait...')\n    let obj = {\"str\":this.state.fpInput};\n    getVerificationCode(obj)\n        .then(async resp => {\n          switchLoader();\n          alertBox(true, 'Please check your email','success');\n          this.setPasswordStep('verificationPage');\n          this.setState({authKey:resp.message});\n        }, error => {\n          alertBox(true, error.data.message);\n          switchLoader();\n        });\n  }\n  setPasswordStep = (obj) => {\n    this.setState({\n      forgotPassword:false,\n      verificationPage:false,\n      changePassword:false,\n      [obj]:true\n    })\n  }\n  verifyAccessCode = (e) => {\n    e.preventDefault();\n    switchLoader(true,'Verify Access code. Please wait...')\n    let obj = {\n      target:encodeURIComponent(this.state.fpInput),\n      authkey:this.state.authKey,\n      code:this.state.accessCodeInput\n    };\n    let params = {\"str\":JSON.stringify(obj)};\n    verifyAccessCodeService(params)\n        .then(async resp => {\n          switchLoader();\n          alertBox(true, 'Verified','success');\n          this.setPasswordStep('changePassword');\n          //this.setState({authKey:resp.message});\n        }, error => {\n          alertBox(true, error.data.message);\n          switchLoader();\n        });\n  }\n  changeNewPassword = (e) => {\n    e.preventDefault();\n    switchLoader(true,'Changing password. Please wait...')\n    let obj = {\n      target:this.state.fpInput,\n      password:this.state.newPassword,\n      confirmpassword:this.state.confirmPassword,\n      step:'3'\n    };\n    setForgetPassword(obj)\n      .then(async resp => {\n        switchLoader();\n        alertBox(true, 'Password successfully updated','success');\n        this.setPasswordStep('changePassword');\n        history.push(\"/login\");\n      }, error => {\n        alertBox(true, error.data.message);\n        switchLoader();\n      });\n  }\n  handleChange = (evt) => {\n    const { name, value } = evt.target;\n    this.setState({ [name]: value });\n  }\n  render() {\n    const {fpInput,accessCodeInput,forgotPassword,verificationPage,changePassword,newPassword,confirmPassword} = this.state;\n    return (\n      <React.Fragment>\n      <div className=\"loginPage\">\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n          <A href=\"/\"><img className=\"logo\" src={GetAssetImage('logo-main.png')} alt=\"\" /></A>\n          <p className=\"intro-text\">Social Media Platform with Trusted Cryptocurrency Exchange</p>\n          <img className=\"coins\" src={GetAssetImage('front/coins1.png')} />\n          </div>\n          <div className=\"col-md-5\">\n            <div className=\"loginForm\">\n            {forgotPassword &&\n              <form action=\"\" method=\"post\" onSubmit={this.sendVerificationCode} >\n                <h1>Forgot Password?</h1>\n                <p className=\"text-secondary\">Enter your registered email address and \n                      we'll send you the link to reset the \n                      password</p>\n                      <div className=\"input-group mb-3\">\n                        <input type=\"text\" className=\"form-control bl_0\" placeholder=\"eg: hello@eclipton.com \" name=\"fpInput\" value={fpInput}\n                            onChange={(e) => this.handleChange(e)} />\n                      </div>\n                <div className=\"form-group\">\n                  <Button variant=\"primary\" className=\"big box w-100  mt-2 d-block\" disabled={this.props.inProgress}>CONTINUE</Button>\n                </div>\n              </form>\n             }\n             {verificationPage &&\n              <form action=\"\" method=\"post\" onSubmit={this.verifyAccessCode} >\n                <h1>Reset Password</h1>\n                <p className=\"text-secondary\">Enter access code received from your registered email address.</p>\n                <div className=\"input-group mb-3\">\n                          <input type=\"text\" className=\"form-control bl_0\" placeholder=\"Access code\" name=\"accessCodeInput\" value={accessCodeInput}\n                            onChange={(e) => this.handleChange(e)} />\n                      </div>\n                <div className=\"form-group\">\n                  <Button variant=\"primary\" className=\"big box w-100  mt-2 d-block\" disabled={this.props.inProgress}>CONTINUE</Button>\n                </div>\n              </form>\n             }\n              {changePassword &&\n              <form action=\"\" method=\"post\" onSubmit={this.changeNewPassword} >\n                <h1>Reset Password</h1>\n                <p className=\"text-secondary\">Enter access code received from your registered email address.</p>\n                <div className=\"input-group mb-3\">\n                  <input type=\"password\" className=\"form-control bl_0\" placeholder=\"Password\" name=\"newPassword\" value={newPassword}\n                      onChange={(e) => this.handleChange(e)} />\n                </div>\n                <div className=\"input-group mb-3\">\n                    <input type=\"password\" className=\"form-control bl_0\" placeholder=\"Confirm Password\" name=\"confirmPassword\" value={confirmPassword}\n                      onChange={(e) => this.handleChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                  <Button variant=\"primary\" className=\"big box w-100  mt-2 d-block\" disabled={this.props.inProgress}>RESET PASSWORD</Button>\n                </div>\n              </form>\n             }\n               \n                <h3 className=\"new\">Remember your Password?</h3>\n                <A href=\"/login\" className=\"join\">Login</A>\n\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      <FrontPageFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ForgotPassword;\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport A from '../A';\nimport { GetAssetImage } from '../../globalFunctions';\nimport './styles.css';\nimport config from '../../config';\n\n  \nconst FrontPageFooter = props => {\n    const [layout, setLayout] = useState(props.layout != undefined ? props.layout : \"default\");\n    // const [size, setSize] = useState(props.size != undefined ? props.size : \"\");\n    \n  return (\n    <footer className=\"frontFooter\">\n      <div className=\"container\">\n      <p>Copyright &copy; 2021 Eclipton | All rights reserved</p>\n      <p className=\"pl-3 pr-3\">Activity licence FVT000294</p>\n      <div className=\"d-flex align-items-center justify-content-end flex-wrap foot-menu\">\n        {/* <A href=\"#\">Privacy Policy</A> */}\n        <a href={config.frontEnd+\"terms-and-conditions.pdf\"} target=\"_BLANK\">Terms & Conditions</a>\n        <A href=\"/contact-us\">Contact Us</A>\n        {/* <A href=\"#\">Request Partnership</A> */}\n      </div>\n      </div>\n    </footer>\n  );\n\n};\n\nexport default FrontPageFooter;"],"sourceRoot":""}