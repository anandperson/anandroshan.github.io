{"version":3,"sources":["pages/MyBlogs/edit.js","http/blog-calls.js","pages/MyBlogs/tools.js","components/FormFields/FileBrowse.js"],"names":["require","EditBlog","props","tagChange","val","console","log","setStateFunc","key","value","setState","getBlog","getSinglePost","postid","match","params","id","userid","currentUser","_id","then","resp","a","post","title","subject","data","JSON","parse","editorContent","text","amount","price","tags","undefined","hashtags","currency","preferedCurrency","category","paymentType","paidPost","edit_image","contents","content_url","loading","document","getElementById","click","error","onEditorStateChange","editorState","handleInput","e","target","name","handleRemove","getAttribute","handleFile","type","reader","FileReader","onload","src","result","readAsDataURL","handleCheckbox","checked","dataChange","submit","preventDefault","editor","save","edata","err","state","push","blocks","length","post_image","alertBox","join","edjsParser","postImages","formData","FormData","append","stringify","switchLoader","updateBlog","window","location","href","uploadImageCallBack","file","Promise","resolve","reject","uploadFile","out","link","filePath","review","editorjsHTML","refreshing","filter","latestpost","currentTab","suggestions","React","createRef","reactTags","i","this","slice","splice","tag","concat","className","onSubmit","method","placeholder","onChange","instanceRef","instance","tools","EDITOR_JS_TOOLS","uncheckedValue","for","vlaue","page","fileChange","accept","tmp_name","onClick","onItemAdded","item","allItems","onItemDeleted","label","values","variant","size","Component","getBlogCategories","makeAxiosGetRequest","config","baseUrl","res","catch","response","createBlog","makeAxiosPostRequest","getPosts","auth","getFilteredBlogPosts","postRemove","getPopularBlogs","getCategoryBlogs","getAuthorBlogs","clap","sendTips","purchaseBlog","checkPurchasedBlog","likePost","postComment","likeComment","replyComment","getBlogDraft","getBlogStats","embed","Embed","table","Table","marker","Marker","list","List","warning","Warning","code","Code","image","class","Image","endpoints","byFile","byUrl","raw","Raw","header","Header","quote","Quote","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","FileBrowse","useState","selected","setSelected","setAccept","setLoading","useEffect","st","s","split","forEach","el","trim","browse","data-target","files","ft","ft2","indexOf","message","inputChange"],"mappings":"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","file":"static/js/36.0141183f.chunk.js","sourcesContent":["import editorjsHTML from 'editorjs-html';\nimport React from 'react';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport EditorJs from 'react-editor-js';\nimport MultipleValueTextInput from 'react-multivalue-text-input';\nimport { alertBox, switchLoader } from '../../commonRedux/';\nimport Button from '../../components/Button';\nimport FileBrowse from '../../components/FormFields/FileBrowse';\nimport { getSinglePost, updateBlog } from '../../http/blog-calls';\nimport { uploadFile } from '../../http/http-calls';\nimport { EDITOR_JS_TOOLS } from './tools';\n\n\nrequire (\"./styles.scss\");\n\nclass EditBlog extends React.Component {\n  constructor(props) {\n    super(props);\n    const edjsParser = editorjsHTML();\n    this.state = {\n      post: null,\n      loading:true,\n      data: '',\n      title: '',\n      edjsParser: edjsParser,\n      refreshing: false,\n      filter: '',\n      latestpost: {},\n      paymentType: 'free',\n      post_image: null,\n      edit_image: null,\n      currentTab: 0,\n      tags: \"\",\n      amount: 0,\n      category: \"General\",\n      suggestions: [\n        { id: 3, name: \"Bananas\" },\n        { id: 4, name: \"Mangos\" },\n        { id: 5, name: \"Lemons\" },\n        { id: 6, name: \"Apricots\" }\n      ]\n    };\n     \n    this.editor = React.createRef();\n    this.reactTags = React.createRef()\n  }\n  onDelete (i) {\n    const tags = this.state.tags.slice(0)\n    tags.splice(i, 1)\n    this.setState({ tags })\n  }\n \n  onAddition (tag) {\n    const tags = [].concat(this.state.tags, tag)\n    this.setState({ tags })\n  }\n\n  tagChange = (val) => {\n    console.log(val)\n  }\n  setStateFunc = (key,value) => {\n    this.setState({[key]:value});\n  }\n  componentDidMount() {\n    this.getBlog()\n  }\n\n  getBlog = () => {\n    getSinglePost({ postid: this.props.match.params.id, userid: (this.props.currentUser && this.props.currentUser._id ? this.props.currentUser._id : 0)})\n    .then(async resp => {\n      \n      var post = resp.post[0];\n      console.log(post);\n        this.setState({\n            title: post.subject,\n            post: post,\n            data: JSON.parse(post.editorContent),\n            text: post.text,\n            amount: post.price,\n            tags: post.hashtags == undefined || post.hashtags[0] == undefined || post.hashtags[0] == '' ? [] : post.hashtags,\n            currency: post.preferedCurrency,\n            category: post.category,\n            paymentType: post.paidPost ? 'paid' : 'free',\n            edit_image: post.contents[0].content_url,\n            loading:false,\n        },() => {\n          if(post.paidPost){\n          document.getElementById(\"paid\").click();\n          }\n        });\n    }, error => {\n        this.setState({ loading: false });\n    });\n  }\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  handleInput = (e) => {\n    var val =  e.target.value;\n    var name =  e.target.name;\n    console.log(name+\":\"+val);\n    this.setState({\n        [name] : val\n    })\n  };\n\n  handleRemove = (e) => {\n    var name =  e.target.getAttribute(\"name\");\n    this.setState({\n        [name] : null\n    })\n  };\n\n  handleFile = (name, type, value) => {\n    console.log(value);\n    this.setState({\n        [name] : value\n    },()=>{\n      var reader  = new FileReader();\n    // it's onload event and you forgot (parameters)\n      reader.onload = function(e)  {\n          var image = document.getElementById(name+\"_preview\");\n          image.src = e.target.result;\n      }\n      // you have to declare the file loading\n      reader.readAsDataURL(value);\n    })\n  };\n  \n\n  handleCheckbox = (e) => {\n    var name =  e.target.name;\n    console.log(name);\n    if(e.target.checked){\n      var val =  e.target.value;\n      console.log(val);\n      this.setState({\n        [name] : val\n      })\n    }else{\n      var val =  e.target.getAttribute(\"uncheckedValue\");\n      console.log(val);\n      this.setState({\n        [name] : val\n      })\n    }\n    \n  };\n\n  dataChange = (e) => {\n    console.log(e);\n  };\n\n  submit = async (e) => {\n    e.preventDefault();\n    var edata = await this.editor.save();\n    \n    var err = [];\n    if(this.state.title == ''){\n      err.push(\"Title is required\");\n    }\n    if(edata.blocks.length <= 0 ){\n      err.push(\"Content is required\");\n    }\n    if(this.state.post_image == null && this.state.edit_image == null ){\n      err.push(\"Main Image is required\");\n    }\n\n    if(err.length > 0){\n      alertBox(true, err.join(\", \"));\n    }\n    else {\n     \n    var data = this.state.edjsParser.parse(edata);\n    data = data.join(\" \");\n    var postImages = this.state.post_image;\n    if(this.state.tags.length > 0){\n      var hashtags = this.state.tags.join(\",\");\n    }else{\n      var hashtags = '';\n    }\n    \n    const formData = new FormData();    \n\t\tformData.append('id', this.state.post._id);\n    formData.append('postImgs', postImages);\n    formData.append('text', data);\n    formData.append('editorContent', JSON.stringify(edata));\n    formData.append('subject', this.state.title);\n    formData.append('hashtags', hashtags);\n    formData.append('paymentType', this.state.paymentType);\n    formData.append('amount', this.state.amount);\n    formData.append('currency', this.state.currency);\n    formData.append('category', this.state.category);\n\t\tswitchLoader('Your post is being updated...');\n\t\tupdateBlog(formData)\n    .then(async resp => {\n      window.location.href=\"/blogs\";\n      switchLoader();\n    }, error => {\n      switchLoader();\n    });\n    }\n  }\n  \n  uploadImageCallBack = (file) => {\n    return new Promise(  (resolve, reject) => {\n    uploadFile({file: file}).then(resp => {\n      var out = {data: {link: resp.file.filePath }};\n      console.log(out);\n      resolve(out);\n    }, error =>{\n      reject(error);\n    })\n  });\n    // return new Promise(\n    //   (resolve, reject) => {\n    //     const xhr = new XMLHttpRequest();\n    //     xhr.open('POST', 'https://api.imgur.com/3/image');\n    //     xhr.setRequestHeader('Authorization', 'Client-ID ##clientid##');\n    //     const data = new FormData();\n    //     data.append('image', file);\n    //     xhr.send(data);\n    //     xhr.addEventListener('load', () => {\n    //       const response = JSON.parse(xhr.responseText);\n    //       console.log(response)\n    //       resolve(response);\n    //     });\n    //     xhr.addEventListener('error', () => {\n    //       const error = JSON.parse(xhr.responseText);\n    //       console.log(error)\n    //       reject(error);\n    //     });\n    //   }\n    // );\n  }\n\n  review =()=>{\n\n  };\n\n    render() {\n    \n        return (\n            // <!-- Wall container -->\n            this.state.loading ? \n            <div></div>\n            :\n            <div className=\"addBlogPage\">\n            <div className=\"container my-wall-container \">\n              <div className=\"row mt-2\">\n\n                {/* <!-- left column --> */}\n                \n                {/* <!-- end left column --> */}\n\n                {/* <!-- center column --> */}\n                <div className=\"col-sm empty-container-with-border center-column big mx-auto p-4\">\n                  <h1 className=\"text-center\">Edit Article</h1>\n                  <form onSubmit={(e) => this.submit(e)} method=\"post\">\n                      <div className=\"form-group\">\n                          <strong>Title of the Article</strong>\n                          <input  type=\"text\" placeholder=\"Alpha numeric\" name=\"title\" value={this.state.title} className=\"form-control\" onChange={this.handleInput} />\n                      </div>\n                     \n                        <div className=\"form-group\">\n                          <strong>Content</strong>\n                          {/* <Editor\n          editorState={this.state.editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n        /> */}\n        {/* <Editor\n        editorState={this.state.editorState}\n        onEditorStateChange={this.onEditorStateChange}    \n        toolbar={{\n          inline: { inDropdown: true },\n          list: { inDropdown: true },\n          textAlign: { inDropdown: true },\n          link: { inDropdown: true },\n          history: { inDropdown: true },\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\n        }}\n      /> */}\n      <EditorJs instanceRef={instance => {this.editor = instance}} data={this.state.data} tools={EDITOR_JS_TOOLS} />\n\n        \n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" name=\"paymentType\" value=\"paid\" id=\"paid\" uncheckedValue=\"free\" onChange={this.handleCheckbox} />\n                        <label className=\"form-check-label\" for=\"defaultCheck1\" >\n                            Make this article paid\n                        </label>\n                        </div>\n                        </div>\n                        {\n                          this.state.paymentType == 'paid' && <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Price</strong>\n                                <input type=\"text\" placeholder=\"Amount\" name=\"amount\" className=\"form-control\" value={this.state.amount}  onChange={this.handleInput} />\n                                <small className=\"text-secondary\">Enter how much you want to charge for your content</small>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Currency</strong>\n                                <select type=\"text\" placeholder=\"Amount\" className=\"form-control\" id=\"currency\" name=\"currency\" value={this.state.currency}  onChange={this.handleInput} >\n                                  <option vlaue=\"\">Choose</option>\n                                  <option>USD</option>\n                                  <option>BTC</option>\n                                  <option>ETH</option>\n                                  <option>LTC</option>\n                                  <option>XRP</option>\n                                  <option>BCH</option>\n                                  <option>USDT</option>\n                                </select>\n                                <small className=\"text-secondary\">Enter how much you want to charge for your content</small>\n                            </div>\n                          </div>\n                          </div>\n                        }\n                        \n                          <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Main Image</strong>\n                                <FileBrowse name=\"post_image\" page=\"blogs\" fileChange={this.handleFile} value={this.state.post_image} accept=\"image/*\" />\n                                <small className=\"text-secondary\">Replace the main image for your article</small>\n                                \n                                {\n                                  this.state.post_image == null && this.state.edit_image != null && <div className=\"uploadedImage\"><img src={this.state.edit_image} id=\"post_image_preview\" /></div>\n                                }\n                                {\n                                  this.state.post_image != null && <div className=\"uploadedImage\"><img src={this.state.post_image.tmp_name} id=\"post_image_preview\" /><div className=\"fa fa-times remove\" name=\"post_image\" onClick={this.handleRemove}></div></div>\n                                }\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Category</strong>\n                                <select type=\"text\" name=\"category\" className=\"form-control\" value={this.state.category} onChange={this.handleInput}>\n                                    <option value=\"General\">General</option>\n                                    <option value=\"Technology\">Technology</option>\n                                    <option value=\"Politics\">Politics</option>\n                                </select>\n                                <small className=\"text-secondary\">Select one related</small>\n                            </div>\n                          </div>\n                          \n                      </div>\n                      <div className=\"form-group\">\n                                <strong>Tags</strong>\n                                <MultipleValueTextInput\n                                    onItemAdded={(item, allItems) => this.setState({tags: allItems})}\n                                    onItemDeleted={(item, allItems) => this.setState({tags: allItems})}\n                                    label=\"\"\n                                    values={this.state.tags}\n                                    name=\"item-input\"\n                                    placeholder=\"Do not include #\"\n                                />\n                                \n                                <small className=\"text-secondary\">Separate tags using commas</small>\n                            </div>\n                            <div className=\"form-group\">\n                                <Button variant=\"primary\" size=\"big\" >Update</Button>\n                                {/* <Button type=\"button\" variant=\"primary-outline\" className=\"ml-2\" size=\"big\" onClick={(e) => this.review(e)}>Review</Button> */}\n                            </div>\n\n                  </form>\n                </div>\n                {/* <div className=\"col-sm empty-container-with-out-border center-column\">\n                  Twitter Tweets\n                </div> */}\n                {/* <!-- end center column --> */}\n\n                {/* <!--  right column --> */}\n              \n                {/* <!-- end right column --> */}\n              </div>\n            </div>\n\n        \n\n            </div>\n\n      )\n    }\n}\n\nexport default EditBlog;\n","import config from \"../config/index\";\nimport {\n    makeAxiosGetRequest,\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n\n/**\n * createPost\n * @param {object} data\n */\n\nexport const getBlogCategories = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-categories`, true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const createBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"create-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const updateBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"update-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n/**\n * register\n * @param {object} data email and password\n */\nexport const getPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-posts\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getGlobalPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-global-blogs\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getFilteredBlogPosts = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-filtered-blog-posts\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postRemove = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"remove-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getComments = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-comments`, auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\n\nexport const getSinglePost = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getPopularBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-popular-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getCategoryBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-category-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getAuthorBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-author-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const getSuggestedBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-suggested-blogs\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const clap = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"blog-clap\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const sendTips = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"send-tips\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const purchaseBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"purchase-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const checkPurchasedBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"check-purchased-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likePost = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + \"like-blog\", auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const postComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + 'comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likeComment = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'like-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const replyComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'reply-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getBlogDraft = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-draft\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const postSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postUnSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"un-save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\nexport const getBlogStats = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"blog-stats\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};","import Embed from \"@editorjs/embed\";\nimport Table from \"@editorjs/table\";\nimport List from \"@editorjs/list\";\nimport Warning from \"@editorjs/warning\";\nimport Code from \"@editorjs/code\";\nimport LinkTool from \"@editorjs/link\";\nimport Image from \"@editorjs/image\";\nimport Raw from \"@editorjs/raw\";\nimport Header from \"@editorjs/header\";\nimport Quote from \"@editorjs/quote\";\nimport Marker from \"@editorjs/marker\";\nimport CheckList from \"@editorjs/checklist\";\nimport Delimiter from \"@editorjs/delimiter\";\nimport InlineCode from \"@editorjs/inline-code\";\nimport SimpleImage from \"@editorjs/simple-image\";\nimport config from \"../../config\";\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  marker: Marker,\n  list: List,\n  warning: Warning,\n  code: Code,\n  // linkTool: LinkTool,\n  image: {\n      class: Image,\n      config: {\n        endpoints: {\n          byFile: config.baseUrl+'editor-upload', // Your backend file uploader endpoint\n          byUrl: config.baseUrl+'fetchUrl', // Your endpoint that provides uploading by Url\n        }\n      }\n    },\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n};\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport { uploadFile } from '../../http/http-calls';\nimport { alertBox } from '../../commonRedux/';\nimport './styles.css';\n\n  \nconst FileBrowse = props => {\n    const [selected, setSelected] = useState('');\n    const [accept, setAccept] = useState('valid');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(()=>{\n        var st = props.accept;\n        if(st != undefined && st != null && st != '' && st != '*'){\n            var s = 'valid ';\n            var sts = st.split(\",\");\n            sts.forEach((el)=> {\n                if(el.trim() == 'image/*'){\n                    s += \"image\";\n                }else{\n                    s += \", pdf\";\n                }\n            });\n            setAccept(s);\n        }\n    }, []);\n\n    const browse = (e) => {\n        var target = e.target.getAttribute(\"data-target\");\n        document.getElementById(target).click();\n    };\n    \n    const inputChange = (e) => {\n        var val = e.target.files[0];\n        var st = props.accept;\n        var ft = val['type'];\n        console.log(ft)\n        var ft2 = ft.split('/')[0];\n        var ftf = ft2;\n        if(ft2 == 'application'){\n            ft2 = ft; \n            ftf = ft.split('/')[1];\n        }\n        if(st == undefined || st == null || st == '' || st == '*' || st.indexOf(ft2) != -1){\n            setSelected(val.name);\n            if(props.type == \"upload\"){\n                setLoading(true);\n                uploadFile({page: props.page == null ? \"general\" : props.page, file: val}).then(async resp => {\n                    props.fileChange(props.name, props.type, resp.file.filePath )\n                    console.log(resp);\n                    setLoading(false);\n                }, error => {\n                    setLoading(false);\n                    alertBox(true, error.message);\n                });\n            }else{\n                props.fileChange(props.name, props.type, val);\n            }\n        }else{\n            alertBox(true,\"Please choose \"+accept+\" files only\");\n        }\n    };\n\n  return (\n   <div className=\"fileBrowse\">\n    <div className=\"d-flex justify-content-start align-items\">\n        <input className=\"form-control\" value={props.type == \"upload\" ? selected : props.value != undefined ? props.value.name : ''} type=\"text\" placeholder=\"jpg, png, jpeg, pdf files only\" data-target={props.name} onClick={(e) => browse(e)}  />\n        <input type=\"file\" name=\"file\" className=\"hide\" id={props.name} onChange={(e) => inputChange(e)} accept={props.accept != undefined && props.accept != null ? props.accept : \"*\"} />\n        <button className=\"btn btn-main box\" data-target={props.name} type=\"button\" onClick={(e) => browse(e)}>\n            {loading ? <Spinner /> : \"Browse\"}\n        </button>\n    </div>\n   </div>\n  );\n\n};\n\nexport default FileBrowse;\n\n"],"sourceRoot":""}