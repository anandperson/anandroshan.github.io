{"version":3,"sources":["pages/Gionomy/index.js","components/RewardsWidget/index.js"],"names":["Gigonomy","props","reportModal","p","i","t","setState","lastData","lastI","lastType","state","report","link","_id","postReport","id","type","category","reason","then","resp","a","alertBox","message","temp","posts","reported","error","data","unReport","post","postUnReport","componentDidMount","categoryChange","c","cid","currentTab","dataChange","getData","getRequests","gigs","d","console","log","page","limit","currentUser","getGigs","err","allGigRequests","changeTab","newValue","subCategory","priceFrom","priceTo","rating","key","className","displayModal","this","closeModal","value","onChange","e","target","placeholder","variant","size","onClick","href","length","map","gig","React","Component","RewardsWidget","useState","loading","status","setStatus","useEffect","walletCheck","src","GetAssetImage"],"mappings":"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","file":"static/js/56.1f90c1a5.chunk.js","sourcesContent":["import React from 'react';\nimport { alertBox } from '../../commonRedux/';\nimport A from '../../components/A';\nimport Button from '../../components/Button';\nimport GigFilter from '../../components/Filter/gigFilter';\nimport CreateGigWidget from '../../components/Gigs/Create';\nimport Gig from '../../components/Gigs/Gig';\nimport GigRequest from '../../components/Gigs/GigRequest';\nimport PopularGigs from '../../components/Gigs/PopularGigs';\nimport Modal from '../../components/Popup';\nimport RewardsWidget from '../../components/RewardsWidget';\nimport TabsUI from '../../components/Tabs/index';\nimport { allGigRequests, getGigs } from '../../http/gig-calls';\nimport { postReport, postUnReport } from '../../http/http-calls';\nimport './gigs.css';\n\nclass Gigonomy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 4,\n            page: 1,\n            cid: 0,\n            posts: [],\n            category: '',\n            reason: '',\n            reportModal:false,\n            data: {\n                category: \"\",\n                subCategory : \"\",\n                priceFrom : \"\",\n                priceTo : \"\",\n                rating : \"\",\n                key: \"\"\n            },\n            lastData: null,\n            lastI: null,\n            lastType:null,\n            gigs: [],\n            currentTab:0\n        }\n    }\n\n    reportModal = (p = null, i = null, t=null) => {\n        this.setState({\n            lastData: p,\n            lastI: i,\n            lastType: t\n        });\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n\n    report = () => {\n            var lastData = this.state.lastData;\n            var lastI = this.state.lastI;\n            var link = \"gigonomy/gig/\"+lastData._id;\n            postReport({ id: lastData._id, type: this.state.lastType, link, category: this.state.category, reason: this.state.reason })\n            .then(async resp => {\n                alertBox(true, resp.message, 'success');\n                var temp = this.state.posts;\n                temp[lastI].reported = 1;\n                this.setState({ reportModal: false, posts: temp });\n            }, error => {\n                alertBox(true, error.data.message);\n                this.setState({ reportModal: false});\n            });\n    \n    };\n    unReport = (post, i) => {\n        postUnReport({ id: post._id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            var temp = this.state.posts;\n            temp[i].reported = 0;\n            this.setState({ reportModal: false, posts: temp });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    componentDidMount = () => {\n        // this.getData();\n        // this.getRequests();\n    }\n\n    categoryChange = (c) => {\n        this.setState({\n            cid: c,\n            currentTab: 0\n        })\n    }\n    \n    dataChange = (data = {}) => {  \n        //this.props.history.push(\"/passionomy/gig\");\n        this.getData(data);\n        this.getRequests(data);\n    }\n\n    getData =(data = {}) => {\n        this.setState({\n            gigs: []\n        })\n        var d = data;\n        console.log(d)\n        d['page']  = this.state.page;\n        d['limit'] = this.state.limit;\n        d['userid'] = this.props.currentUser._id;\n        getGigs(d).then(resp => {\n            this.setState({\n                gigs: resp.post\n            }, () => {\n                console.log(this.state.gigs)\n            });\n        }, err=>{\n            console.log(err);\n        })\n    }\n\n    getRequests = (data = {}) => {\n        this.setState({\n            posts: []\n        })\n        var d = data;\n        d['page']  = this.state.page;\n        d['limit'] = this.state.limit;\n        d['userid'] = this.props.currentUser._id;\n        allGigRequests(data).then(resp => {\n          this.setState({\n            posts: resp\n          })\n        }, err => {\n  \n        });\n    }\n    changeTab = (newValue) => {\n        this.setState({currentTab: newValue});\n    };\n\n    render() {\n        return (\n            <div className=\"gigsPage\">\n                <Modal displayModal={this.state.reportModal} closeModal={this.reportModal} >\n                     <div>\n                         <div className=\"form-group\">\n                             <select className=\"form-control\" value={this.state.category}  onChange={(e) => this.setState({category: e.target.value})}>\n                                 <option value=\"\">Select Category</option>\n                                 <option>Violence</option>\n                                 <option>Racism / Hatespeech</option>\n                                 <option>Pornographic</option>\n                                 <option>Spam</option>\n                                 <option>Other</option>\n                             </select>\n                         </div>\n                         <div className=\"form-group\">\n                             <textarea type=\"text\" placeholder=\"Reason\" className=\"form-control\" onChange={(e) => this.setState({reason: e.target.value})} value={this.state.reason} />\n                         </div>\n                     </div>\n                <div className=\"\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.report()}>Report</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.reportModal}>Cancel</Button>\n                </div>\n             </Modal>\n            <div className=\"container my-wall-container \">\n                \n              <div className=\"row mt-2\">\n                {/* <!-- left column --> */}\n                <div className=\"col-sm empty-container-with-out-border left-column\">\n                <GigFilter dataChange={this.dataChange}/>\n                </div>\n                {/* <!-- end left column --> */}\n\n                {/* <!-- center column --> */}\n                <div className=\"col-sm empty-container-with-out-border center-column\">\n                    <div className=\"banner\">\n                        <div className=\"banner-header\"></div>\n                        <div className=\"banner-body\">\n                            <div className=\"banner-icon\">\n                            </div>\n                            <div className=\"banner-desc\">\n                                <h3>Let's hire work or hire talents!</h3>\n                                <p>An easy marketplace for digital services where individuals or companies can go to find freelancers and gigs with a skill that suits their needs.</p>\n                            </div>\n                            <div className=\"banner-btns\">\n                                <A href=\"/passionomy/gigs/add\"><Button>Create Gig</Button></A> <A href=\"/passionomy/requests/add\"><Button>Hire Talents</Button></A>\n                            </div>\n                        </div>\n                    </div>\n\n                    \n                    \n                    <div className=\"d-flex align-items-center justify-content-between\">\n                        <div>\n                            <h3 className=\"gtitle\">Talents you may like</h3>\n                            <h4 className=\"gsubtitle\">Gigs you might be interested in</h4>\n                        </div>\n                        <A href={\"/passionomy/gigs\"}><Button variant=\"primary-outline\">View All</Button> </A>\n                    </div>\n                    <div className=\"clearfix\">\n                \n                    {\n                        this.state.gigs.length == 0 ?\n                        <p className=\"no-found\">No Gigs Found</p>\n                        :\n                        <div className=\"row-1\">\n                        {\n                        this.state.gigs.map((gig, i) => {\n                            \n                            return <Gig {...this.props} post={gig} />\n                        })\n                        }\n                        </div>\n                    }\n                </div>\n                    <div className=\"d-flex align-items-center justify-content-between\">\n                        <div>\n                            <h3 className=\"gtitle mt-4\">Jobs you may like</h3>\n                            <h4 className=\"gsubtitle\">Gigs that are popular now</h4>\n                        </div>\n                        <A href={\"/passionomy/requests\"}><Button variant=\"primary-outline\">View All</Button> </A>\n                    </div>\n                    \n                    <div className=\"clearfix\">\n                    {\n                        this.state.posts.length == 0 ?\n                        <p className=\"no-found\">No Gig Requests Found</p>\n                        :\n                        <div className=\"row-1\">\n                            {\n                        this.state.posts.map((gig, i) => {\n                            return <GigRequest {...this.props} post={gig} />\n                        })\n                    }\n                    </div>\n                    }\n                \n                    \n                </div>\n\n                \n                    \n                </div>\n                {/* <!-- end center column --> */}\n\n                {/* <!--  right column --> */}\n                <div className=\"col-sm empty-container-with-out-border right-column\">\n                    <RewardsWidget {...this.props} />\n                    {/* <CreateGigWidget extra={true} />\n                    <PopularGigs /> */}\n                </div>\n                {/* <!-- end right column --> */}\n              </div>\n            </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Gigonomy;","import React, { useState, useEffect } from \"react\";\nimport A from \"../A\";\nimport Button from \"../Button\";\nimport \"./style.css\";\nimport Spinner from \"../Spinner\";\nimport { getTradePairs } from \"../../http/wallet-calls\";\nimport { GetAssetImage } from \"../../globalFunctions\";\nimport walletCheck from \"../../hooks/walletCheck\";\n\nconst RewardsWidget = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(null);\n\n  useEffect(() => {\n    walletCheck().then((resp) => {\n      try {\n        setStatus(resp.data.status);\n      } catch (error) {}\n    });\n  }, []);\n\n  return (\n    <div\n      className={\n        \" empty-inner-container-with-border widget rewardsWidget \" +\n        (props.variant != null && \" \" + props.variant)\n      }\n    >\n      <div className=\"col\">\n        <ul className=\"list-group w-100\">\n          <li className=\"widgetTitle\">\n            <img src={GetAssetImage(\"icon-material-royalty.svg\")} />\n            <span>Rewards</span>\n          </li>\n        </ul>\n        {/* <div className=\"list-group-item d-flex justify-content-between align-items-center header-drak widgetTitle\">\n                  <div>BUY CRYPTOCURRENCY</div>\n                </div> */}\n        <div className=\"widgetBody\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <div className=\"flex-row\">\n              <img\n                src={GetAssetImage(\"icon-material-stars.svg\")}\n                className=\"icon-star\"\n              />\n\n              {status == \"Accept\" ? (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>400 Points</strong> on\n                    your KYC.\n                  </p>\n                  <p>\n                    Refer your friend and earn <strong>500 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              ) : (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>100 Points</strong> on\n                    your Registration.\n                  </p>\n                  <p>\n                    Complete your KYC and earn <strong>400 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RewardsWidget;\n"],"sourceRoot":""}