{"version":3,"sources":["components/Menu/SearchMenu.js","components/Post/GlobalPosts.js","components/User/Users.js","components/Skeleton/index.js","pages/SearchResult/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","http/blog-calls.js","components/Post/BlogPost.js","components/Post/BlogPosts.js","components/Post/Gigs.js"],"names":["require","SearchMenu","props","useState","current","setCurrent","useEffect","Fragment","className","onClick","e","GlobalPosts","refreshHighlights","getPaginatePost","search","query","undefined","getGlobalPosts","limit","state","page","then","resp","a","setState","posts","post","showSkeleton","hasMore","length","postLoaded","error","loadFunc","prevState","commentLike","commentId","likeComment","message","commentReply","comment","commentIndex","callBack","replyComment","likePost","postId","liked","postid","postCmt","obj","commentText","postComment","showComments","getComments","handleChange","evt","index","target","name","value","replyCmt","getSkeletonContent","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","bind","this","prevProps","loadMore","latestPost","userid","postObj","isExist","find","item","_id","unshift","pageStart","initialLoad","map","i","Post","key","currentUser","Array","fill","React","Component","SearchUsers","componentDidMount","console","log","users","getUsers","getGlobalUsers","user","A","href","src","profilePic","avatar","alt","Button","variant","size","SearchResult","setStateFunc","handleInput","searchQuery","setFilter","localStorage","setItem","history","push","handleSearch","preventDefault","queryParse","location","encodeURIComponent","filter","latestpost","latestpost2","isLoading","count","result","q","onSubmit","type","placeholder","onChange","BlogPosts","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","getBlogCategories","params","Promise","resolve","reject","makeAxiosGetRequest","config","baseUrl","res","data","catch","response","createBlog","makeAxiosPostRequest","updateBlog","getPosts","auth","getFilteredBlogPosts","postRemove","getSinglePost","getPopularBlogs","getCategoryBlogs","getAuthorBlogs","clap","sendTips","purchaseBlog","checkPurchasedBlog","getBlogDraft","getBlogStats","BlogPost","extractUrl","text","regex","RegExp","match","reportModal","single","txt","JSON","parse","editorContent","postText","blocks","getCoins","coins","tips","len","findIndex","currencySymbol","currency","amount","EstimatedUSD","postActivityCount","activityType","action","editPost","id","save","postSave","alertBox","saved","unSave","postUnSave","report","p","category","link","slug","postReport","reason","reported","unReport","postUnReport","hidePost","postHide","hidden","unhidePost","postUnHide","removePost","last","open","removePostConfirm","removed","highlightPost","postHighlight","highlighted","unHighlight","postUnHighlight","likePostFn","likeActive","sharePost","shareModel","currPost","closeShareModal","handleOnReady","setTimeout","playing","handleClose","switchLoader","shareSuccess","showCommentReply","el","tempPostData","showReply","showCommentReplies","getReplyComments","replies","callBackCommentReply","replyData","tempReplyCmt","getPostContent","url","thumb","pic","contents","content_url","k","title","subject","likes","clapsCount","shares","shareCount","comments","cmtsCount","description","authorid","displayModal","closeModal","onClose","sharedBy","checkWallet","walletCheck","err","getAllPairs","stringify","coinsLoaded","formdata","mine","filters","f","priceFrom","priceTo","GlobalGigs","getData","componentDidUpdate","categoryChange","c","cid","currentTab","dataChange","getRequests","d","getGigs","gigs","changeTab","newValue","subCategory","rating","gig"],"mappings":"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","file":"static/js/40.411bf6c0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport A from '../A';\nrequire('./styles.css');\n\nconst SearchMenu = props => {\n    const [current, setCurrent] = useState(props.current);\n    useEffect(() => {\n        setCurrent(props.current)\n    },[props.current]);\n\n    return (\n       <React.Fragment>\n           <ul className=\"searchMenu\">\n               <li>\n                    <div className={\"pointer \"+(current == \"all\" && \" active\")} onClick={(e) => props.onClick(\"all\")}>\n                        All\n                    </div>\n               </li>\n               <li>\n                    <div className={\"pointer \"+(current == \"users\" && \" active\")} onClick={(e) => props.onClick(\"users\")}>\n                       People\n                   </div>\n               </li>\n               <li>\n               <div className={\"pointer \"+(current == \"posts\" && \" active\")} onClick={(e) => props.onClick(\"posts\")}>\n                       Posts\n                   </div>\n               </li>\n                <li>\n               <div className={\"pointer \"+(current == \"blogs\" && \" active\")} onClick={(e) => props.onClick(\"blogs\")}>\n                       Blogs\n                   </div>\n               </li>\n               <li>\n               <div className={\"pointer \"+(current == \"gigs\" && \" active\")} onClick={(e) => props.onClick(\"gigs\")}>\n                       Gigs\n                   </div>\n               </li>\n               {/*<li>\n               <div className={\"pointer \"+(current == \"courses\" && \" active\")} onClick={(e) => props.onClick(\"courses\")}>\n                       Courses\n                   </div>\n               </li>\n               <li>\n               <div className={\"pointer \"+(current == \"gigs\" && \" active\")} onClick={(e) => props.onClick(\"gigs\")}>\n                       Gigs\n                   </div>\n               </li>\n               <li>\n               <div className={\"pointer \"+(current == \"marketplace\" && \" active\")} onClick={(e) => props.onClick(\"marketplace\")}>\n                       Marketplace\n                   </div>\n               </li> */}\n               \n           </ul>\n       </React.Fragment>\n\n    )\n}\n\nexport default SearchMenu;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getGlobalPosts, getPosts, likeComment, replyComment, likePost, postComment, getComments } from '../../http/http-calls';\nimport Post from './Post';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport TimeAgo from 'react-timeago';\n\nclass GlobalPosts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            posts: [],\n            page: 1,\n            limit: 5,\n            hasMore: true,\n            postLoaded: false,\n            showSkeleton: false,\n            showComments: false,\n            commentText: ''\n        }\n        this.loadFunc = this.loadFunc.bind(this);\n        this.likePost = this.likePost.bind(this);\n        this.getPaginatePost = this.getPaginatePost.bind(this);\n    }\n\n    componentDidMount() {\n            this.getPaginatePost();\n    }\n\n    refreshHighlights = () => {\n        this.props.refreshHighlights();\n    }\n\n    componentDidUpdate(prevProps) {\n        if ((prevProps.query != this.props.query) || prevProps.loadMore != this.props.loadMore) {\n            this.setState({\n                page: 1,\n                limit: 5,\n                posts: []\n            }, () => {\n                this.getPaginatePost();\n            })\n            \n        }\n      }\n\n    componentWillReceiveProps() {\n        if (this.props.latestPost && this.props.latestPost.userid) {\n            const latestPost = this.props.latestPost;\n            const postObj = this.state.posts;\n\n            let isExist = postObj.find(item => item._id == latestPost._id)\n            if (!(isExist && isExist._id)) {\n                postObj.unshift(latestPost);\n                this.setState({ posts: [] }, () => {\n                    this.setState({ posts: postObj });\n                });\n            }\n        }\n    }\n\n    getPaginatePost = () => {\n            if((this.props.search && this.props.query != '') || !this.props.search || typeof this.props.search == undefined ){\n            getGlobalPosts({ limit: this.state.limit, page: this.state.page, query: this.props.query }, true)\n            .then(async resp => {\n                this.setState({\n                    posts: [...this.state.posts, ...resp.post],\n                    showSkeleton: false,\n                    hasMore: resp.post && resp.post.length > 0 ? true : false,\n                    postLoaded: true\n                });\n            }, error => {\n                \n                this.setState({ showSkeleton: false });\n            });\n        }\n    }\n\n    loadFunc = () => {\n        if (!this.state.showSkeleton) {\n            this.setState({ showSkeleton: true })\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    page: prevState.page + 1,\n                    showSkeleton: true\n                }\n            }, () => {\n                this.getPaginatePost();\n            })\n        }\n    }\n\n    commentLike = (commentId) => {\n\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    //this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                   // this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n    }\n\n    commentReply = (commentId, comment, commentIndex, callBack) => {\n        replyComment({ commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n            });\n    }\n\n    likePost = (postId, liked) => {\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    postCmt = (postid) => {\n\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    showComments = (postid) => {\n\n        getComments({ postid }, true)\n            .then(async resp => {\n                this.setState({ showComments: true });\n            }, error => {\n                \n\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    getSkeletonContent = () => {\n        return (\n            <div className=\"row empty-inner-container-with-border post\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <ul className=\"list-group w-100 m-0\">\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <ContentLoader\n                                    speed={2}\n                                    width={610}\n                                    height={350}\n                                    viewBox=\"0 0 610 350\"\n                                    backgroundColor=\"#f3f3f3\"\n                                    foregroundColor=\"#ecebeb\"\n                                    {...this.props}\n                                >\n                                    <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                    <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                    <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                    <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                                </ContentLoader>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const { post, showComments, commentText } = this.state;\n\n        return (\n            <div>\n                {\n                    this.props.loadMore ?\n                    <InfiniteScroll\n                    pageStart={0}\n                    initialLoad={false}\n                    loadMore={this.loadFunc}\n                    hasMore={this.state.hasMore}\n                >\n                    {!this.postLoaded && this.state.posts.map((post, i) => (\n                        <Post refreshHighlights={this.refreshHighlights}  post={post} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                    ))}\n                </InfiniteScroll>\n\n:\n!this.postLoaded && this.state.posts.map((post, i) => (\n                        <Post refreshHighlights={this.refreshHighlights}  post={post} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                    ))\n\n                }\n                {((this.state.posts.length === 0 || this.state.showSkeleton) && !this.state.postLoaded) &&\n                    <div>\n                        {Array(5).fill().map((item, index) => this.getSkeletonContent())}\n                    </div>\n                }\n\n                {(this.state.posts.length === 0 && this.state.postLoaded) &&\n                    <div className=\"post\"><p className=\"post-inner no-found\">No Posts Found</p></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default GlobalPosts;\n","import React from 'react';\nimport { getGlobalUsers} from '../../http/http-calls';\nimport A from '../A';\n\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Button from '../../components/Button';\nimport getSkeletonContent from '../../components/Skeleton';\nimport { profilePic } from '../../globalFunctions';\n\nclass SearchUsers extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          page: 1,\n          limit: props.limit == null ? 10 : props.limit,\n          users: [],\n          hasMore: true,\n          postLoaded: false,\n          showSkeleton: false,\n        }\n    }\n\n    componentDidMount = () => {\n      console.log(\"user loaded\");\n          this.setState({\n                page: 1,\n                limit: this.props.limit == null ? 10 : this.props.limit,\n                users: []\n            }, () => {\n                this.getUsers();\n            })\n    };\n\n\n    componentDidUpdate(prevProps) {\n      \n      if ((prevProps.query != this.props.query) || prevProps.loadMore != this.props.loadMore) {\n        console.log(\"user updated\");\n        this.setState({\n          page: 1,\n          limit: this.props.limit == null ? 10 : this.props.limit,\n          users: []\n      }, () => {\n          this.getUsers();\n      })\n      }\n    }\n\n    getUsers = () => {\n      if((this.props.search && this.props.query != '') || !this.props.search || typeof this.props.search == undefined ){\n          getGlobalUsers({ limit: this.state.limit, page: this.state.page, query: this.props.query })\n          .then(async resp => {\n              // this.setState({\n              //     users: resp\n              // });\n              console.log(resp);\n              this.setState({\n                users: [...this.state.users, ...resp],\n                showSkeleton: false,\n                hasMore: resp && resp.length > 0 ? true : false,\n                postLoaded: true\n            });\n          }, error => {\n              \n          });\n        }\n  }\n\n  omponentWillReceiveProps() {\n    if (this.props.latestPost && this.props.latestPost._id) {\n        const latestPost = this.props.latestPost;\n        const postObj = this.state.users;\n\n        let isExist = postObj.find(item => item._id == latestPost._id)\n        if (!(isExist && isExist._id)) {\n            postObj.unshift(latestPost);\n            this.setState({ users: [] }, () => {\n                this.setState({ users: postObj });\n            });\n        }\n    }\n}\n\nloadFunc = () => {\n  console.log(\"reload user\")\n  if (!this.state.showSkeleton) {\n      this.setState({ showSkeleton: true })\n      this.setState(prevState => {\n          return {\n              ...prevState,\n              page: prevState.page + 1,\n              showSkeleton: true\n          }\n      }, () => {\n          this.getUsers();\n      })\n  }\n}\n\n\n\n\n    render() {\n\n        const { users } = this.state;\n\n        return (\n          <div>\n            {this.props.loadMore ? \n          <InfiniteScroll\n              pageStart={0}\n              initialLoad={false}\n              loadMore={this.loadFunc}\n              hasMore={this.state.hasMore}\n          >\n              {!this.postLoaded && this.state.users.length > 0 &&\n                  <div className=\"container\">\n                  <div className=\"row\">\n                    {\n                    this.state.users.map((user, index) => (\n                      <ul className=\"list-group w-100 remove-border\">\n                        <li className=\"list-group-item \">\n                          <div className=\"media w-100 d-flex align-items-center\">\n                            <div className=\"media-left mr-2\">\n                              <A href={\"/u/\"+user._id}>\n                                <img className=\"media-object pic circle\" src={profilePic(user.avatar)}\n                                  alt=\"...\" />\n                              </A>\n                            </div>\n                            <div className=\"media-body\">\n                            <A href={\"/u/\"+user._id}><p className=\"media-heading\">{user.name}</p></A>\n                              {/* <p className=\"media-subheading\">{user.mutualFriends} Mutual Friends</p> */}\n                            </div>\n                            <div className=\"media-right \">\n                              <A href={\"/u/\"+user._id}><Button variant=\"primary-outline\" size=\"compact\">View</Button></A>\n                            </div>\n                          </div>\n                        </li>\n                      </ul>\n                    ))\n                    }\n          \n          \n                  </div>\n                </div>\n                }\n          </InfiniteScroll> : \n           <div className=\"container\">\n           <div className=\"row\">\n             {\n             this.state.users.map((user, index) => (\n               <ul className=\"list-group w-100 remove-border\">\n                 <li className=\"list-group-item \">\n                   <div className=\"media w-100 d-flex align-items-center\">\n                     <div className=\"media-left mr-2\">\n                       <A href={\"/u/\"+user._id}>\n                         <img className=\"media-object pic circle\" src={profilePic(user.avatar)}\n                           alt=\"...\" />\n                       </A>\n                     </div>\n                     <div className=\"media-body\">\n                     <A href={\"/u/\"+user._id}><p className=\"media-heading\">{user.name}</p></A>\n                       {/* <p className=\"media-subheading\">{user.mutualFriends} Mutual Friends</p> */}\n                     </div>\n                     <div className=\"media-right \">\n                       <A href={\"/u/\"+user._id}><Button variant=\"primary-outline\" size=\"compact\">View</Button></A>\n                     </div>\n                   </div>\n                 </li>\n               </ul>\n             ))\n             }\n   \n   \n           </div>\n         </div>\n          }\n          \n        \n\n          {((this.state.users.length === 0 || this.state.showSkeleton) && !this.state.postLoaded) &&\n              <div>\n                  {Array(5).fill().map((item, index) => getSkeletonContent())}\n              </div>\n          }\n\n          {(this.state.users.length === 0 && this.state.postLoaded) &&\n              <div> No User Found</div>\n          }\n      </div>\n            \n        )\n    }\n}\n\nexport default SearchUsers;\n","import React from 'react';\nimport ContentLoader from \"react-content-loader\";\nexport default function getSkeletonContent (props) {\n    return (\n        <div className=\"row empty-inner-container-with-border post\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <ul className=\"list-group w-100 m-0\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                            <ContentLoader\n                                speed={2}\n                                width={610}\n                                height={350}\n                                viewBox=\"0 0 610 350\"\n                                backgroundColor=\"#f3f3f3\"\n                                foregroundColor=\"#ecebeb\"\n                                {...props}\n                            >\n                                <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                            </ContentLoader>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n  }\n","import React from 'react';\nimport SearchMenu from '../../components/Menu/SearchMenu';\nimport BlogPosts from '../../components/Post/BlogPosts';\nimport GlobalGigs from '../../components/Post/Gigs';\nimport GlobalPosts from '../../components/Post/GlobalPosts';\n// import SearchPosts from '../../components/Search/Posts';\nimport SearchUsers from '../../components/User/Users';\nimport { queryParse } from '../../hooks/querystring';\nimport { history } from '../../store';\n\n\nrequire(\"./styles.css\");\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latestpost: {},\n      latestpost2: {},\n      isLoading:false,\n      page: 1,\n      count: 20,\n      filter: 'all',\n      result: [],\n      searchQuery: '',\n      \n    };\n  }\n  setStateFunc = (key,value) => {\n    this.setState({[key]:value});\n  }\n  \n  componentDidMount() {\n    var query = queryParse(this.props.location.search);\n    this.setState({\n      searchQuery: encodeURIComponent(query.q),\n      filter: (query.filter) ? query.filter : \"all\"\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if(this.props.location.search != prevProps.location.search){\n      var query = queryParse(this.props.location.search);\n      this.setState({\n        searchQuery: encodeURIComponent(query.q),\n        filter: (query.filter) ? query.filter : \"all\"\n      });\n    }\n    \n  }\n\n  handleInput = (e) =>{\n    this.setState({\n      searchQuery: e.target.value\n    });\n  }\n\n  setStateFunc = (key,value) => {\n    this.setState({[key]:value});\n  }\n\n  setFilter = (value) => {\n    localStorage.setItem(\"filter\", value);\n    this.props.history.push(\"/search?q=\"+this.state.searchQuery+\"&filter=\"+value);\n  }\n  handleSearch = (e) =>{\n    e.preventDefault();\n    var query = queryParse(this.props.location.search);\n    history.push('/search?q='+encodeURIComponent(this.state.searchQuery)+(query.filter != null && typeof query.filter != undefined && query.filter != '' ? '&filter='+query.filter : ''));\n  }\n\n    render() {\n      const {result} = this.state;\n        return (\n            // <!-- Wall container -->\n            <div className=\"container my-wall-container search-page\">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm col-md-4 empty-container-with-out-border left-column\">\n                <div className=\"col-sm empty-container-with-out-border left-column\">\n                 {/* <BlogFilter /> */}\n                </div>\n                </div>\n                <div className=\"col-sm col-md-8 empty-container-with-out-border center-column big-center\">\n                <form className=\"form-inline my-2 my-lg-0 searchBox sm-show mb-4\" onSubmit={this.handleSearch}>\n                <div className=\"input-group\">\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-secondary search-btn\" type=\"button\" onClick={this.handleSearch}>\n                      <img src={require(\"../../assets/images/search-icon.png\")} />\n                    </button>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={this.handleInput} />\n                  \n                </div>\n              </form>\n              {\n              /* <div className=\"searchFilters\">\n                <a className={this.state.filter == \"all\" ? \"active\" : \"\"} onClick={(e) => this.setFilter(\"all\")}>All</a>\n                <a className={this.state.filter == \"users\" ? \"active\" : \"\"} onClick={(e) => this.setFilter(\"users\")}>People</a>\n                <a className={this.state.filter == \"posts\" ? \"active\" : \"\"} onClick={(e) => this.setFilter(\"posts\")}>Posts</a> \n              </div> */}\n                  {\n                    this.state.searchQuery == '' ? \n                    <p>Type something to search</p>\n                    :\n                    <div>\n                  {\n                    (this.state.filter == 'all' || this.state.filter == 'users') ? \n                  <div className=\"col empty-container-with-border center-column-full m-0 \">\n                  <h3 className=\"subtitle\">Users</h3>\n                    {/* {\n                      (this.state.filter != 'users') ? \n                      <SearchUsers {...this.props} query={this.state.searchQuery} search={true} loadMore={false} />\n                      : */}\n                      <SearchUsers setState={this.setStateFunc} latestpost={this.state.latestpost2} {...this.props} query={this.state.searchQuery} search={true} limit={5} loadMore={this.state.filter == 'users'} />\n                    {/* } */}\n                \n                  </div>\n                  : null\n                  }\n                          {\n                    (this.state.filter == 'all' || this.state.filter == 'gigs') ? \n                  <div className=\"col empty-container-with-out-border p-0 center-column-full m-0 mt-4\">\n                  <h3 className=\"subtitle\">Gigs</h3>\n                  <GlobalGigs {...this.props} query={this.state.searchQuery} search={true} limit={3} loadMore={this.state.filter == 'posts'} />\n                  </div>\n                  : null\n                  }\n                             {\n                    (this.state.filter == 'all' || this.state.filter == 'blogs') ? \n                  <div className=\"col empty-container-with-out-border p-0 center-column-full m-0 mt-4\">\n                  <h3 className=\"subtitle\">Blogs</h3>\n                  <BlogPosts setState={this.setStateFunc} latestpost={this.state.latestpost} {...this.props} query={this.state.searchQuery} search={true} limit={3} loadMore={this.state.filter == 'blogs'} />\n                  </div>\n                  : null\n                  }\n          \n                  {\n                    (this.state.filter == 'all' || this.state.filter == 'posts') ? \n                  <div className=\"col empty-container-with-out-border p-0 center-column-full m-0 mt-4\">\n                  <h3 className=\"subtitle\">Posts</h3>\n                  <GlobalPosts setState={this.setStateFunc} latestpost={this.state.latestpost} {...this.props} query={this.state.searchQuery} search={true} limit={3} loadMore={this.state.filter == 'posts'}  />\n                  </div>\n                  : null\n                  }\n       \n                </div>\n                  }\n                  \n                </div>\n\n                <div className=\"col-sm empty-container-with-out-border right-column\">\n                <SearchMenu onClick={this.setFilter} current={this.state.filter} />\n                </div>\n                \n              </div>\n            </div>\n\n      )\n    }\n}\n\nexport default SearchResult;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import config from \"../config/index\";\nimport {\n    makeAxiosGetRequest,\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n\n/**\n * createPost\n * @param {object} data\n */\n\nexport const getBlogCategories = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-categories`, true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const createBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"create-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const updateBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"update-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n/**\n * register\n * @param {object} data email and password\n */\nexport const getPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-posts\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getGlobalPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-global-blogs\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getFilteredBlogPosts = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-filtered-blog-posts\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postRemove = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"remove-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getComments = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-comments`, auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\n\nexport const getSinglePost = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getPopularBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-popular-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getCategoryBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-category-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getAuthorBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-author-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const getSuggestedBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-suggested-blogs\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const clap = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"blog-clap\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const sendTips = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"send-tips\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const purchaseBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"purchase-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const checkPurchasedBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"check-purchased-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likePost = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + \"like-blog\", auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const postComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + 'comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likeComment = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'like-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const replyComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'reply-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getBlogDraft = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-draft\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const postSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postUnSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"un-save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\nexport const getBlogStats = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"blog-stats\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport Modal from '../../components/Popup';\nimport ReactPlayer from 'react-player';\nimport { getComments,   getReplyComments, postReport, postUnReport } from '../../http/http-calls';\nimport { postSave, postUnSave, postHide, postUnHide, postHighlight, postUnHighlight} from '../../http/post-calls';\nimport {postRemove, likePost, postComment} from '../../http/blog-calls';\nimport update from 'react-addons-update';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport { switchLoader, alertBox, modal } from '../../commonRedux/';\nimport A from '../A';\nimport {GetAssetImage, pic, profilePic} from '../../globalFunctions';\nimport Truncate from 'react-truncate';\nimport config from \"../../config/index\";\nimport Dialog from '@material-ui/core/Dialog';\nimport LeftThumbCard from '../Cards/LeftThumbCard';\nimport  Button  from '../Button';\nrequire(\"./styles.css\");\n\nconst reactStringReplace = require('react-string-replace');\n\nclass BlogPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open:false,\n            url: props.post.url,\n            post: props.post,\n            last: null,\n            key: props.post._id,\n            shareModel: false,\n            reported:props.post.reported == 1?true:false,\n            saved:props.post.saved == 1?true:false,\n            category: \"\",\n            reason: \"\",\n            reportModal:false,\n            currPost: {},\n            coins: [],\n            playing: false,\n            tips:0,\n            showComments: false,\n            commentText: '',\n            postText: '',\n            replyCmt: []\n        }\n        // this.likePostFn = this.likePostFn.bind(this);\n        this.sharePost = this.sharePost.bind(this);\n        this.closeShareModal = this.closeShareModal.bind(this);\n    }\n    extractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\t\treturn text.match(regex)\n    }\n    reportModal = () => {\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n\n    componentDidMount = () => {\n        \n        if(this.props.single){\n            this.showComments(this.state.post._id);\n        }        \n        \n        try {\n            var txt = JSON.parse(this.props.post.editorContent);\n            this.setState({\n                postText: txt.blocks[0].data.text\n            })\n        } catch (error) {\n            this.setState({\n                postText: this.props.post.text\n            })\n        }\n        this.getCoins();\n    };\n\n    componentDidUpdate(prevProps){\n        if(prevProps.coins != this.props.coins){\n            this.getCoins();\n        }\n    }\n\n    getCoins = () => {\n        this.setState({\n            coins : this.props.coins\n        },() => {\n            console.log(this.state.post.tips, this.state.coins)\n        if(this.state.post != undefined && this.state.post.tips != undefined && this.state.coins != undefined){\n                var len = this.state.post.tips.length;\n                if(len > 0){\n                    var tips = 0;\n                    this.state.post.tips.map((e, i) => {\n                        var index = this.state.coins.findIndex(function(item, i){\n                            return item.currencySymbol === e.currency\n                        });\n                        try {\n                            tips += e.amount/this.state.coins[index].EstimatedUSD;\n                        } catch (error) {\n                            \n                        }\n                        if(i == (len-1)){\n                            this.setState({\n                                tips: tips\n                            })\n                        }\n                    });\n                }\n            }\n        }\n        )\n    }\n\n    postActivityCount = (activityType, action = 'add') => {\n\n        const postObj = this.state.post;\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        this.setState({ post: postObj });\n    }\n\n    editPost = (id) => {\n\n    };\n    save = (id) => {\n        //modal(true, \"sdf\");\n        postSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ saved: true });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unSave = (id) => {\n        postUnSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ saved: false });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    report = (p) => {\n        if(this.state.category == \"\"){\n            alertBox(true, \"You need to select a category\");\n        }else{\n        var link = \"blog/\"+p.slug;\n        postReport({ id: p._id, type: 'blog', link, category: this.state.category, reason: this.state.reason })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ reportModal: false, reported: true});\n        }, error => {\n            alertBox(true, error.data.message);\n            this.setState({ reportModal: false});\n        });\n    }\n    };\n    unReport = (p) => {\n        postUnReport({ id: p._id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ reported: false  });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    hidePost = (id) => {\n        postHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unhidePost = (id) => {\n        postUnHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    removePost = (id) => {\n        this.setState({last:id, open:true})\n      \n    };\n\n    removePostConfirm = () => {\n        var id = this.state.last;\n        this.setState({open:false, last:null})\n        postRemove({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, removed: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    }\n    highlightPost = (id) => {\n        postHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 1 } }, () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unHighlight = (id) => {\n        postUnHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 0 } },  () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    likePostFn = (postId, liked) => {\n        this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                    this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                alertBox(true, error.data.message);\n            });\n    }\n\n    sharePost = (post) => {\n        this.setState({ shareModel: true, currPost: post })\n    }\n\n    closeShareModal = () => {\n        this.setState({ shareModel: false })\n    }\n\n    handleOnReady = () => setTimeout(() => this.setState({ playing: true }), 100);\n    handleClose = () => this.setState({ open: !this.state.open });\n\n    postCmt = (postid) => {\n        if(this.state.commentText != '' && this.state.commentText != null){\n        switchLoader(true, 'Please wait. Commenting...');\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n                this.postActivityCount('cmtsCount');\n                const postObj = this.state.post;\n                if (!postObj.comment) {\n                    postObj.comment = [];\n                }\n                postObj.comment.unshift(resp.comment);\n                this.setState({ post: postObj, showComments: true, commentText: '' });\n                switchLoader();\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n        }\n    }\n\n    showComments = (postid) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getComments({ postid }, true)\n            .then(async resp => {\n                switchLoader();\n                this.setState({ post: { ...this.state.post, comment: resp } })\n                this.setState({ showComments: true });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    shareSuccess = () => {\n        this.postActivityCount('shareCount');\n    }\n\n    showCommentReply = (commentId) => {\n        let index = this.state.post.comment.findIndex(el => el._id === commentId);\n        const tempPostData = this.state.post;\n        tempPostData.comment[index].showReply = true;\n        this.setState({ post: tempPostData });\n        \n        // this.setState({\n        //     post: { comment: update(this.state.post.comment, { [index]: { showReply: { $set: true } } }) }\n        // }, () => {\n        // });\n    }\n\n    showCommentReplies = (commentId) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getReplyComments({ commentId }, true)\n            .then(async resp => {\n                switchLoader();\n                let index = this.state.post.comment.findIndex(el => el._id === commentId);\n                const tempPostData = this.state.post;\n                tempPostData.comment[index].replies = resp;\n                this.setState({ post: tempPostData });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    callBackCommentReply = (replyData, commentIndex) => {\n        let postObj = this.state.post;\n        if (postObj.comment && postObj.comment[commentIndex]) {\n            if (postObj.comment[commentIndex].replies) {\n                postObj.comment[commentIndex].replies.push(replyData);\n            } else {\n                postObj.comment[commentIndex].replies = [replyData];\n            }\n            let tempReplyCmt = this.state.replyCmt;\n            tempReplyCmt[commentIndex] = '';\n            this.setState({ post: postObj, replyCmt: tempReplyCmt });\n        }\n    }\n\n    // wrapHash = (val) => {\n        \n    //     return val.replace(/#(\\w+)/g, \"<A href='/search/filter=posts&q=$&'>$&</A>\").replace(\"q=#\", \"q=%23\");  \n    // }\n\n    render() {\n\n        const { post, showComments, commentText, replyCmt, key } = this.state;\n\n        return (\n            <div className={\"post \"} key={key}>\n                     <Modal displayModal={this.state.reportModal} closeModal={this.reportModal} >\n                     <div>\n                         <div className=\"form-group\">\n                             <select className=\"form-control\" value={this.state.category}  onChange={(e) => this.setState({category: e.target.value})}>\n                                 <option value=\"\">Select Category</option>\n                                 <option>Violence</option>\n                                 <option>Racism / Hatespeech</option>\n                                 <option>Pornographic</option>\n                                 <option>Spam</option>\n                                 <option>Other</option>\n                             </select>\n                         </div>\n                         <div className=\"form-group\">\n                             <textarea type=\"text\" placeholder=\"Reason\" className=\"form-control\" onChange={(e) => this.setState({reason: e.target.value})} value={this.state.reason} />\n                         </div>\n                     </div>\n                <div className=\"\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.report(post)}>Report</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.reportModal}>Cancel</Button>\n                </div>\n             </Modal>\n                <Dialog onClose={this.handleClose} className=\"confirm-modal\"  open={this.state.open}>\n                    <strong className=\"text-center p-2\"><big>Confirmation</big></strong>\n                    <p className=\"p-2\">Are you sure about deleting this?</p>\n                    <div className=\"p-2 d-flex align-items-center justify-content-around\">\n                        <Button onClick={this.handleClose} variant=\"secondary\">Cancel</Button>\n                        <Button onClick={this.removePostConfirm} variant=\"primary\">Yes</Button>\n                    </div>\n                </Dialog>\n                {!post.sharedBy ? this.getPostContent(post, showComments, commentText, replyCmt) : null}\n                {this.state.shareModel &&\n                    <Share\n                        post={this.state.currPost}\n                        shareSuccess={this.shareSuccess}\n                        closeShareModal={this.closeShareModal}\n                    />}\n            </div>\n        );\n    }\n\n    getPostContent = (post, showComments, commentText, replyCmt) => {\n        return (\n            ((post.removed > 0 ) || (post.hidden > 0 && this.props.filter != 'hidden')) ? null : \n            <LeftThumbCard reported={this.state.reported} saved={this.state.saved} report={this.reportModal} unReport={()=>this.unReport(post)} save={() => this.save(post._id)} unSave={()=>this.unSave(post._id)} url={\"/blog/\"+post.slug} thumb={pic(post.contents != undefined && post.contents[0] != undefined ? post.contents[0].content_url : '')} k={post._id} currentUser={this.props.currentUser} post={post} title={post.subject} likes={post.clapsCount} shares={post.shareCount} tips={this.state.tips} comments={post.cmtsCount} category={post.category} description={this.state.postText} removePost={this.removePost} authorid={post.userid} />\n        )\n    }\n}\n\nexport default BlogPost;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfilePosts, likeComment, replyComment, likePost, postComment, getComments } from '../../http/http-calls';\nimport { getPosts } from '../../http/blog-calls';\nimport BlogPost from './BlogPost';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport TimeAgo from 'react-timeago';\nimport { getAllPairs} from '../../http/wallet-calls';\nimport walletCheck from '../../hooks/walletCheck';\n\nclass BlogPosts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: props.query,\n            filters: props.filters,\n            formdata: props.formdata,\n            posts: [],\n            page: 1,\n            coins:[],\n            coinsLoaded: false,\n            limit: props.limit == null ? 5 : props.limit,\n            hasMore: true,\n            postLoaded: false,\n            showSkeleton: false,\n            showComments: false,\n            commentText: ''\n        }\n        this.commentLike = this.commentLike.bind(this);\n        this.loadFunc = this.loadFunc.bind(this);\n        this.likePost = this.likePost.bind(this);\n        this.getPaginatePost = this.getPaginatePost.bind(this);\n    }\n\n    componentDidMount() {\n        \n        this.setState({\n            page: 1,\n            limit: this.props.limit == null ? 5: this.props.limit,\n            posts: []\n        }, this.getPaginatePost())\n        // this.checkWallet();\n    }\n\n    \n\n    componentDidUpdate(prevProps) {\n        if ((prevProps.filters != this.props.filters) ||(prevProps.query != this.props.query) || (prevProps.loadMore != this.props.loadMore) || (prevProps.formdata != this.props.formdata)) {\n            \n            this.setState({\n                formdata: this.props.formdata,\n                filters: this.props.filters,\n                page: 1,\n                limit: this.props.limit == null ? 5: this.props.limit,\n                posts: []\n            }, () => {\n                this.getPaginatePost();\n            })\n        }\n    }\n\n    // componentWillReceiveProps() {\n    //     if (this.props.latestpost && this.props.latestpost.userid) {\n\n    //         const latestpost = this.props.latestpost;\n    //         const postObj = this.state.posts;\n\n    //         let isExist = postObj.find(item => item._id == latestpost._id)\n    //         if (!(isExist && isExist._id)) {\n    //             postObj.unshift(latestpost);\n    //             this.setState({ posts: [] }, () => {\n    //                 this.setState({ posts: postObj });\n    //             });\n    //         }\n    //     }\n    // }\n \n    checkWallet = () =>{\n        console.log(\"okaoay\")\n        walletCheck().then(resp=>{\n            console.log(\"okaokay\")\n            this.getCoins();\n        }, err => {\n            console.log(\"notokaokay\")\n            console.log(err);\n        })\n    }\n\n    getCoins = () => {\n        // var coins = localStorage.getItem(\"allPairs\");\n        // if(coins != null){\n        //     this.setState({\n        //         coins: JSON.parse(coins)\n        //     }, () => {\n        //         this.setState({\n        //             coinsLoaded:true\n        //         })\n        //     })\n        // }\n        getAllPairs().then(resp => {\n            localStorage.setItem(\"allPairs\", JSON.stringify(resp.data));\n            this.setState({\n                coins: resp.data,\n            }, () => {\n                this.setState({\n                    coinsLoaded:true\n                })\n            });\n        }, err => {\n            console.log(err);\n        })\n    }\n\n    getPaginatePost = () => {\n        // if((typeof this.props.currentUser == undefined || this.props.currentUser == null) || (typeof this.props.match != undefined && this.props.match.params.id != null && typeof this.props.match.params.id != undefined && this.props.match.params.id != '' && this.props.match.params.id != this.props.currentUser._id)){\n        //     getProfilePosts({ userid: this.props.match.params.id, limit: this.state.limit, page: this.state.page})\n        //     .then(async resp => {\n        //         this.setState({\n        //             posts: [...this.state.posts, ...resp.post],\n        //             hasMore: resp.post && resp.post.length > 0 ? true : false,\n        //             postLoaded: true, showSkeleton: false\n        //         });\n        //     }, error => {\n                \n        //         this.setState({ postLoaded: true, showSkeleton: false });\n        //     });\n        //   }else{\n        \n        if(this.state.formdata != undefined && this.state.formdata != null && this.state.formdata != ''){\n            var data = this.state.formdata;\n        }else{\n            var data = { userid: this.props.currentUser._id, limit: this.state.limit, page: this.state.page, query: this.props.query, mine: this.props.mine };\n        }\n        if(this.state.filters != null){\n            var f = this.state.filters;\n            data.query = f.key;\n            data.priceFrom = f.priceFrom;\n            data.priceTo = f.priceTo;\n            data.category = f.category;\n         \n        }\n        console.log(this.state.filters, data);\n        getPosts(data, true)\n            .then(async resp => {\n                this.setState({\n                    posts: data.page == 1 ? resp.post : [...this.state.posts, ...resp.post],\n                    hasMore: resp.post && resp.post.length > 0 ? true : false,\n                    postLoaded: true, showSkeleton: false\n                });\n            }, error => {\n                \n                this.setState({ postLoaded: true, showSkeleton: false });\n            });\n        //}\n    }\n\n    loadFunc = () => {\n        if (!this.state.showSkeleton) {\n            this.setState({ showSkeleton: true })\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    page: prevState.page + 1,\n                    showSkeleton: true\n                }\n            }, () => {\n                this.getPaginatePost();\n            })\n        }\n\n    }\n\n    commentLike = (postid, commentId) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ postid, commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    //this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                   // this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n    }\n\n    commentReply = (postid, commentId, comment, commentIndex, callBack) => {\n        replyComment({ postid: postid, commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n        });\n    }\n\n    likePost = (postid, liked) => {\n        likePost({ postid: postid }, true)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    postCmt = (postid) => {\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    showComments = (postid) => {\n\n        getComments({ postid }, true)\n            .then(async resp => {\n                this.setState({ showComments: true });\n            }, error => {\n                \n\n            });\n    }\n\n    refreshHighlights = () => {\n        \n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    getSkeletonContent = (i) => {\n        return (\n            <div className=\"row empty-inner-container-with-border post\" key={i}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <ul className=\"list-group w-100 m-0\">\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <ContentLoader\n                                    speed={2}\n                                    width={610}\n                                    height={350}\n                                    viewBox=\"0 0 610 350\"\n                                    backgroundColor=\"#f3f3f3\"\n                                    foregroundColor=\"#ecebeb\"\n                                    \n                                >\n                                    <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                    <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                    <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                    <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                                </ContentLoader>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const { post, showComments, commentText } = this.state;\n\n        return (\n            <div>\n                {\n                    this.props.loadMore ?\n                    <InfiniteScroll\n                    pageStart={0}\n                    initialLoad={false}\n                    loadMore={this.loadFunc}\n                    hasMore={this.state.hasMore}\n                >\n                      {this.state.postLoaded && this.state.posts.map((post, i) => (\n                        <BlogPost coins={this.state.coins} post={post} filter=\"\" refreshHighlights={this.refreshHighlights} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                    ))}\n                </InfiniteScroll>\n                :\n                 this.state.postLoaded && this.state.posts.map((post, i) => (\n                    <BlogPost coins={this.state.coins} post={post} filter=\"\" refreshHighlights={this.refreshHighlights} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                ))\n\n                }\n               \n\n                {(this.state.showSkeleton ) &&\n                    <div>\n                        {Array(5).fill().map((item, index) => this.getSkeletonContent(index))}\n                    </div>\n                }\n\n                {(this.state.posts.length === 0 && this.state.postLoaded) &&\n                    <div className=\"post\"><p className=\"post-inner no-found\">No Blogs Found</p></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default BlogPosts;\n","import React from 'react';\nimport { getGigs } from '../../http/gig-calls';\nimport Gig from '../Gigs/Gig';\n\nclass GlobalGigs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: props.limit == undefined ? 20 : props.limit,\n            page: 1,\n            cid: 0,\n            posts: [],\n            query: props.query,\n            data: {\n                category: \"\",\n                subCategory : \"\",\n                priceFrom : \"\",\n                priceTo : \"\",\n                rating : \"\",\n                key: \"\"\n            },\n            gigs: [],\n            currentTab:0\n        }\n    }\n\n    componentDidMount = () => {\n        this.getData();\n        // this.getRequests();\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if(prevProps.query != this.props.query){\n        this.getData();\n        }\n        // this.getRequests();\n    }\n\n    categoryChange = (c) => {\n        this.setState({\n            cid: c,\n            currentTab: 0\n        })\n    }\n    \n    dataChange = (data = {}) => {\n        \n        this.getData(data);\n        this.getRequests(data);\n    }\n\n    getData =(data = {}) => {\n        var d = data;\n        d['page']  = this.state.page;\n        d['limit'] = this.state.limit;\n        d['key'] = this.props.query == undefined ? '' : this.props.query;\n        d['mine'] = this.props.mine == undefined ? 'false' : this.props.mine;\n        d['userid'] = this.props.id == undefined ? this.props.currentUser._id : this.props.id;\n        getGigs(d).then(resp => {\n            this.setState({\n                gigs: resp.post\n            })\n        }, err=>{\n            console.log(err);\n        })\n    }\n\n    // getRequests = (data = {}) => {\n    //     var d = data;\n    //     d['page']  = this.state.page;\n    //     d['limit'] = this.state.limit;\n    //     allGigRequests(data).then(resp => {\n    //       this.setState({\n    //         posts: resp\n    //       })\n    //     }, err => {\n  \n    //     });\n    // }\n    changeTab = (newValue) => {\n        this.setState({currentTab: newValue});\n    };\n\n    render() {\n        return (\n            <div className={\"tab mt-2 \"}>\n                \n                {/* <h2 className=\"subtitle mt-1\">All Gigs</h2> */}\n                \n                    {\n                        this.state.gigs.length == 0 ?\n                        <p className=\"no-found\">No Gigs Found</p>\n                        :\n                        <div className=\"row-1\">\n                        {\n                        this.state.gigs.map((gig, i) => {\n                            // return <TopThumbCard  report={this.reportModal} unReport={()=>this.unReport(gig)} url={\"/passionomy/gig/\"+gig._id} currentUser={this.props.currentUser} post={gig} removePost={this.removePost}  />\n                            return <Gig {...this.props} post={gig} />\n                        })\n                        }\n                        </div>\n                    }\n                </div> \n        );\n    }\n}\n\nexport default GlobalGigs;"],"sourceRoot":""}