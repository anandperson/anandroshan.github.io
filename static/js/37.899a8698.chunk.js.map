{"version":3,"sources":["components/Errors/ListErrors.js","pages/Register/verify.js","components/FrontPageFooter/index.js","http/oauth-calls.js"],"names":["React","Component","ccodes","require","Verify","props","timer","handleChange","evt","target","name","value","setState","componentDidMount","a","fetch","response","json","data","browser","IPv4","state","time","startTimer","resend","switchLoader","id","localStorage","getItem","otp","resendOtp","then","resp","alertBox","error","message","update","e","preventDefault","phone","ccode","countryCode","updatePhone","step","verify","verifyPhone","status","history","push","clear","setItem","JSON","stringify","userinfo","token","walletToken","window","location","href","clearInterval","setInterval","changePhone","submitForm","uid","handleValidation","obj","alert","Object","values","join","redirect","removeItem","addphone","email","code","bind","fields","this","formIsValid","errors","length","password","cPassword","pwdtype","Fragment","className","A","src","GetAssetImage","alt","action","method","onSubmit","type","placeholder","required","pattern","title","onChange","style","color","width","inProgress","onClick","Button","variant","disabled","options","labelField","valueField","console","log","dial_code","FrontPageFooter","useState","undefined","layout","config","frontEnd","googleAuth","Promise","resolve","reject","makeAxiosPostRequest","baseUrl","res","catch","facebookAuth"],"mappings":"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","file":"static/js/37.899a8698.chunk.js","sourcesContent":["import React from 'react';\n\nclass ListErrors extends React.Component {\n  render() {\n    const errors = this.props.errors;\n    if (errors) {\n      return (\n        <ul className=\"error-messages\">\n          {\n            Object.keys(errors).map(key => {\n              return (\n                <li key={key}>\n                  {key} {errors[key]}\n                </li>\n              );\n            })\n          }\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ListErrors;\n","import React from 'react';\nimport config from '../../config';\nimport { Link } from 'react-router-dom';\nimport { detect } from 'detect-browser';\nimport { login, verifyEmail, register, verifyPhone, resendOtp, updatePhone } from '../../http/http-calls';\nimport ListErrors from '../../components/Errors/ListErrors';\nimport { GetAssetImage } from '../../globalFunctions';\nimport { switchLoader, alertBox } from '../../commonRedux/';\nimport {twitterSync } from '../../http/twitter-calls';\nimport { history} from '../../store';\nimport A from '../../components/A';\nimport { googleAuth, facebookAuth} from '../../http/oauth-calls';\nimport Button from '../../components/Button';\nimport Select from 'react-dropdown-select';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { LinkedIn } from 'react-linkedin-login-oauth2';\nimport linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png'\nimport FrontPageFooter from '../../components/FrontPageFooter'\nlet ccodes = require('./ccodes.json');\nrequire(\"../Login/styles.scss\");\n\nclass Verify extends React.Component {\n    timer = null;\n  constructor(props) {\n    super(props);\n    var redirect = localStorage.getItem(\"loginredirect\");\n    localStorage.removeItem(\"loginredirect\");\n    var addphone = localStorage.getItem(\"addphone\");\n    localStorage.removeItem(\"addphone\");\n    this.state = {\n      name: '',\n      time: redirect == null ? 60 : 0,\n      email: '',\n      countryCode: '',\n      browser: null,\n      phone: '',\n      step: addphone == null ? 1 : 2,\n      values:[],\n      phone: '',\n      password: '',\n      cPassword: '',\n      errors: {},\n      pwdtype: 'password',\n      cpwdtype: 'password',\n      countryCodes: [{ name: 'US', code: '+1' }, { name: 'IN', code: '+91' }, { name: 'GB', code: '+44' }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  handleChange = (evt) => {\n    const { name, value } = evt.target;\n    this.setState({ [name]: value }, () => { });\n  }\n\n  handleValidation() {\n\n    let fields = this.state,\n      formIsValid = true,\n      errors = {};\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"name\"]) {\n      // if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n      //   formIsValid = false;\n      //   errors[\"name\"] = \"Only letters\";\n      // }\n      if(fields[\"name\"].length > 6)\n        formIsValid = false;\n      errors[\"name\"] = \"6 digits only\";\n    }\n\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  componentDidMount = async () => {\n    // const browser = detect();\n    // this.setState({\n    //   browser:browser\n    // })\n    const response = await fetch('https://geolocation-db.com/json/');\n    const data = await response.json();\n    this.setState({ browser: data.IPv4 })\n    \n      if(this.state.time > 0){\n        this.startTimer();\n      }\n  }\n\n  resend =() => {\n    switchLoader(true, 'Please wait, Sending OTP');\n    var data = {\n        id: localStorage.getItem(\"vid\"),\n        browser: this.state.browser,\n        otp: this.state.name\n    };\n      resendOtp(data).then(async resp => {\n        switchLoader();\n        alertBox(true, \"OTP Sent\", 'success');\n        this.startTimer();\n      }, error => {\n        alertBox(true, error.data.message);\n        switchLoader();\n      });\n  }\n\n  update =(e) => {\n    e.preventDefault();\n    switchLoader(true, 'Please wait, Updating');\n    var data = {\n        id: localStorage.getItem(\"vid\"),\n        phone: this.state.phone,\n        browser: this.state.browser,\n        ccode: this.state.countryCode\n    };\n    updatePhone(data).then(async resp => {\n        switchLoader();\n        alertBox(true, \"Phone updated and OTP Sent\", 'success');\n        this.setState({\n          step:1\n        })\n        this.startTimer();\n      }, error => {\n        alertBox(true, error.data.message);\n        switchLoader();\n      });\n  }\n\n  verify =(e) => {\n      e.preventDefault();\n    switchLoader(true, 'Please wait, Verifying OTP');\n    var data = {\n        id: localStorage.getItem(\"vid\"),\n        browser: this.state.browser,\n        otp: this.state.name\n    };\n      verifyPhone(data).then(async resp => {\n        switchLoader();\n        alertBox(true, \"OTP successfully verified\", 'success');\n        if(resp.status == 'new'){\n            this.props.history.push(\"/login\");\n        }else{\n            localStorage.clear();\n            localStorage.setItem('currentUser', JSON.stringify(resp.userinfo));\n            localStorage.setItem('jwt', resp.token);\n            localStorage.setItem('walletToken', resp.walletToken);\n            window.location.href = '/';\n        }\n      }, error => {\n        alertBox(true, error.data.message);\n        switchLoader();\n      });\n  }\n\n  startTimer = () => {\n    if(this.timer != null){\n      clearInterval(this.timer);            \n    }\n      this.setState({\n          time:60\n      }, () => {\n         this.timer = setInterval(() => {\n              if(this.state.time <= 0){\n                clearInterval(this.timer);            \n              }else{\n            this.setState({\n                time: (this.state.time-1)\n            })\n        }\n          }, 1000);\n      })\n  }\n\n  changePhone = () => {\n    this.setState({\n      step: this.state.step == 1 ? 2 : 1\n    })\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    var uid = localStorage.getItem(\"vid\");\n    if (this.handleValidation()) {\n      let obj = {\n        otp: this.state.name,\n        browser: this.state.browser,\n        id: uid\n      };\n\n      switchLoader(true, 'Please wait...');\n      verifyPhone(obj)\n        .then(async resp => {\n          switchLoader();\n          alertBox(true, \"Your phone verified, check your email inbox to verify your email\", 'success');\n          history.push(\"/login\");\n        }, error => {\n          switchLoader();\n          let alert = error && error.data && error.data.message ? typeof error.data.message == 'object' ? Object.values(error.data.message).join(',') : error.data.message: '';\n          alertBox(true, alert);\n        });\n    } else {\n      \n    }\n  }\n  render() {\n    const { email, name, phone, password, cPassword, pwdtype } = this.state;\n    return (\n      <React.Fragment>\n      <div className=\"loginPage\">\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n          <A href=\"/\"><img className=\"logo\" src={GetAssetImage('logo-main.png')} alt=\"\" /></A>\n          <p className=\"intro-text\">Social Media Platform with Trusted Cryptocurrency Exchange</p>\n          <img className=\"coins\" src={GetAssetImage('front/coins1.png')} />\n          </div>\n          <div className=\"col-md-5\">\n            <div className=\"loginForm\">\n              {\n                this.state.step == 1 ?\n                <form action=\"\" method=\"post\" onSubmit={this.verify} >\n                <h1>Verify Mobile Number</h1>\n                \n                <div className=\"input-group mb-3\">\n                          <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"OTP\"\n                            name=\"name\"\n                            required\n                            pattern=\"[0-9]{6,6}\"\n                            title=\"Enter 6 digit OTP\"\n                            value={name}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"name\"]}</span>\n                        </div>\n                        {\n                            this.props.inProgress || this.state.time > 0 ? null : <a href=\"#\" className=\"mb-3 d-block\" onClick={this.changePhone}>Change Mobile Number</a> }\n                        \n                <div className=\"form-group\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                        <Button variant=\"primary\" className=\"big box w-100  mt-2 d-block\" disabled={this.props.inProgress}>Verify</Button>\n                        </div>\n                        <div className=\"col-md-6\">\n                          {\n                            this.props.inProgress || this.state.time > 0 ?\n                            <Button type=\"button\" variant=\"primary-outline\" className=\"big box w-100  mt-2 d-block\" disabled={true}>\n                            {\n                                this.state.time\n                            }\n                        </Button>\n                            :\n                            <Button onClick={this.resend} type=\"button\" variant=\"primary-outline\" className=\"big box w-100  mt-2 d-block\" >\n                            {\n                                 'Resend'\n                            }\n                        </Button>\n                          }\n                        \n                        </div>\n                    </div>\n                  \n                </div>\n                <p className=\"warnin\">If you haven't received the OTP, wait for 60 seconds and request new OTP or change your phone number</p>\n              </form>\n              :\n              <form action=\"\" method=\"post\" onSubmit={this.update} >\n                <h1>Change Mobile Number</h1>\n                <div className=\"input-group mb-3\">\n                          <div className=\"input-group-append mr-2 d-block\">\n                              {/* <select required className=\"form-control\" name=\"countryCode\" id=\"\"\n                                onChange={(e) => this.handleChange(e)}\n                                value={this.state.countryCode} >\n                                {ccodes.map((country, i) => (\n                                  <option key={i} value={country.dial_code} >\n                                    {country.code} {country.dial_code}\n                                  </option>\n                                ))}\n                              </select> */}\n                               <Select\n                               className=\"form-control\"\n                                options={ccodes}\n                                values={this.state.values}\n                                labelField=\"name\"\n                                valueField=\"name\"\n                                required\n                                name=\"ccode\"\n                                onChange={(values) => {\n                                  console.log(values);\n                                  try {\n                                    this.setState({\n                                      countryCode: values[0].dial_code,\n                                      values:values\n                                    })\n                                  } catch (error) {\n                                    \n                                    this.setState({\n                                      countryCode: '',\n                                      values: values\n                                    })\n                                  }\n                                }}\n                              />\n                              <div><span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"ccode\"]}</span></div>\n                          </div>\n                          <input\n                            className=\"form-control\"\n                            type=\"tel\"\n                            required\n                            placeholder=\"Mobile\"\n                            pattern=\"[0-9]{6,}\"\n                            title=\"Minimum 6 digit, numbers only\"\n                            name=\"phone\"\n                            value={phone}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"phone\"]}</span>\n\n                        </div>\n                        \n                        \n                <div className=\"form-group\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                        <Button variant=\"primary\" className=\"big box w-100  mt-2 d-block\" disabled={this.props.inProgress}>Update</Button>\n                        </div>\n                        <div className=\"col-md-6\">\n                        <Button onClick={this.changePhone} type=\"button\" variant=\"primary-outline\" className=\"big box w-100  mt-2 d-block\" >\n                           Cancel\n                        </Button>\n                        </div>\n                    </div>\n                  \n                </div>\n              </form>\n\n              }\n              \n{/*                \n                <h3 className=\"new\">Already have an account?</h3>\n                <A href=\"/login\" className=\"join\">Login</A> */}\n\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      <FrontPageFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Verify;\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport A from '../A';\nimport { GetAssetImage } from '../../globalFunctions';\nimport './styles.css';\nimport config from '../../config';\n\n  \nconst FrontPageFooter = props => {\n    const [layout, setLayout] = useState(props.layout != undefined ? props.layout : \"default\");\n    // const [size, setSize] = useState(props.size != undefined ? props.size : \"\");\n    \n  return (\n    <footer className=\"frontFooter\">\n      <div className=\"container\">\n      <p>Copyright &copy; 2021 Eclipton | All rights reserved</p>\n      <p className=\"pl-3 pr-3\">Activity licence FVT000294</p>\n      <div className=\"d-flex align-items-center justify-content-end flex-wrap foot-menu\">\n        {/* <A href=\"#\">Privacy Policy</A> */}\n        <a href={config.frontEnd+\"terms-and-conditions.pdf\"} target=\"_BLANK\">Terms & Conditions</a>\n        <A href=\"/contact-us\">Contact Us</A>\n        {/* <A href=\"#\">Request Partnership</A> */}\n      </div>\n      </div>\n    </footer>\n  );\n\n};\n\nexport default FrontPageFooter;","import config from \"../config/index\";\nimport {\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n/**\n * twitter auth\n * @param {object} data oauthDevToken, oauthDevSecret\n */\nexport const googleAuth = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"google-login\" , false, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const facebookAuth = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"facebook-login\" , false, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n"],"sourceRoot":""}