{"version":3,"sources":["pages/Gionomy/ViewRequest/index.js"],"names":["require","ViewGigRequest","props","init","getData","currentUser","getGigs","getGigRequest","id","match","params","userid","_id","then","resp","setState","loading","post","bidded","getBids","author","err","error","myGigs","limit","page","gigs","getGigBids","bids","bid","state","gig","alertBox","switchLoader","bidRequest","msg","modal","data","message","remove","removeBid","delete","removeGigRequest","window","location","href","this","className","displayModal","closeModal","e","length","onChange","target","value","map","g","i","key","subject","preferedCurrency","standardPrice","placeholder","color","size","variant","onClick","Fragment","showStatus","showIndicators","contents","img","src","content_url","budget","acceptedGig","maxGigs","slug","dangerouslySetInnerHTML","__html","text","giginfo","pic","undefined","status","React","Component"],"mappings":"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","file":"static/js/67.234c2eb1.chunk.js","sourcesContent":["import React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { alertBox, switchLoader } from '../../../commonRedux';\nimport A from '../../../components/A';\nimport Button from '../../../components/Button';\nimport Modal from '../../../components/Popup';\nimport Spinner from '../../../components/Spinner';\nimport { pic } from '../../../globalFunctions';\nimport { bidRequest, getGigBids, getGigRequest, myGigs, removeBid, removeGigRequest } from '../../../http/gig-calls';\nrequire (\"./styles.css\");\n\nclass ViewGigRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      loading: true,\n      modal:false,\n      author:false,\n      bidded: 0,\n      post: null,\n      gig:\"\",\n      msg: \"\",\n      bids: [],\n      gigs: []\n    };\n  }\n   \n\n  componentDidMount(){\n    this.setState({\n      id: this.props.match.params.id\n    }, this.init());\n  }\n\n  init = () => {\n    this.getData();\n    if(this.props.currentUser != null){\n      this.getGigs();\n    }\n    \n  }\n\n  getData = () => {\n      try {\n        getGigRequest({id: this.props.match.params.id, userid: this.props.currentUser == null ? 0 : this.props.currentUser._id}).then(resp => {\n            this.setState({\n              loading:false,\n              post: resp.post,\n              bidded: resp.bidded\n            }, ()=>{\n              \n              this.getBids(resp.post._id);\n              \n              if(this.props.currentUser != null && resp.post.userid == this.props.currentUser._id){\n                  this.setState({\n                      author:true\n                  })\n              }\n            });\n           \n          }, err => {\n            this.setState({\n                loading:false\n            })\n          });\n      } catch (error) {\n        this.setState({\n            loading:false\n        })\n      }\n     \n  }\n\n  getGigs = () => {\n    try {\n      myGigs({limit:100, page:1}).then(resp => {\n          this.setState({\n            gigs: resp.post\n          })\n        }, err => {\n        });\n    } catch (error) {\n    }\n}\n\ngetBids = (id) => {\n    try {\n      getGigBids({id: id, limit:100, page:1}).then(resp => {\n          this.setState({\n            bids: resp\n          })\n        }, err => {\n        });\n    } catch (error) {\n    }\n}\n\n  bid = () => {\n\n      if(this.state.gig == ''){\n          alertBox(true, \"You need to select a gig\");\n      }else{\n          switchLoader(true, \"Please wait...\")\n      try {\n        bidRequest({id:this.props.match.params.id, gig: this.state.gig, msg: this.state.msg, }).then(resp => {\n            switchLoader();\n            this.setState({\n              modal:false\n            })\n            this.init();\n           }, err => {\n            switchLoader();\n           alertBox(true, err.data.message)\n             });\n      } catch (error) {\n          switchLoader();\n        alertBox(true, \"Error occured, try again\")\n      }\n    }\n  \n  }\n\n\n  remove = (id) => {\n\n        switchLoader(true, \"Please wait...\")\n    try {\n      removeBid({id:id}).then(resp => {\n          switchLoader();\n          this.init();\n         }, err => {\n          switchLoader();\n         alertBox(true, err.data.message)\n           });\n    } catch (error) {\n        switchLoader();\n      alertBox(true, \"Error occured, try again\")\n    }\n  \n\n}\n\ndelete = () => {\n\n  switchLoader(true, \"Please wait...\")\ntry {\nremoveGigRequest({id:this.props.match.params.id}).then(resp => {\n    switchLoader();\n    window.location.href = \"/passionomy/dashboard/requests\";\n   }, err => {\n    switchLoader();\n   alertBox(true, err.data.message)\n     });\n} catch (error) {\n  switchLoader();\nalertBox(true, \"Error occured, try again\")\n}\n}\n\n\n\n    render() {\n        const modal = this.state.modal;\n        return (\n            <div className=\"ViewGigRequest\">\n                   <Modal displayModal={modal} closeModal={(e)=>{this.setState({modal: !modal}); }} >\n        <h3>Choose one of your gigs</h3>\n        {\n          this.state.gigs.length > 0 ?\n          <div className=\"mt-2\">\n          <select className=\"form-control\" onChange={(e) => {this.setState({gig: e.target.value})}} value={this.state.gig}>\n              <option value=\"\">Select</option>\n              {\n                  this.state.gigs.map((g,i) => {\n                      return <option key={i} value={g._id}>{g.subject} - {g.preferedCurrency} {g.standardPrice}</option>\n                  })\n              }\n          </select>\n          <textarea className=\"mt-2 form-control\" placeholder=\"Message (optional)\" onChange={(e) => {this.setState({msg: e.target.value})}}></textarea>\n      </div>\n      :\n          <div className=\"mt-2 d-flex align-items-center justify-content-center\">\n            <p>You don't have any gig, please <A href=\"/passionomy/gigs/add\" className=\"text-primary\">create</A> one and come back to this page</p>\n          </div>\n        \n        }\n        <div className=\"d-flex align-items-center justify-content-center mt-4\">\n        {\n          this.state.gigs.length > 0 && <Button color=\"primary\" size=\"big\" variant=\"contained\" onClick={() => this.bid()}>BID</Button> } &nbsp; <Button onClick={(e)=>{this.setState({modal: !modal}); }}  size=\"big\" variant=\"primary-outline\">Cancel</Button>\n        </div>\n        \n      </Modal>\n            <div className=\"container my-wall-container \">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm empty-container-with-out-border left-column\">\n                </div>\n                <div className=\"col-sm empty-container-with-out-border center-column\">\n                {\n                    this.state.loading ?\n                    <Spinner />\n                    :\n                        this.state.post == null ?\n                        <p className=\"no-found\">No Data Found</p>\n                        :\n                        <React.Fragment>\n                    <div className=\"empty-inner-container-with-border p-3\">\n                 \n                        <Carousel showStatus={false} showIndicators={false}>\n                        {\n                            this.state.post.contents.map((img, i)=>{\n                                return <div key={i}>\n                            <img src={img.content_url} />\n                        </div>\n                            })\n                        }\n                        \n                    </Carousel>\n                    \n                    </div>\n                    <div className=\"mt-3 empty-inner-container-with-border p-3 d-flex align-items-center justify-content-between\">\n                    <div><h3 >{this.state.post.subject}</h3>\n                    <div>Expected Budget: <strong>{this.state.post.preferedCurrency ?? 'USD'} {this.state.post.budget}</strong></div>\n                    <div className=\"mt-2\">Accepted Gigs:  <strong>{this.state.post.acceptedGig ?? 0} / {this.state.post.maxGigs == 0 ? 'Infinity' : this.state.post.maxGigs}</strong></div>\n                    </div>\n                    <div className=\"text-right\">\n                    {\n                    this.state.author ? \n                    <Button onClick={this.delete} size=\"big\" variant='danger'>Delete</Button> :\n                    this.state.bidded == 0  && (this.state.post.maxGigs == 0 || (this.state.post.acceptedGig < this.state.post.maxGigs)) && <Button onClick={(e)=>{  this.props.currentUser == null ? window.location.href=\"/login?next=/passionomy/request/\"+this.state.post.slug : this.setState({modal: !modal}); }} size=\"big\">BID</Button>\n\n                    }\n                    </div>\n                    \n                    </div>\n                    <div className=\"mt-3 empty-inner-container-with-border p-3 d-flex align-items-center justify-content-between\">\n                    <div dangerouslySetInnerHTML={{__html: this.state.post.text}}></div>\n                    </div>\n                    <div className=\"mt-3 empty-inner-container-with-border p-3\">\n                        <h3 >Bids ({this.state.bids.length})</h3>\n                        <div className=\"mt-3\">\n                            {\n                                this.state.bids.length > 0 && this.state.bids.map((bid, i) => {\n                                    return <div className=\"bid-row\" key={i}>\n                                        <div className=\"bid-thumb pointer\" onClick={()=>{window.location.href = '/passionomy/gig/'+bid.giginfo.slug+\"?request=\"+this.state.id}}>\n                                            <img src={pic(bid.contents[0] != undefined ? bid.contents[0].content_url : '')} />\n\n                                        </div>\n                                            <div className=\"bid-desc\">\n                                                <div>\n                                                <h3 className=\"title pointer\" onClick={()=>{window.location.href = '/passionomy/gig/'+bid.giginfo.slug+\"?request=\"+this.state.id}}>{bid.giginfo.subject}</h3>\n                                                <p>{bid.message}</p>\n                                                </div>\n                                                <div className=\"text-center\">\n                                                    <div><div><label>Starts at</label></div>\n                                                    <div className=\"price\">{bid.giginfo.preferedCurrency} {bid.giginfo.standardPrice}</div></div>\n                                                    {\n                                                        bid.status == 1 ? \n                                                        <p className=\"text-success\">Accepted</p>\n                                                        :\n                                                        this.state.author ? <Button onClick={()=>{window.location.href = '/passionomy/gig/'+bid.giginfo.slug+\"?request=\"+this.state.id}}>Accept</Button> : <Button onClick={() => this.remove(bid._id)}>Remove</Button>\n                                                    }\n                                                    \n                                                </div>\n                                            </div>\n                                    </div>\n                                })\n                            }\n                        </div>\n                    </div>\n\n                    </React.Fragment>}\n                </div>\n                <div className=\"col-sm empty-container-with-out-border right-column\">\n                    {/* <GigMenu {...this.props} /> */}\n                </div>\n                {/* <!-- end right column --> */}\n              </div>\n            </div>\n\n            </div>\n\n      )\n    }\n}\n\nexport default ViewGigRequest;\n"],"sourceRoot":""}