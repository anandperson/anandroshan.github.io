{"version":3,"sources":["components/Post/FilteredNewsFeed.js","components/Post/FeedBlog.js","components/Post/NewsFeed.js","components/Wallet/quickBuy.js","pages/Home/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","http/blog-calls.js","components/RewardsWidget/index.js","components/Post/BlogPost.js","components/Menu/SocialMenu.js","components/Friends/RecommendedFriends.js"],"names":["FilteredNewsFeed","props","getPaginatePost","getFilteredNewsFeed","userid","currentUser","_id","limit","state","page","filter","then","resp","a","setState","posts","post","hasMore","length","postLoaded","showSkeleton","error","loadFunc","prevState","commentLike","postid","commentId","likeComment","message","commentReply","comment","commentIndex","callBack","replyComment","refreshHighlights","likePost","liked","postCmt","obj","commentText","postComment","showComments","getComments","handleChange","evt","index","target","name","value","replyCmt","getSkeletonContent","i","className","key","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","query","bind","this","prevProps","latestpost","postObj","isExist","find","item","unshift","pageStart","initialLoad","loadMore","map","Post","Array","fill","React","Component","require","NewsFeed","checkWallet","console","log","walletCheck","getCoins","err","getAllPairs","localStorage","setItem","JSON","stringify","data","coins","coinsLoaded","getNewsFeed","arr1","QuickBuy","useState","setCoins","status","setStatus","loading","setLoading","setError","useEffect","kycStatus","window","getItem","allPairs","undefined","getTradePairs","listenSocket","toString","da","ticker","el","document","getElementById","pair","innerText","marketPrice","toFixed","variant","id","Spinner","e","toCurrency","currencySymbol","A","href","Button","size","Home","setStateFunc","refreshing","filterPosts","opt","latestblogs","latestgigs","getLatest","blogs","gigs","SocialMenu","current","RecommendedFriends","CreatePost","slug","style","backgroundImage","pic","contents","content_url","category","subject","clapsCount","price","preferedCurrency","profilePic","userinfo","avatar","standardPrice","RewardsWidget","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","getBlogCategories","params","Promise","resolve","reject","makeAxiosGetRequest","config","baseUrl","res","catch","response","createBlog","makeAxiosPostRequest","updateBlog","getPosts","auth","getFilteredBlogPosts","postRemove","getSinglePost","getPopularBlogs","getCategoryBlogs","getAuthorBlogs","clap","sendTips","purchaseBlog","checkPurchasedBlog","getBlogDraft","getBlogStats","src","GetAssetImage","BlogPost","extractUrl","text","regex","RegExp","match","reportModal","componentDidMount","single","txt","parse","editorContent","postText","blocks","tips","len","findIndex","currency","amount","EstimatedUSD","postActivityCount","activityType","action","editPost","save","postSave","alertBox","saved","unSave","postUnSave","report","p","link","postReport","type","reason","reported","unReport","postUnReport","hidePost","postHide","hidden","unhidePost","postUnHide","removePost","last","open","removePostConfirm","removed","highlightPost","postHighlight","highlighted","unHighlight","postUnHighlight","likePostFn","postId","likeActive","sharePost","shareModel","currPost","closeShareModal","handleOnReady","setTimeout","playing","handleClose","switchLoader","shareSuccess","showCommentReply","tempPostData","showReply","showCommentReplies","getReplyComments","replies","callBackCommentReply","replyData","push","tempReplyCmt","getPostContent","url","thumb","k","title","likes","shares","shareCount","comments","cmtsCount","description","authorid","displayModal","closeModal","onChange","placeholder","onClick","onClose","sharedBy","getSuggestedFriends","getSuggestions","users","toggleSkeleton","checkMore","seemore","search","val","addFriend","userIndex","followUser","followerid","tempUser","request","uid","refresh","accept","user","acceptRequest","cancelRequest","connectSocket","friendRequest","autoFocus","alt","layout","dropdownOptions","n"],"mappings":"kZA4NeA,G,wDAhNX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAiDVC,gBAAkB,WACdC,YAAoB,CAAEC,OAAQ,EAAKH,MAAMI,YAAYC,IAAKC,MAAO,EAAKC,MAAMD,MAAOE,KAAM,EAAKD,MAAMC,KAAMC,OAAQ,EAAKT,MAAMS,SAAU,GAClIC,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACF,EAAKC,SAAS,CACVC,MAAM,GAAD,mBAAM,EAAKP,MAAMO,OAAjB,YAA2BH,EAAKI,OACrCC,WAASL,EAAKI,MAAQJ,EAAKI,KAAKE,OAAS,GACzCC,YAAY,EACZC,cAAc,IALhB,2CADV,uDAQO,SAAAC,GAEC,EAAKP,SAAS,CAAEK,YAAY,EAAMC,cAAc,QA7DzC,EAiEnBE,SAAW,WACF,EAAKd,MAAMY,eACZ,EAAKN,SAAS,CAAEM,cAAc,IAC9B,EAAKN,UAAS,SAAAS,GACV,OAAO,2BACAA,GADP,IAEId,KAAMc,EAAUd,KAAO,EACvBW,cAAc,OAEnB,WACC,EAAKlB,uBA3EE,EAiFnBsB,YAAc,SAACC,EAAQC,GAEnBC,YAAY,CAAEF,SAAQC,cAAa,GAC9Bf,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACkB,QAAhBD,EAAKgB,SAEEhB,EAAKgB,QAHd,2CADV,uDAOO,SAAAP,QA1FQ,EA+FnBQ,aAAe,SAACJ,EAAQC,EAAWI,EAASC,EAAcC,GACtDC,YAAa,CAAER,OAAQA,EAAQC,YAAWI,YAAW,GAChDnB,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACFmB,EAASpB,EAAKkB,QAASC,GADrB,2CADV,uDAGO,SAAAV,QAnGQ,EAwGnBa,kBAAoB,WAChB,EAAKjC,MAAMiC,qBAzGI,EA4GnBC,SAAW,SAACV,EAAQW,GAChBD,YAAS,CAAEV,OAAQA,IAAU,GACxBd,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,0FADV,uDAGO,SAAAQ,QAhHQ,EAqHnBgB,QAAU,SAACZ,GACP,IAAIa,EAAM,CAAEb,SAAQK,QAAS,EAAKtB,MAAM+B,aACxCC,YAAYF,GACP3B,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,0FADV,uDAGO,SAAAQ,QA1HQ,EA+HnBoB,aAAe,SAAChB,GACZiB,YAAY,CAAEjB,WAAU,GACnBd,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACF,EAAKC,SAAS,CAAE2B,cAAc,IAD5B,2CADV,uDAGO,SAAApB,QAnIQ,EAyInBsB,aAAe,SAACC,EAAKC,GAAW,IAAD,EACHD,EAAIE,OAApBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACS,YAAnBJ,EAAIE,OAAOC,KACX,EAAKjC,SAAL,eAAiBiC,EAAOC,IAAS,eAEjC,EAAKlC,SAAL,yBAAoBiC,GAApB,2BAAkC,EAAKvC,MAAMyC,UAA7C,kBAAwDJ,EAAQG,MAAW,gBA9IhE,EAmJnBE,mBAAqB,SAACC,GAClB,OACI,yBAAKC,UAAU,6CAA6CC,IAAKF,GAC7D,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,wBACV,wBAAIA,UAAU,qEACV,kBAAC,IAAD,CACIE,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,WAGhB,0BAAMC,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIR,MAAM,KAAKC,OAAO,MACnD,0BAAMI,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,KAAKC,OAAO,MACpD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,MACpD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,MACpD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,MACpD,4BAAQQ,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,0BAAMN,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,gBAvKhF,EAAKhD,MAAQ,CACT2D,MAAOlE,EAAMkE,MACbpD,MAAO,GACPN,KAAM,EACNF,MAAO,EACPU,SAAS,EACTE,YAAY,EACZC,cAAc,EACdqB,cAAc,EACdF,YAAa,IAEjB,EAAKf,YAAc,EAAKA,YAAY4C,KAAjB,gBACnB,EAAK9C,SAAW,EAAKA,SAAS8C,KAAd,gBAChB,EAAKjC,SAAW,EAAKA,SAASiC,KAAd,gBAChB,EAAKlE,gBAAkB,EAAKA,gBAAgBkE,KAArB,gBAhBR,E,gEAoBfC,KAAKnE,oB,yCAGUoE,GAAY,IAAD,OACtBD,KAAKpE,MAAMS,QAAU4D,EAAU5D,QAC/B2D,KAAKvD,SAAS,CACVM,cAAc,IACf,WACC,EAAKlB,uB,kDAMY,IAAD,OACxB,GAAImE,KAAKpE,MAAMsE,YAAcF,KAAKpE,MAAMsE,WAAWnE,OAAQ,CAEvD,IAAMmE,EAAaF,KAAKpE,MAAMsE,WACxBC,EAAUH,KAAK7D,MAAMO,MAEvB0D,EAAUD,EAAQE,MAAK,SAAAC,GAAI,OAAIA,EAAKrE,KAAOiE,EAAWjE,OACpDmE,GAAWA,EAAQnE,MACrBkE,EAAQI,QAAQL,GAChBF,KAAKvD,SAAS,CAAEC,MAAO,KAAM,WACzB,EAAKD,SAAS,CAAEC,MAAOyD,W,+BAsI7B,IAAD,SACuCH,KAAK7D,MAD5C,EACGQ,KADH,EACSyB,aADT,EACuBF,YAE5B,OACI,6BACI,kBAAC,IAAD,CACIsC,UAAW,EACXC,aAAa,EACbC,SAAUV,KAAK/C,SACfL,QAASoD,KAAK7D,MAAMS,SAEnBoD,KAAK7D,MAAMW,YAAckD,KAAK7D,MAAMO,MAAMiE,KAAI,SAAChE,EAAMmC,GAAP,OAC3C,kBAAC8B,EAAA,EAAD,CAAM/C,kBAAmB,EAAKA,kBAAoBlB,KAAMA,EAAMN,OAAQ,EAAKT,MAAMS,OAAQc,YAAa,EAAKA,YAAaK,aAAc,EAAKA,aAAcwB,IAAKF,EAAG9C,YAAa,EAAKJ,MAAMI,kBAI/LgE,KAAK7D,MAAMY,cACT,6BACK8D,MAAM,GAAGC,OAAOH,KAAI,SAACL,EAAM9B,GAAP,OAAiB,EAAKK,mBAAmBL,OAIxC,IAA5BwB,KAAK7D,MAAMO,MAAMG,QAAgBmD,KAAK7D,MAAMW,YAC1C,yBAAKiC,UAAU,YAAf,wB,GA1MWgC,IAAMC,Y,4FCKrCC,EAAQ,KAEmBA,EAAQ,KAEZF,IAAMC,UAF7B,I,QCyReE,E,kDA3RX,WAAYtF,GAAQ,IAAD,8BACf,cAAMA,IAuDVuF,YAAc,WACVC,QAAQC,IAAI,UACZC,cAAchF,MAAK,SAAAC,GACf6E,QAAQC,IAAI,WACZ,EAAKE,cACN,SAAAC,GACCJ,QAAQC,IAAI,cACZD,QAAQC,IAAIG,OA/DD,EAmEnBD,SAAW,WAWPE,cAAcnF,MAAK,SAAAC,GACfmF,aAAaC,QAAQ,WAAYC,KAAKC,UAAUtF,EAAKuF,OACrDV,QAAQC,IAAI9E,EAAKuF,MACjB,EAAKrF,SAAS,CACVsF,MAAOxF,EAAKuF,OACb,WACC,EAAKrF,SAAS,CACVuF,aAAY,UAGrB,SAAAR,GACCJ,QAAQC,IAAIG,OAzFD,EA4FnB3F,gBAAkB,WAedoG,YAAY,CAAElG,OAAQ,EAAKH,MAAMI,YAAYC,IAAKC,MAAO,EAAKC,MAAMD,MAAOE,KAAM,EAAKD,MAAMC,OAAQ,GAC/FE,KADL,uCACU,WAAMC,GAAN,eAAAC,EAAA,sDACE0F,EAAO3F,EAAKG,MAAMC,KAMtByE,QAAQC,IAAI9E,GAEZ,EAAKE,SAAS,CACVC,MAAM,GAAD,mBAAM,EAAKP,MAAMO,OAAjB,YAA2BwF,IAChCtF,WAASL,EAAKG,MAAMC,MAAQJ,EAAKG,MAAMC,KAAKE,OAAS,GACrDC,YAAY,EAAMC,cAAc,IAZlC,2CADV,uDAoBO,SAAAC,GAEC,EAAKP,SAAS,CAAEK,YAAY,EAAMC,cAAc,QAjIzC,EAsInBE,SAAW,YACF,EAAKd,MAAMY,cAAgB,EAAKZ,MAAMS,SACvC,EAAKH,SAAS,CAAEM,cAAc,IAC9B,EAAKN,UAAS,SAAAS,GACV,OAAO,2BACAA,GADP,IAEId,KAAMc,EAAUd,KAAO,EACvBW,cAAc,OAEnB,WACC,EAAKlB,uBAGT,EAAKY,SAAS,CAAEM,cAAc,EAAOD,YAAW,IAChDsE,QAAQC,IAAI,EAAKlF,SApJN,EAyJnBgB,YAAc,SAACC,EAAQC,GAEnBC,YAAY,CAAEF,SAAQC,cAAa,GAC9Bf,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACkB,QAAhBD,EAAKgB,SAEEhB,EAAKgB,QAHd,2CADV,uDAOO,SAAAP,QAlKQ,EAuKnBQ,aAAe,SAACJ,EAAQC,EAAWI,EAASC,EAAcC,GACtDC,YAAa,CAAER,OAAQA,EAAQC,YAAWI,YAAW,GAChDnB,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACFmB,EAASpB,EAAKkB,QAASC,GADrB,2CADV,uDAGO,SAAAV,QA3KQ,EAgLnBc,SAAW,SAACV,EAAQW,GAChBD,YAAS,CAAEV,OAAQA,IAAU,GACxBd,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,0FADV,uDAGO,SAAAQ,QApLQ,EAyLnBgB,QAAU,SAACZ,GACP,IAAIa,EAAM,CAAEb,SAAQK,QAAS,EAAKtB,MAAM+B,aACxCC,YAAYF,GACP3B,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,0FADV,uDAGO,SAAAQ,QA9LQ,EAmMnBoB,aAAe,SAAChB,GAEZiB,YAAY,CAAEjB,WAAU,GACnBd,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACF,EAAKC,SAAS,CAAE2B,cAAc,IAD5B,2CADV,uDAGO,SAAApB,QAxMQ,EA8MnBa,kBAAoB,aA9MD,EAkNnBS,aAAe,SAACC,EAAKC,GAAW,IAAD,EACHD,EAAIE,OAApBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACS,YAAnBJ,EAAIE,OAAOC,KACX,EAAKjC,SAAL,eAAiBiC,EAAOC,IAAS,eAEjC,EAAKlC,SAAL,yBAAoBiC,GAApB,2BAAkC,EAAKvC,MAAMyC,UAA7C,kBAAwDJ,EAAQG,MAAW,gBAvNhE,EA4NnBE,mBAAqB,SAACC,GAClB,OACI,yBAAKC,UAAU,QAAQC,IAAKF,GACxB,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,wBACV,wBAAIA,UAAU,qEACV,kBAAC,IAAD,CACIE,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,WAGhB,0BAAMC,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIR,MAAM,KAAKC,OAAO,MACnD,0BAAMI,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,KAAKC,OAAO,MACpD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,MACpD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,MACpD,0BAAMI,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,MACpD,4BAAQQ,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,0BAAMN,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,gBAhPhF,EAAKhD,MAAQ,CACT2D,MAAOlE,EAAMkE,MACbpD,MAAO,GACPN,KAAM,EACNF,MAAO,EACP6F,MAAM,GACNC,aAAa,EACbpF,SAAS,EACTE,YAAY,EACZC,cAAc,EACdqB,cAAc,EACdF,YAAa,IAEjB,EAAKf,YAAc,EAAKA,YAAY4C,KAAjB,gBACnB,EAAK9C,SAAW,EAAKA,SAAS8C,KAAd,gBAChB,EAAKjC,SAAW,EAAKA,SAASiC,KAAd,gBAChB,EAAKlE,gBAAkB,EAAKA,gBAAgBkE,KAArB,gBAlBR,E,gEAsBfC,KAAKnE,oB,yCAIUoE,GAAW,IAAD,OACzB,GAAGA,EAAUC,WAAWjE,KAAO+D,KAAKpE,MAAMsE,WAAWjE,IAAI,CACrD,IAAMiE,EAAaF,KAAKpE,MAAMsE,WACxBC,EAAUH,KAAK7D,MAAMO,MAEvB0D,EAAUD,EAAQE,MAAK,SAAAC,GAAI,OAAIA,EAAKrE,KAAOiE,EAAWjE,OACpDmE,GAAWA,EAAQnE,MACrBkE,EAAQI,QAAQL,GAChBF,KAAKvD,SAAS,CAAEC,MAAO,KAAM,WACzB,EAAKD,SAAS,CAAEC,MAAOyD,W,kDAMV,IAAD,OACxB,GAAIH,KAAKpE,MAAMsE,YAAcF,KAAKpE,MAAMsE,WAAWnE,OAAQ,CAEvD,IAAMmE,EAAaF,KAAKpE,MAAMsE,WACxBC,EAAUH,KAAK7D,MAAMO,MAEvB0D,EAAUD,EAAQE,MAAK,SAAAC,GAAI,OAAIA,EAAKrE,KAAOiE,EAAWjE,OACpDmE,GAAWA,EAAQnE,MACrBkE,EAAQI,QAAQL,GAChBF,KAAKvD,SAAS,CAAEC,MAAO,KAAM,WACzB,EAAKD,SAAS,CAAEC,MAAOyD,W,+BAwM7B,IAAD,SACuCH,KAAK7D,MAD5C,EACGQ,KADH,EACSyB,aADT,EACuBF,YAE5B,OACI,6BACI,kBAAC,IAAD,CACIsC,UAAW,EACXC,aAAa,EACbC,SAAUV,KAAK/C,SACfL,QAASoD,KAAK7D,MAAMS,SAElBoD,KAAK7D,MAAMW,YAAckD,KAAK7D,MAAMO,MAAMiE,KAAI,SAAChE,EAAMmC,GAAP,OAE5C,kBAAC8B,EAAA,EAAD,CAAMjE,KAAMA,EAAMN,OAAO,GAAGc,YAAa,EAAKA,YAAaK,aAAc,EAAKA,aAAcwB,IAAKF,EAAG9C,YAAa,EAAKJ,MAAMI,kBAMlIgE,KAAK7D,MAAMY,cACT,6BACK8D,MAAM,GAAGC,OAAOH,KAAI,SAACL,EAAM9B,GAAP,OAAiB,EAAKK,mBAAmBL,OAIrC,GAA3BwB,KAAK7D,MAAMO,MAAMG,QAAemD,KAAK7D,MAAMW,YAAe,yBAAKiC,UAAU,QAAO,uBAAGA,UAAU,uBAAb,wB,GArR/EgC,IAAMC,W,kCCiIdmB,EAnIE,SAAAvG,GAAU,IAAD,EACIwG,mBAAS,IADb,mBACfL,EADe,KACRM,EADQ,OAEMD,mBAAS,IAFf,mBAEfE,EAFe,KAEPC,EAFO,OAGQH,oBAAS,GAHjB,mBAGfI,EAHe,KAGNC,EAHM,OAIIL,mBAAS,IAJb,mBAIRM,GAJQ,aAKQN,mBAAS,GALjB,gCAMQA,mBAAS,IANjB,6BAQtBO,qBAAU,WACR,IAAIC,EAAYC,OAAOnB,aAAaoB,QAAQ,aAC1B,MAAbF,IACCH,GAAW,GACXF,EAAUK,GACVG,KAENzB,cAAchF,MAAK,SAAAC,GACjBsG,OAAOnB,aAAaC,QAAQ,YAAapF,EAAKuF,KAAKQ,QACnDG,GAAW,GACXF,OAA+BS,GAApBzG,EAAKuF,KAAKQ,OAAuB,GAAK/F,EAAKuF,KAAKQ,QAC3DS,OACC,SAAAvB,GACDiB,GAAW,GACXC,EAAS,8BAGV,IAKH,IAAMK,EAAW,WACf3B,QAAQC,IAAI,YASV4B,cAAgB3G,KAAhB,uCAAqB,WAAMC,GAAN,SAAAC,EAAA,sDACjB6F,EAAS9F,GACTmG,EAAS,IACTD,GAAW,GACXS,EAAa3G,GAJI,2CAArB,uDAKG,SAAAS,GACC,IACIyF,GAAW,GACXC,EAAS1F,EAAM8E,KAAKqB,YACtB,MAAOnG,GACLyF,GAAW,GACXC,EAAS,cAKfQ,EAAe,SAACE,GAGlBC,YAAO,wBAAwB,SAACvB,GAC9B,QAAWkB,GAARlB,GAA6B,MAARA,GAAwB,IAARA,EAAW,CACjD,IAAIwB,EAAKC,SAASC,eAAe,KAAK1B,EAAK2B,MAEpC,MAANH,IACDA,EAAGI,UAAY5B,EAAK6B,YAAYC,QAAQ,SAwBhD,OACI,yBAAK7E,UAAW,qEAAsF,MAAjBnD,EAAMiI,SAAmB,IAAIjI,EAAMiI,UACtH,yBAAK9E,UAAU,OACf,wBAAIA,UAAU,oBAEZ,wBAAIA,UAAU,eACd,uBAAGA,UAAU,kBADb,IACkC,sDAM9B,yBAAKA,UAAU,kBAAkB+E,GAAG,oBAClC,yBAAK/E,UAAU,YAEXyD,EAAU,kBAACuB,EAAA,EAAD,MAGNhC,EAAMlF,OAAS,GAAKkF,EAAMpB,KAAI,SAACqD,EAAGlF,GAChC,OAAuB,MAAhBkF,EAAEC,WAAqB,KAAsC,OAA/BD,EAAEC,WAAWC,eAA2B,yBAAKnF,UAAU,cAAcC,IAAKF,GAC7G,yBAAKC,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,QAAf,UAA0BiF,EAAEP,OAC5B,yBAAK1E,UAAU,cAAc+E,GAAI,KAAKE,EAAEP,MAAOO,EAAEL,YAAYC,QAAQ,MAG9D,UAAVtB,GAAsB,yBAAKvD,UAAU,YACpC,yBAAKA,UAAU,SACf,kBAACoF,EAAA,EAAD,CAAGC,KAAM,mBAAmBJ,EAAEP,MAAM,kBAACY,EAAA,EAAD,CAAQR,QAAQ,QAAQS,KAAK,SAA7B,WAIrC,aCzH/BrD,EAAS,M,IAEHsD,E,kDACJ,WAAY3I,GAAQ,IAAD,8BACjB,cAAMA,IAUR4I,aAAe,SAACxF,EAAIL,GAClByC,QAAQC,IAAIrC,GACZ,EAAKvC,SAAL,eAAgBuC,EAAKL,KAbJ,EA+BnBd,kBAAoB,WAClB,EAAKpB,SAAS,CACZgI,YAAY,IACX,WACD,EAAKhI,SAAS,CACZgI,YAAY,QApCC,EAyCnBC,YAAc,SAACC,GACb,EAAKlI,SAAS,CACZyD,WAAY,GACZ7D,OAAQsI,KA1CV,EAAKxI,MAAQ,CACXsI,YAAY,EACZpI,OAAQ,GACRuI,YAAa,GACbC,WAAY,GACZ3E,WAAY,IAPG,E,gEAgBC,IAAD,OACjB4E,cAAYxI,MAAK,SAAAC,GACf,IACE,EAAKE,SAAS,CACZmI,YAAarI,EAAKwI,MAAMpI,KACxBkI,WAAYtI,EAAKyI,KAAKrI,OAExB,MAAOK,U,+BA2BP,OACI,yBAAK+B,UAAU,YACf,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sDAEb,kBAACkG,EAAA,EAAD,iBAAiBjF,KAAKpE,MAAtB,CAA6BsJ,QAAQ,OACrC,kBAACC,EAAA,EAAuBnF,KAAKpE,QAE/B,yBAAKmD,UAAU,wDAGf,yBAAMA,UAAU,sBACd,kBAACqG,EAAA,EAAD,eAAY3I,SAAUuD,KAAKwE,cAAkBxE,KAAKpE,SAIpD,yBAAKmD,UAAU,mBAEb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,SAAd,SACA,yBAAKA,UAAU,iBAaXiB,KAAK7D,MAAMyI,YAAYjE,KAAI,SAAChE,EAAMmC,GAAP,OACzB,yBAAKC,UAAU,iBAAiBC,IAAKF,GACrC,kBAACqF,EAAA,EAAD,CAAGC,KAAM,SAASzH,EAAK0I,MAAM,yBAAKtG,UAAU,QAAQuG,MAAO,CAACC,gBAAgB,OAAD,OAASC,iBAAwBxC,GAApBrG,EAAK8I,SAAS,GAAmB,GAAK9I,EAAK8I,SAAS,GAAGC,aAApE,SAC3E,yBAAK3G,UAAU,kBACf,kBAACoF,EAAA,EAAD,CAAGC,KAAM,UAAUzH,EAAKgJ,UAAU,uBAAG5G,UAAU,sBAAsBpC,EAAKgJ,WAC1E,kBAACxB,EAAA,EAAD,CAAGC,KAAM,SAASzH,EAAK0I,MAAM,uBAAGtG,UAAU,mBAAmBpC,EAAKiJ,UAChE,yBAAK7G,UAAU,kBACb,6BAAK,gCAASpC,EAAKkJ,YAAnB,UAEgB,GAAdlJ,EAAKmJ,MAAa,yBAAK/G,UAAU,mBAAkB,yCACnD,yBAAKA,UAAU,mBAAmBpC,EAAKoJ,iBAAvC,IAAyD,gCAASpJ,EAAKmJ,eASnF,kBAAC3B,EAAA,EAAD,CAAGC,KAAK,cAAa,kBAACC,EAAA,EAAD,CAAQR,QAAQ,kBAAkB9E,UAAU,oBAA5C,cAEvB,yBAAKA,UAAU,QACf,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,cACA,yBAAKA,UAAU,iBACdiB,KAAK7D,MAAM0I,WAAWlE,KAAI,SAAChE,EAAMmC,GAAP,OACvB,yBAAKC,UAAU,iBAAiBC,IAAKF,GACrC,kBAACqF,EAAA,EAAD,CAAGC,KAAM,mBAAmBzH,EAAK0I,MAAM,yBAAKtG,UAAU,QAAQuG,MAAO,CAACC,gBAAgB,OAAD,OAASC,iBAAwBxC,GAApBrG,EAAK8I,SAAS,GAAmB,GAAK9I,EAAK8I,SAAS,GAAGC,aAApE,SAErF,kBAACvB,EAAA,EAAD,CAAGC,KAAM,MAAMzH,EAAKZ,OAAQgD,UAAU,sBACpC,yBAAKA,UAAU,wBAAwBuG,MAAO,CAACC,gBAAgB,OAAD,OAAUS,YAAWrJ,EAAKsJ,SAASC,QAAnC,QAC9D,yBAAKnH,UAAU,gBAAgBpC,EAAKsJ,SAASvH,OAG/C,kBAACyF,EAAA,EAAD,CAAGC,KAAM,mBAAmBzH,EAAK0I,MAAM,uBAAGtG,UAAU,mBAAmBpC,EAAKiJ,UAC5E,yBAAK7G,UAAU,iCAEb,yBAAKA,UAAU,SAAf,IAAyBpC,EAAKoJ,iBAA9B,IAAiDpJ,EAAKwJ,qBAM5D,kBAAChC,EAAA,EAAD,CAAGC,KAAK,eAAc,kBAACC,EAAA,EAAD,CAAQR,QAAQ,kBAAmB9E,UAAU,oBAA7C,gBAOxB,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,qBAAd,cAIqB,IAArBiB,KAAK7D,MAAME,OACX,kBAAC,EAAD,eAAUI,SAAUuD,KAAKwE,aAActE,WAAYF,KAAK7D,MAAM+D,YAAiBF,KAAKpE,QAEpF,kBAAC,EAAD,eAAkBa,SAAUuD,KAAKwE,aAActE,WAAYF,KAAK7D,MAAM+D,YAAiBF,KAAKpE,MAA5F,CAAmGS,OAAQ2D,KAAK7D,MAAME,WAS1H,yBAAK0C,UAAU,uDACb,kBAACqH,EAAA,EAAkBpG,KAAKpE,OACxB,kBAAC,EAAD,c,GA3JCmF,IAAMC,WA4KVuD,a,6FCtLA,SAAS8B,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIzF,MAAM0F,QAAQD,GAAM,OAAO,OAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAO5F,MAAMgG,KAAKJ,GFIvD,CAAgBH,IAAQ,OAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,K,iCIL9F,0rBAYaC,EAAoB,SAACC,GAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoB,GAAD,OAAIC,IAAOC,QAAX,wBAAyC,EAAMN,GAC7D3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZC,EAAa,SAAC7F,GACvB,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,oBAAoB,EAAMzF,GAC3DxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZG,EAAa,SAAC/F,GACvB,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,oBAAoB,EAAMzF,GAC3DxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBASZI,EAAW,SAACb,EAAQc,GAC7B,OAAO,IAAIb,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,iBAAkBQ,EAAMd,GACxD3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GACHoD,EAAOpD,EAAE0D,iBAiBZM,EAAuB,SAAClG,GACjC,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,2BAA2B,EAAMzF,GACjExF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GACHoD,EAAOpD,EAAE0D,iBAKZO,EAAa,SAACnG,GACvB,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,oBAAoB,EAAMzF,GAC3DxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GACHoD,EAAOpD,EAAE0D,iBAoBZQ,EAAgB,SAACjB,GAC1B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,YAAY,EAAON,GACnD3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZS,EAAkB,SAAClB,GAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,qBAAqB,EAAMN,GAC3D3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZU,EAAmB,SAACnB,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,sBAAsB,EAAMN,GAC5D3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZW,EAAiB,SAACpB,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,oBAAoB,EAAMN,GAC1D3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAkBZY,EAAO,SAACrB,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,aAAa,EAAMN,GACpD3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GACHoD,EAAOpD,EAAE0D,iBAKZa,EAAW,SAACzG,GACrB,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,aAAa,EAAMzF,GACpDxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZc,EAAe,SAAC1G,GACzB,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,iBAAiB,EAAMzF,GACxDxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZe,EAAqB,SAAC3G,GAC/B,OAAO,IAAIoF,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,wBAAwB,EAAMzF,GAC9DxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZ5J,EAAW,SAACgE,EAAMiG,GAC3B,OAAO,IAAIb,SAAQ,SAACC,EAASC,GAEzBQ,YAAqBN,IAAOC,QAAU,YAAaQ,EAAMjG,GACpDxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZvJ,EAAc,SAAC2D,GAAuB,IAAjBiG,IAAgB,yDAC9C,OAAO,IAAIb,SAAQ,SAACC,EAASC,GACzBQ,YAAqBN,IAAOC,QAAU,eAAgBQ,EAAMjG,GACvDxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZpK,EAAc,SAACwE,EAAMiG,GAC9B,OAAO,IAAIb,SAAQ,SAACC,EAASC,GAEzBQ,YAAqBN,IAAOC,QAAU,oBAAqBQ,EAAMjG,GAC5DxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZ9J,EAAe,SAACkE,GAAuB,IAAjBiG,IAAgB,yDAC/C,OAAO,IAAIb,SAAQ,SAACC,EAASC,GAEzBQ,YAAqBN,IAAOC,QAAU,qBAAsBQ,EAAMjG,GAC7DxF,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBAKZgB,EAAe,SAACzB,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,kBAAkB,EAAMN,GACxD3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,iBA6BZiB,EAAe,SAAC1B,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAoBC,IAAOC,QAAU,cAAc,EAAMN,GACpD3K,MAAK,SAAAkL,GACFL,EAAQK,EAAI1F,SAEf2F,OAAM,SAAAzD,GAEHoD,EAAOpD,EAAE0D,kB,uHCvPVtB,IA9EO,SAACxK,GAAW,IAAD,EACDwG,oBAAS,GADR,mBACxBI,EADwB,aAEHJ,mBAAS,OAFN,mBAExBE,EAFwB,KAEhBC,EAFgB,KAY/B,OARAI,qBAAU,WACRrB,cAAchF,MAAK,SAACC,GAClB,IACEgG,EAAUhG,EAAKuF,KAAKQ,QACpB,MAAOtF,UAEV,IAGD,yBACE+B,UACE,4DACkB,MAAjBnD,EAAMiI,SAAmB,IAAMjI,EAAMiI,UAGxC,yBAAK9E,UAAU,OACb,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,eACZ,yBAAK6J,IAAKC,YAAc,+BACxB,2CAMJ,yBAAK9J,UAAU,cACZyD,EACC,kBAAC,IAAD,MAEA,yBAAKzD,UAAU,YACb,yBACE6J,IAAKC,YAAc,2BACnB9J,UAAU,cAGD,UAAVuD,EACC,6BACE,wDAC4B,8CAD5B,iBAIA,yDAC6B,8CAD7B,KAGA,kBAAC,IAAD,CAAG8B,KAAM,wBACP,kBAAC,IAAD,CAAQP,QAAQ,kBAAkBS,KAAK,OAAvC,iBAMJ,6BACE,wDAC4B,8CAD5B,0BAIA,yDAC6B,8CAD7B,KAGA,kBAAC,IAAD,CAAGF,KAAM,wBACP,kBAAC,IAAD,CAAQP,QAAQ,kBAAkBS,KAAK,OAAvC,uB,+RCtDpBrD,EAAQ,KAEmBA,EAAQ,KAAnC,IAEM6H,E,kDAEF,WAAYlN,GAAQ,IAAD,8BACf,cAAMA,IA2BVmN,WAAa,SAACC,GAChB,IACIC,EAAQ,IAAIC,OADC,2GAEjB,OAAOF,EAAKG,MAAMF,IA/BG,EAiCnBG,YAAc,WACV,EAAK3M,SAAS,CAAC2M,aAAc,EAAKjN,MAAMiN,eAlCzB,EAqCnBC,kBAAoB,WAEb,EAAKzN,MAAM0N,QACV,EAAKlL,aAAa,EAAKjC,MAAMQ,KAAKV,KAGtC,IACI,IAAIsN,EAAM3H,KAAK4H,MAAM,EAAK5N,MAAMe,KAAK8M,eACrC,EAAKhN,SAAS,CACViN,SAAUH,EAAII,OAAO,GAAG7H,KAAKkH,OAEnC,MAAOhM,GACL,EAAKP,SAAS,CACViN,SAAU,EAAK9N,MAAMe,KAAKqM,OAGlC,EAAKzH,YArDU,EA8DnBA,SAAW,WACP,EAAK9E,SAAS,CACVsF,MAAQ,EAAKnG,MAAMmG,QACrB,WAEF,GADIX,QAAQC,IAAI,EAAKlF,MAAMQ,KAAKiN,KAAM,EAAKzN,MAAM4F,YAC3BiB,GAAnB,EAAK7G,MAAMQ,WAA6CqG,GAAxB,EAAK7G,MAAMQ,KAAKiN,WAAyC5G,GAApB,EAAK7G,MAAM4F,MAAmB,CAC9F,IAAI8H,EAAM,EAAK1N,MAAMQ,KAAKiN,KAAK/M,OAC/B,GAAGgN,EAAM,EAAE,CACP,IAAID,EAAO,EACX,EAAKzN,MAAMQ,KAAKiN,KAAKjJ,KAAI,SAACqD,EAAGlF,GACzB,IAAIN,EAAQ,EAAKrC,MAAM4F,MAAM+H,WAAU,SAASxJ,EAAMxB,GAClD,OAAOwB,EAAK4D,iBAAmBF,EAAE+F,YAErC,IACIH,GAAQ5F,EAAEgG,OAAO,EAAK7N,MAAM4F,MAAMvD,GAAOyL,aAC3C,MAAOjN,IAGN8B,GAAM+K,EAAI,GACT,EAAKpN,SAAS,CACVmN,KAAMA,aAlFf,EA4FnBM,kBAAoB,SAACC,GAAkC,IAApBC,EAAmB,uDAAV,MAElCjK,EAAU,EAAKhE,MAAMQ,KACtBwD,EAAQgK,KACThK,EAAQgK,GAAgB,GAGxBhK,EAAQgK,GADE,OAAVC,EACwBjK,EAAQgK,GAAgB,EAExBhK,EAAQgK,GAAgB,EAEpD,EAAK1N,SAAS,CAAEE,KAAMwD,KAvGP,EA0GnBkK,SAAW,SAACvG,KA1GO,EA6GnBwG,KAAO,SAACxG,GAEJyG,YAAS,CAAEnN,OAAQ0G,IAClBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEgO,OAAO,IAFrB,2CADN,uDAIG,SAAAzN,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aApHf,EAuHnBmN,OAAS,SAAC5G,GACN6G,YAAW,CAAEvN,OAAQ0G,IACpBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEgO,OAAO,IAFrB,2CADN,uDAIG,SAAAzN,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aA7Hf,EAgInBqN,OAAS,SAACC,GACN,GAA0B,IAAvB,EAAK1O,MAAMwJ,SACV6E,aAAS,EAAM,qCACd,CACL,IAAIM,EAAO,QAAQD,EAAExF,KACrB0F,YAAW,CAAEjH,GAAI+G,EAAE5O,IAAK+O,KAAM,OAAQF,OAAMnF,SAAU,EAAKxJ,MAAMwJ,SAAUsF,OAAQ,EAAK9O,MAAM8O,SAC7F3O,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAE2M,aAAa,EAAO8B,UAAU,IAF5C,2CADN,uDAIG,SAAAlO,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,SAC1B,EAAKd,SAAS,CAAE2M,aAAa,SA3IlB,EA+InB+B,SAAW,SAACN,GACRO,YAAa,CAAEtH,GAAI+G,EAAE5O,MACpBK,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEyO,UAAU,IAFxB,2CADN,uDAIG,SAAAlO,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aArJf,EAwJnB8N,SAAW,SAACvH,GACRwH,YAAS,CAAElO,OAAQ0G,IAClBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwB4O,OAAQ,MAFlD,2CADN,uDAIG,SAAAvO,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aA9Jf,EAiKnBiO,WAAa,SAAC1H,GACV2H,YAAW,CAAErO,OAAQ0G,IACpBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwB4O,OAAQ,MAFlD,2CADN,uDAIG,SAAAvO,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aAvKf,EA0KnBmO,WAAa,SAAC5H,GACV,EAAKrH,SAAS,CAACkP,KAAK7H,EAAI8H,MAAK,KA3Kd,EA+KnBC,kBAAoB,WAChB,IAAI/H,EAAK,EAAK3H,MAAMwP,KACpB,EAAKlP,SAAS,CAACmP,MAAK,EAAOD,KAAK,OAChC1D,YAAW,CAAE7K,OAAQ0G,IACpBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwBmP,QAAS,MAFnD,2CADN,uDAIG,SAAA9O,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aAvLf,EA0LnBwO,cAAgB,SAACjI,GACbkI,YAAc,CAAE5O,OAAQ0G,IACvBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwBsP,YAAa,MAAO,eAF9D,2CADN,uDAMG,SAAAjP,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aAlMf,EAqMnB2O,YAAc,SAACpI,GACXqI,YAAgB,CAAE/O,OAAQ0G,IACzBxH,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACFgO,aAAS,EAAMjO,EAAKgB,QAAS,WAC7B,EAAKd,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwBsP,YAAa,MAAQ,eAF/D,2CADN,uDAMG,SAAAjP,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aA7Mf,EAiNnB6O,WAAa,SAACC,EAAQtO,GAClB,EAAKtB,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwB2P,WAAY,EAAIvO,MAC5DD,YAAS,CAAEV,OAAQiP,IAAU,GACxB/P,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACkB,QAAhBD,EAAKgB,QACL,EAAK2M,kBAAkB,cACA,WAAhB3N,EAAKgB,SACZ,EAAK2M,kBAAkB,aAAc,OAJvC,2CADV,uDAOO,SAAAlN,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,aA3NnB,EA+NnBgP,UAAY,SAAC5P,GACT,EAAKF,SAAS,CAAE+P,YAAY,EAAMC,SAAU9P,KAhO7B,EAmOnB+P,gBAAkB,WACd,EAAKjQ,SAAS,CAAE+P,YAAY,KApOb,EAuOnBG,cAAgB,kBAAMC,YAAW,kBAAM,EAAKnQ,SAAS,CAAEoQ,SAAS,MAAS,MAvOtD,EAwOnBC,YAAc,kBAAM,EAAKrQ,SAAS,CAAEmP,MAAO,EAAKzP,MAAMyP,QAxOnC,EA0OnB5N,QAAU,SAACZ,GACP,GAA6B,IAA1B,EAAKjB,MAAM+B,aAA+C,MAA1B,EAAK/B,MAAM+B,YAAoB,CAClE6O,aAAa,EAAM,8BACnB,IAAI9O,EAAM,CAAEb,SAAQK,QAAS,EAAKtB,MAAM+B,aACxCC,YAAYF,GACP3B,KADL,uCACU,WAAMC,GAAN,eAAAC,EAAA,sDACF,EAAK0N,kBAAkB,cACjB/J,EAAU,EAAKhE,MAAMQ,MACdc,UACT0C,EAAQ1C,QAAU,IAEtB0C,EAAQ1C,QAAQ8C,QAAQhE,EAAKkB,SAC7B,EAAKhB,SAAS,CAAEE,KAAMwD,EAAS/B,cAAc,EAAMF,YAAa,KAChE6O,cARE,2CADV,uDAUO,SAAA/P,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,SAC1BwP,mBA1PO,EA+PnB3O,aAAe,SAAChB,GAEZ2P,aAAa,EAAM,oCACnB1O,YAAY,CAAEjB,WAAU,GACnBd,KADL,uCACU,WAAMC,GAAN,SAAAC,EAAA,sDACFuQ,cACA,EAAKtQ,SAAS,CAAEE,KAAK,2BAAM,EAAKR,MAAMQ,MAAlB,IAAwBc,QAASlB,MACrD,EAAKE,SAAS,CAAE2B,cAAc,IAH5B,2CADV,uDAKO,SAAApB,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,SAC1BwP,kBAzQO,EA6QnBzO,aAAe,SAACC,EAAKC,GAAW,IAAD,EACHD,EAAIE,OAApBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACS,YAAnBJ,EAAIE,OAAOC,KACX,EAAKjC,SAAL,eAAiBiC,EAAOC,IAAS,eAEjC,EAAKlC,SAAL,yBAAoBiC,GAApB,2BAAkC,EAAKvC,MAAMyC,UAA7C,kBAAwDJ,EAAQG,MAAW,gBAlRhE,EAuRnBqO,aAAe,WACX,EAAK9C,kBAAkB,eAxRR,EA2RnB+C,iBAAmB,SAAC5P,GAChB,IAAImB,EAAQ,EAAKrC,MAAMQ,KAAKc,QAAQqM,WAAU,SAAAxG,GAAE,OAAIA,EAAGrH,MAAQoB,KACzD6P,EAAe,EAAK/Q,MAAMQ,KAChCuQ,EAAazP,QAAQe,GAAO2O,WAAY,EACxC,EAAK1Q,SAAS,CAAEE,KAAMuQ,KA/RP,EAuSnBE,mBAAqB,SAAC/P,GAElB0P,aAAa,EAAM,oCACnBM,YAAiB,CAAEhQ,cAAa,GAC3Bf,KADL,uCACU,WAAMC,GAAN,iBAAAC,EAAA,sDACFuQ,cACIvO,EAAQ,EAAKrC,MAAMQ,KAAKc,QAAQqM,WAAU,SAAAxG,GAAE,OAAIA,EAAGrH,MAAQoB,MACzD6P,EAAe,EAAK/Q,MAAMQ,MACnBc,QAAQe,GAAO8O,QAAU/Q,EACtC,EAAKE,SAAS,CAAEE,KAAMuQ,IALpB,2CADV,uDAOO,SAAAlQ,GACCwN,aAAS,EAAMxN,EAAM8E,KAAKvE,SAC1BwP,kBAnTO,EAuTnBQ,qBAAuB,SAACC,EAAW9P,GAC/B,IAAIyC,EAAU,EAAKhE,MAAMQ,KACzB,GAAIwD,EAAQ1C,SAAW0C,EAAQ1C,QAAQC,GAAe,CAC9CyC,EAAQ1C,QAAQC,GAAc4P,QAC9BnN,EAAQ1C,QAAQC,GAAc4P,QAAQG,KAAKD,GAE3CrN,EAAQ1C,QAAQC,GAAc4P,QAAU,CAACE,GAE7C,IAAIE,EAAe,EAAKvR,MAAMyC,SAC9B8O,EAAahQ,GAAgB,GAC7B,EAAKjB,SAAS,CAAEE,KAAMwD,EAASvB,SAAU8O,MAjU9B,EAwXnBC,eAAiB,SAAChR,EAAMyB,EAAcF,EAAaU,GAC/C,OACMjC,EAAKmP,QAAU,GAAQnP,EAAK4O,OAAS,GAA0B,UAArB,EAAK3P,MAAMS,OAAuB,KAC9E,kBAAC,IAAD,CAAe6O,SAAU,EAAK/O,MAAM+O,SAAUT,MAAO,EAAKtO,MAAMsO,MAAOG,OAAQ,EAAKxB,YAAa+B,SAAU,kBAAI,EAAKA,SAASxO,IAAO2N,KAAM,kBAAM,EAAKA,KAAK3N,EAAKV,MAAMyO,OAAQ,kBAAI,EAAKA,OAAO/N,EAAKV,MAAM2R,IAAK,SAASjR,EAAK0I,KAAMwI,MAAOrI,iBAAqBxC,GAAjBrG,EAAK8I,eAA6CzC,GAApBrG,EAAK8I,SAAS,GAAkB9I,EAAK8I,SAAS,GAAGC,YAAc,IAAKoI,EAAGnR,EAAKV,IAAKD,YAAa,EAAKJ,MAAMI,YAAaW,KAAMA,EAAMoR,MAAOpR,EAAKiJ,QAASoI,MAAOrR,EAAKkJ,WAAYoI,OAAQtR,EAAKuR,WAAYtE,KAAM,EAAKzN,MAAMyN,KAAMuE,SAAUxR,EAAKyR,UAAWzI,SAAUhJ,EAAKgJ,SAAU0I,YAAa,EAAKlS,MAAMuN,SAAUgC,WAAY,EAAKA,WAAY4C,SAAU3R,EAAKZ,UAxX9mB,EAAKI,MAAQ,CACTyP,MAAK,EACLgC,IAAKhS,EAAMe,KAAKiR,IAChBjR,KAAMf,EAAMe,KACZgP,KAAM,KACN3M,IAAKpD,EAAMe,KAAKV,IAChBuQ,YAAY,EACZtB,SAAgC,GAAvBtP,EAAMe,KAAKuO,SACpBT,MAA0B,GAApB7O,EAAMe,KAAK8N,MACjB9E,SAAU,GACVsF,OAAQ,GACR7B,aAAY,EACZqD,SAAU,GACV1K,MAAO,GACP8K,SAAS,EACTjD,KAAK,EACLxL,cAAc,EACdF,YAAa,GACbwL,SAAU,GACV9K,SAAU,IAGd,EAAK2N,UAAY,EAAKA,UAAUxM,KAAf,gBACjB,EAAK2M,gBAAkB,EAAKA,gBAAgB3M,KAArB,gBA1BR,E,+DAwDAE,GACZA,EAAU8B,OAAS/B,KAAKpE,MAAMmG,OAC7B/B,KAAKuB,a,+BAgRH,IAAD,SAEsDvB,KAAK7D,MAAxDQ,EAFH,EAEGA,KAAMyB,EAFT,EAESA,aAAcF,EAFvB,EAEuBA,YAAaU,EAFpC,EAEoCA,SAAUI,EAF9C,EAE8CA,IAEnD,OACI,yBAAKD,UAAW,QAASC,IAAKA,GACrB,kBAAC,IAAD,CAAOuP,aAAcvO,KAAK7D,MAAMiN,YAAaoF,WAAYxO,KAAKoJ,aAC9D,6BACI,yBAAKrK,UAAU,cACX,4BAAQA,UAAU,eAAeJ,MAAOqB,KAAK7D,MAAMwJ,SAAW8I,SAAU,SAACzK,GAAD,OAAO,EAAKvH,SAAS,CAACkJ,SAAU3B,EAAEvF,OAAOE,UAC7G,4BAAQA,MAAM,IAAd,mBACA,4CACA,uDACA,gDACA,wCACA,2CAGR,yBAAKI,UAAU,cACX,8BAAUiM,KAAK,OAAO0D,YAAY,SAAS3P,UAAU,eAAe0P,SAAU,SAACzK,GAAD,OAAO,EAAKvH,SAAS,CAACwO,OAAQjH,EAAEvF,OAAOE,SAASA,MAAOqB,KAAK7D,MAAM8O,WAG7J,yBAAKlM,UAAU,IACf,kBAAC,IAAD,CAAQ8E,QAAQ,UAAUS,KAAK,cAAcqK,QAAS,kBAAM,EAAK/D,OAAOjO,KAAxE,UACA,kBAAC,IAAD,CAAQkH,QAAQ,YAAYS,KAAK,cAAcqK,QAAS3O,KAAKoJ,aAA7D,YAGA,kBAAC,IAAD,CAAQwF,QAAS5O,KAAK8M,YAAa/N,UAAU,gBAAiB6M,KAAM5L,KAAK7D,MAAMyP,MAC3E,4BAAQ7M,UAAU,mBAAkB,8CACpC,uBAAGA,UAAU,OAAb,qCACA,yBAAKA,UAAU,wDACX,kBAAC,IAAD,CAAQ4P,QAAS3O,KAAK8M,YAAajJ,QAAQ,aAA3C,UACA,kBAAC,IAAD,CAAQ8K,QAAS3O,KAAK6L,kBAAmBhI,QAAQ,WAAjD,SAGNlH,EAAKkS,SAA4E,KAAjE7O,KAAK2N,eAAehR,EAAMyB,EAAcF,EAAaU,GACtEoB,KAAK7D,MAAMqQ,YACR,kBAAC,IAAD,CACI7P,KAAMqD,KAAK7D,MAAMsQ,SACjBO,aAAchN,KAAKgN,aACnBN,gBAAiB1M,KAAK0M,uB,GApXvB3L,IAAMC,WAkYd8H,O,uDCzZf,mCA0Ce7D,IAtCI,SAAArJ,GACf,OACI,yBAAKmD,UAAU,wDACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OAEb,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,eACZ,uBAAGA,UAAU,eADf,IACiC,wCAInC,wBAAIA,UAAU,yBAIZ,wBAAIA,UAAW,sEAAuF,YAAjBnD,EAAMsJ,SAAyB,YAClH,kBAAC,IAAD,CAAGd,KAAK,WAAWrF,UAAU,6BAA4B,uBAAGA,UAAU,qBAAtE,gBAEF,wBAAIA,UAAW,sEAAuF,WAAjBnD,EAAMsJ,SAAwB,YACjH,kBAAC,IAAD,CAAGd,KAAK,kBAAkBrF,UAAU,6BAA4B,uBAAGA,UAAU,uBAA7E,eAEF,wBAAIA,UAAW,sEAAuF,SAAjBnD,EAAMsJ,SAAsB,YAC/G,kBAAC,IAAD,CAAGd,KAAM,SAAUrF,UAAU,6BAA4B,uBAAGA,UAAU,qBAAtE,cAEF,wBAAIA,UAAW,sEAAuF,YAAjBnD,EAAMsJ,SAAyB,YAClH,kBAAC,IAAD,CAAGd,KAAM,wBAAyBrF,UAAU,6BAA4B,uBAAGA,UAAU,4BAArF,mB,sKCnBVoG,G,yDACF,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IASVkT,oBAAsB,WAAa,IAAZ9P,EAAW,uDAAP,GACvBoC,QAAQC,IAAIrC,GACZ+P,YAAe,CAAE7S,MAAO,EAAGE,KAAM,EAAG4C,IAAKA,IAAO,GAC/C1C,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACF4E,QAAQC,IAAI,YACZD,QAAQC,IAAI9E,EAAKgB,SACjB,EAAKd,SAAS,CAAEuS,MAAOzS,EAAKgB,QAAS0R,gBAAgB,IAAQ,WACzD,EAAKC,UAAU,EAAGlQ,MAJpB,2CADN,uDAOG,SAAAhC,QAnBY,EAwBnBkS,UAAY,SAACpQ,GAAiB,IAAdE,EAAa,uDAAP,GAClB+P,YAAe,CAAE7S,MAAO,EAAGE,KAAM0C,EAAE,EAAGE,IAAIA,IAAO,GAChD1C,KADD,uCACM,WAAMC,GAAN,SAAAC,EAAA,sDACAD,EAAKgB,QAAQV,OAAS,EACrB,EAAKJ,SAAS,CACV0S,SAAS,IAGhB,EAAK1S,SAAS,CACV0S,SAAS,IAPX,2CADN,uDAWG,SAAAnS,QApCY,EA0CrBoS,OAAS,SAACpL,GACR,IAAIqL,EAAMrL,EAAEvF,OAAOE,MAChB0Q,EAAIxS,OAAS,EACd,EAAKiS,oBAAoBO,GACX,IAAPA,GACP,EAAKP,uBA/CY,EA+DnBQ,UAAY,SAACxL,EAAIyL,GACbxC,aAAa,EAAM,kBACnByC,YAAW,CAAEC,WAAY3L,IAAM,GAC5BxH,KADH,uCACQ,WAAMC,GAAN,eAAAC,EAAA,sDACJuQ,eACI2C,EAAW,EAAKvT,MAAM6S,OACjBO,GAAWtT,IAAMM,EAAKN,IAC/ByT,EAASH,GAAWI,QAAUpT,EAAKoT,QACnCD,EAASH,GAAWvE,KAAO,OAC3B0E,EAASH,GAAWK,IAAMrT,EAAKkT,WACN,MAAtB,EAAK7T,MAAMiU,SACV,EAAKjU,MAAMiU,UAEf,EAAKpT,SAAS,CACVuS,MAAOU,IAXP,2CADR,uDAcK,SAAA1S,GACD+P,kBAhFW,EA4GjB+C,OAAS,SAACC,EAAMvR,EAAO8B,GACrByM,aAAa,EAAM,kBACR,GAARzM,EACC0P,YAAc,CAAElM,GAAIiM,EAAK9T,MAAO,GAC/BK,KADD,+BAAAE,EAAA,MACM,WAAMD,GAAN,eAAAC,EAAA,sDACNuQ,qBACI2C,EAAW,EAAKvT,MAAM6S,OACVxQ,GACS,MAAtB,EAAK5C,MAAMiU,SACV,EAAKjU,MAAMiU,UAEf,EAAKpT,SAAS,CACVuS,MAAOU,IARL,2CADN,uDAWC,SAAA1S,GACD+P,iBAGAkD,YAAc,CAACnM,GAAIiM,EAAKH,MAAM,GAC7BtT,KADD,uCACM,WAAMC,GAAN,eAAAC,EAAA,sDACJuQ,qBACI2C,EAAW,EAAKvT,MAAM6S,OAEVxQ,GAAOmR,QACE,MAAtB,EAAK/T,MAAMiU,SACV,EAAKjU,MAAMiU,UAEf,EAAKpT,SAAS,CACVuS,MAAOU,IATP,2CADN,uDAYG,SAAA1S,GACD+P,kBA3IS,EAgJjBkD,cAAgB,SAACnM,EAAGtF,EAAO8B,GACzByM,aAAa,EAAM,mBACnBkD,YAAc,CAACnM,OAAK,GACjBxH,KADH,uCACQ,WAAMC,GAAN,eAAAC,EAAA,sDACJuQ,qBACI2C,EAAW,EAAKvT,MAAM6S,OAEVxQ,GAAOmR,QACE,MAAtB,EAAK/T,MAAMiU,SACV,EAAKjU,MAAMiU,UAEf,EAAKpT,SAAS,CACVuS,MAAOU,IATP,2CADR,uDAYK,SAAA1S,GACD+P,kBA5JJ,EAAK5Q,MAAQ,CACTiT,QAAO,EACPJ,MAAO,GACPG,SAAQ,EACRF,gBAAgB,GAPL,E,gEAoDE,IAAD,OAChBjP,KAAK8O,2BACwB9L,GAA1BhD,KAAKpE,MAAMI,aACVkU,YAAclQ,KAAKpE,MAAMI,YAAYC,KAEzCkU,aAAc,SAACR,GACXvO,QAAQC,IAAIsO,GACZ,EAAKb,2B,+BAwGH,IAAD,OAEL,OACI,yBAAK/P,UAAU,oEACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,oBACZiB,KAAK7D,MAAMiT,OACD,wBAAIrQ,UAAU,iFACF,0BAAMA,UAAU,SACZ,yBAAKA,UAAU,4BACf,2BAAOiM,KAAK,OAAOjM,UAAU,eAAeqR,WAAS,EAAC1B,YAAY,SAAS5K,GAAG,eAAe2K,SAAUzO,KAAKoP,SAC5G,yBAAKrQ,UAAU,sBACf,4BAAQA,UAAU,+BAA+BiM,KAAK,SAAS2D,QAAS,kBAAM,EAAKlS,SAAS,CAAC2S,QAAO,MACpG,uBAAGrQ,UAAU,qBAOrD,wBAAIA,UAAU,eACd,uBAAGA,UAAU,gBADb,IACgC,oDAMY,IAA5BiB,KAAK7D,MAAM6S,MAAMnS,QAAgBmD,KAAK7D,MAAM8S,gBAAkB,uBAAGlQ,UAAU,eAAb,iBAEjEiB,KAAK7D,MAAM6S,MAAMrO,KAAI,SAACoP,EAAMjR,GAAP,OAClB,wBAAIC,UAAU,mBAAmBC,IAAKF,GAClC,wBAAIC,UAAU,mBACV,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAGqF,KAAM,OAAQ2L,EAAKJ,SAA2B,WAAhBI,EAAKJ,QAAwBI,EAAKH,IAAMG,EAAK9T,MAC1E,yBAAK8C,UAAU,mCAAmC6J,IAAK5C,YAAW+J,EAAK7J,QACnEmK,IAAI,UAGhB,yBAAKtR,UAAU,cACf,kBAAC,IAAD,CAAGqF,KAAM,OAAQ2L,EAAKJ,SAA2B,WAAhBI,EAAKJ,QAAwBI,EAAKH,IAAMG,EAAK9T,MAAM,uBAAG8C,UAAU,iBAAiBgR,EAAKrR,QAGvH,yBAAKK,UAAU,oBAESiE,GAAhB+M,EAAKJ,SAAwB,kBAAC,IAAD,CAAQ9L,QAAQ,8BAAgC8K,QAAS,kBAAM,EAAKW,UAAUS,EAAK9T,IAAK6C,KAAI,uBAAGC,UAAU,gBAGtH,WAAhBgR,EAAKJ,SAAqC,QAAbI,EAAK/E,MAAmB,kBAAC,IAAD,CAAQnH,QAAQ,OAAQyM,OAAO,WAAWC,gBAAiB,CAAC,UAAW5B,QAAS,SAAC6B,GAAOpP,QAAQC,IAAI0O,GAAO,EAAKE,cAAcF,EAAKH,IAAK9Q,EAAG0R,KAA3I,WAGrC,WAAhBT,EAAKJ,SAAqC,YAAbI,EAAK/E,MAAsB,kBAAC,IAAD,CAAQnH,QAAQ,OAAOyM,OAAO,WAAWC,gBAAiB,CAAC,SAAU,UAAY5B,QAAS,SAAC6B,GAAD,OAAO,EAAKV,OAAOC,EAAMjR,EAAG0R,KAAtH,mBAU7ExQ,KAAK7D,MAAM8S,gBACV,wBAAIlQ,UAAU,oBACV,wBAAIA,UAAU,mBAEV8B,MAAM,GACDC,OACAH,KAAI,SAACL,EAAM9B,GAAP,OACD,kBAAC,IAAD,eACIS,MAAO,EACPE,OAAQ,GACRC,QAAQ,aACRC,gBAAgB,UAChBC,gBAAgB,WACZ,EAAK1D,MANb,CAOIoD,IAAKR,IAEL,0BAAMe,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIR,MAAM,KAAKC,OAAO,MACnD,0BAAMI,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,KAAKC,OAAO,MACpD,4BAAQQ,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAO9CG,KAAK7D,MAAMgT,SACH,kBAAC,IAAD,CAAG/K,KAAM,iBAAkBrF,UAAU,gBAArC,mB,GA5PHgC,IAAMC,YAwQxBmE","file":"static/js/30.f350db60.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfilePosts, getPosts, likeComment, replyComment, likePost, postComment, getComments } from '../../http/http-calls';\nimport {getFilteredNewsFeed } from '../../http/post-calls';\nimport Post from './Post';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport TimeAgo from 'react-timeago';\n\n\nclass FilteredNewsFeed extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: props.query,\n            posts: [],\n            page: 1,\n            limit: 5,\n            hasMore: true,\n            postLoaded: false,\n            showSkeleton: false,\n            showComments: false,\n            commentText: ''\n        }\n        this.commentLike = this.commentLike.bind(this);\n        this.loadFunc = this.loadFunc.bind(this);\n        this.likePost = this.likePost.bind(this);\n        this.getPaginatePost = this.getPaginatePost.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPaginatePost();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.filter != prevProps.filter) {\n            this.setState({\n                showSkeleton: false\n            }, () => {\n                this.getPaginatePost();\n            })\n          \n        }\n      }\n\n    componentWillReceiveProps() {\n        if (this.props.latestpost && this.props.latestpost.userid) {\n\n            const latestpost = this.props.latestpost;\n            const postObj = this.state.posts;\n\n            let isExist = postObj.find(item => item._id == latestpost._id)\n            if (!(isExist && isExist._id)) {\n                postObj.unshift(latestpost);\n                this.setState({ posts: [] }, () => {\n                    this.setState({ posts: postObj });\n                });\n            }\n        }\n    }\n\n    getPaginatePost = () => {\n        getFilteredNewsFeed({ userid: this.props.currentUser._id, limit: this.state.limit, page: this.state.page, filter: this.props.filter }, true)\n            .then(async resp => {\n                this.setState({\n                    posts: [...this.state.posts, ...resp.post],\n                    hasMore: resp.post && resp.post.length > 0 ? true : false,\n                    postLoaded: true,\n                    showSkeleton: false\n                });\n            }, error => {\n                \n                this.setState({ postLoaded: true, showSkeleton: false });\n            });\n    }\n\n    loadFunc = () => {\n        if (!this.state.showSkeleton) {\n            this.setState({ showSkeleton: true })\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    page: prevState.page + 1,\n                    showSkeleton: true\n                }\n            }, () => {\n                this.getPaginatePost();\n            })\n        }\n\n    }\n\n    commentLike = (postid, commentId) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ postid, commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    //this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                   // this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n    }\n\n    commentReply = (postid, commentId, comment, commentIndex, callBack) => {\n        replyComment({ postid: postid, commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n        });\n    }\n\n    refreshHighlights = () => {\n        this.props.refreshHighlights();\n    }\n\n    likePost = (postid, liked) => {\n        likePost({ postid: postid }, true)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    postCmt = (postid) => {\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    showComments = (postid) => {\n        getComments({ postid }, true)\n            .then(async resp => {\n                this.setState({ showComments: true });\n            }, error => {\n                \n\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    getSkeletonContent = (i) => {\n        return (\n            <div className=\"row empty-inner-container-with-border post\" key={i}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <ul className=\"list-group w-100 m-0\">\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <ContentLoader\n                                    speed={2}\n                                    width={610}\n                                    height={350}\n                                    viewBox=\"0 0 610 350\"\n                                    backgroundColor=\"#f3f3f3\"\n                                    foregroundColor=\"#ecebeb\"\n                                    \n                                >\n                                    <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                    <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                    <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                    <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                                </ContentLoader>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const { post, showComments, commentText } = this.state;\n\n        return (\n            <div>\n                <InfiniteScroll\n                    pageStart={0}\n                    initialLoad={false}\n                    loadMore={this.loadFunc}\n                    hasMore={this.state.hasMore}\n                >\n                    {this.state.postLoaded && this.state.posts.map((post, i) => (\n                        <Post refreshHighlights={this.refreshHighlights}  post={post} filter={this.props.filter} commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                    ))}\n                </InfiniteScroll>\n\n                {(this.state.showSkeleton) &&\n                    <div>\n                        {Array(5).fill().map((item, index) => this.getSkeletonContent(index))}\n                    </div>\n                }\n\n                {(this.state.posts.length === 0 && this.state.postLoaded) &&\n                    <div className=\"no-found\"> No Posts Found</div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default FilteredNewsFeed;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport ReactPlayer from 'react-player';\nimport { getComments,   getReplyComments } from '../../http/http-calls';\nimport { postSave, postUnSave, postHide, postUnHide, postHighlight, postUnHighlight} from '../../http/post-calls';\nimport {postRemove, likePost, postComment} from '../../http/blog-calls';\nimport update from 'react-addons-update';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport { switchLoader, alertBox, modal } from '../../commonRedux/';\nimport A from '../A';\nimport {GetAssetImage, profilePic} from '../../globalFunctions';\nimport Truncate from 'react-truncate';\nimport config from \"../../config/index\";\nimport LeftThumbCard from '../Cards/LeftThumbCard';\nrequire(\"./styles.css\");\n\nconst reactStringReplace = require('react-string-replace');\n\nclass FeedBlog extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            url: props.post.url,\n            post: props.post,\n            key: props.post._id,\n            shareModel: false,\n            currPost: {},\n            coins: [],\n            playing: false,\n            tips:0,\n            showComments: false,\n            commentText: '',\n            postText: '',\n            replyCmt: []\n        }\n        // this.likePostFn = this.likePostFn.bind(this);\n        this.sharePost = this.sharePost.bind(this);\n        this.closeShareModal = this.closeShareModal.bind(this);\n    }\n    extractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\t\treturn text.match(regex)\n    }\n\n    componentDidMount = () => {\n        \n        if(this.props.single){\n            this.showComments(this.state.post._id);\n        }        \n        \n        try {\n            var txt = JSON.parse(this.props.post.editorContent);\n            console.log(txt);\n            this.setState({\n                postText: txt.blocks[0].data.text\n            })\n        } catch (error) {\n            this.setState({\n                postText: this.props.post.text\n            })\n        }\n        this.getCoins();\n    };\n\n    componentDidUpdate(prevProps){\n        if(prevProps.coins != this.props.coins){\n            this.getCoins();\n        }\n    }\n\n    getCoins = () => {\n        \n        this.setState({\n            coins : this.props.coins\n        },() => {\n            console.log(this.state.post.tips, this.state.coins)\n        if(this.state.post != undefined && this.state.post.tips != undefined && this.state.coins != undefined){\n                var len = this.state.post.tips.length;\n                if(len > 0){\n                    var tips = 0;\n                    this.state.post.tips.map((e, i) => {\n                        var index = this.state.coins.findIndex(function(item, i){\n                            return item.currencySymbol === e.currency\n                        });\n                        try {\n                            tips += this.state.coins[index].EstimatedUSD*e.amount;\n                        } catch (error) {\n                            \n                        }\n                        if(i == (len-1)){\n                            this.setState({\n                                tips: tips\n                            })\n                        }\n                    });\n                }\n            }\n        }\n        )\n    }\n\n    postActivityCount = (activityType, action = 'add') => {\n\n        const postObj = this.state.post;\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        this.setState({ post: postObj });\n    }\n\n    editPost = (id) => {\n\n    };\n    savePost = (id) => {\n        //modal(true, \"sdf\");\n        postSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, saved: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unsavePost = (id) => {\n        postUnSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, saved: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    hidePost = (id) => {\n        postHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unhidePost = (id) => {\n        postUnHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    removePost = (id) => {\n        postRemove({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, removed: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    highlightPost = (id) => {\n        postHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 1 } }, () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unHighlight = (id) => {\n        postUnHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 0 } },  () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    likePostFn = (postId, liked) => {\n        this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                    this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                alertBox(true, error.data.message);\n            });\n    }\n\n    sharePost = (post) => {\n        this.setState({ shareModel: true, currPost: post })\n    }\n\n    closeShareModal = () => {\n        this.setState({ shareModel: false })\n    }\n\n    handleOnReady = () => setTimeout(() => this.setState({ playing: true }), 100);\n\n    postCmt = (postid) => {\n        switchLoader(true, 'Please wait. Commenting...');\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n                this.postActivityCount('cmtsCount');\n                const postObj = this.state.post;\n                if (!postObj.comment) {\n                    postObj.comment = [];\n                }\n                postObj.comment.unshift(resp.comment);\n                this.setState({ post: postObj, showComments: true, commentText: '' });\n                switchLoader();\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    showComments = (postid) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getComments({ postid }, true)\n            .then(async resp => {\n                switchLoader();\n                this.setState({ post: { ...this.state.post, comment: resp } })\n                this.setState({ showComments: true });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    shareSuccess = () => {\n        this.postActivityCount('shareCount');\n    }\n\n    showCommentReply = (commentId) => {\n        let index = this.state.post.comment.findIndex(el => el._id === commentId);\n        const tempPostData = this.state.post;\n        tempPostData.comment[index].showReply = true;\n        this.setState({ post: tempPostData });\n        \n        // this.setState({\n        //     post: { comment: update(this.state.post.comment, { [index]: { showReply: { $set: true } } }) }\n        // }, () => {\n        // });\n    }\n\n    showCommentReplies = (commentId) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getReplyComments({ commentId }, true)\n            .then(async resp => {\n                switchLoader();\n                let index = this.state.post.comment.findIndex(el => el._id === commentId);\n                const tempPostData = this.state.post;\n                tempPostData.comment[index].replies = resp;\n                this.setState({ post: tempPostData });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    callBackCommentReply = (replyData, commentIndex) => {\n        let postObj = this.state.post;\n        if (postObj.comment && postObj.comment[commentIndex]) {\n            if (postObj.comment[commentIndex].replies) {\n                postObj.comment[commentIndex].replies.push(replyData);\n            } else {\n                postObj.comment[commentIndex].replies = [replyData];\n            }\n            let tempReplyCmt = this.state.replyCmt;\n            tempReplyCmt[commentIndex] = '';\n            this.setState({ post: postObj, replyCmt: tempReplyCmt });\n        }\n    }\n\n    // wrapHash = (val) => {\n        \n    //     return val.replace(/#(\\w+)/g, \"<A href='/search/filter=posts&q=$&'>$&</A>\").replace(\"q=#\", \"q=%23\");  \n    // }\n\n    render() {\n\n        const { post, showComments, commentText, replyCmt, key } = this.state;\n\n        return (\n            <div className={\"post \"} key={key}>\n                {!post.sharedBy ? this.getPostContent(post, showComments, commentText, replyCmt) : null}\n                {this.state.shareModel &&\n                    <Share\n                        post={this.state.currPost}\n                        shareSuccess={this.shareSuccess}\n                        closeShareModal={this.closeShareModal}\n                    />}\n            </div>\n        );\n    }\n\n    getPostContent = (post, showComments, commentText, replyCmt) => {\n        return (\n            ((post.removed > 0 ) || (post.hidden > 0 && this.props.filter != 'hidden')) ? null : \n            <LeftThumbCard url={\"/blog/\"+post.slug} thumb={post.contents != undefined && post.contents[0] != undefined ? post.contents[0].content_url : require(\"../../assets/images/post-image@2x.png\")} key={post._id} currentUser={this.props.currentUser} post={post} title={post.subject} likes={post.clapsCount} shares={post.shareCount} tips={this.state.tips} comments={post.cmtsCount} category={post.category} description={this.state.postText} removePost={this.removePost} authorid={post.userid} />\n        )\n    }\n}\n\nexport default FeedBlog;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfilePosts, likeComment, replyComment, likePost, postComment, getComments } from '../../http/http-calls';\nimport {getNewsFeed } from '../../http/post-calls';\nimport Post from './Post';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport TimeAgo from 'react-timeago';\nimport BlogPost from './BlogPost';\nimport { getAllPairs} from '../../http/wallet-calls';\nimport walletCheck from '../../hooks/walletCheck';\nimport FeedBlog from './FeedBlog';\nimport Spinner from '../Spinner';\n\nclass NewsFeed extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: props.query,\n            posts: [],\n            page: 1,\n            limit: 5,\n            coins:[],\n            coinsLoaded: false,\n            hasMore: true,\n            postLoaded: false,\n            showSkeleton: false,\n            showComments: false,\n            commentText: ''\n        }\n        this.commentLike = this.commentLike.bind(this);\n        this.loadFunc = this.loadFunc.bind(this);\n        this.likePost = this.likePost.bind(this);\n        this.getPaginatePost = this.getPaginatePost.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPaginatePost();\n        // this.checkWallet();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.latestpost._id != this.props.latestpost._id){\n            const latestpost = this.props.latestpost;\n            const postObj = this.state.posts;\n\n            let isExist = postObj.find(item => item._id == latestpost._id)\n            if (!(isExist && isExist._id)) {\n                postObj.unshift(latestpost);\n                this.setState({ posts: [] }, () => {\n                    this.setState({ posts: postObj });\n                });\n            }\n        }\n    }\n\n    componentWillReceiveProps() {\n        if (this.props.latestpost && this.props.latestpost.userid) {\n\n            const latestpost = this.props.latestpost;\n            const postObj = this.state.posts;\n\n            let isExist = postObj.find(item => item._id == latestpost._id)\n            if (!(isExist && isExist._id)) {\n                postObj.unshift(latestpost);\n                this.setState({ posts: [] }, () => {\n                    this.setState({ posts: postObj });\n                });\n            }\n        }\n    }\n    checkWallet = () =>{\n        console.log(\"okaoay\")\n        walletCheck().then(resp=>{\n            console.log(\"okaokay\")\n            this.getCoins();\n        }, err => {\n            console.log(\"notokaokay\")\n            console.log(err);\n        })\n    }\n\n    getCoins = () => {\n        // var coins = localStorage.getItem(\"allPairs\");\n        // if(coins != null){\n        //     this.setState({\n        //         coins: JSON.parse(coins)\n        //     }, () => {\n        //         this.setState({\n        //             coinsLoaded:true\n        //         })\n        //     })\n        // }\n        getAllPairs().then(resp => {\n            localStorage.setItem(\"allPairs\", JSON.stringify(resp.data));\n            console.log(resp.data);\n            this.setState({\n                coins: resp.data,\n            }, () => {\n                this.setState({\n                    coinsLoaded:true\n                })\n            });\n        }, err => {\n            console.log(err);\n        })\n    }\n    getPaginatePost = () => {\n        // if((typeof this.props.currentUser == undefined || this.props.currentUser == null) || (typeof this.props.match != undefined && this.props.match.params.id != null && typeof this.props.match.params.id != undefined && this.props.match.params.id != '' && this.props.match.params.id != this.props.currentUser._id)){\n        //     getProfilePosts({ userid: this.props.match.params.id, limit: this.state.limit, page: this.state.page})\n        //     .then(async resp => {\n        //         this.setState({\n        //             posts: [...this.state.posts, ...resp.post],\n        //             hasMore: resp.post && resp.post.length > 0 ? true : false,\n        //             postLoaded: true, showSkeleton: false\n        //         });\n        //     }, error => {\n                \n        //         this.setState({ postLoaded: true, showSkeleton: false });\n        //     });\n        //   }else{\n        \n        getNewsFeed({ userid: this.props.currentUser._id, limit: this.state.limit, page: this.state.page }, true)\n            .then(async resp => {\n                var arr1 = resp.posts.post;\n                // var arr2 = resp.blogs.post;\n                // var arr = arr1.concat(arr2);\n                // var sorted = arr.sort(function(a, b){\n                //     return b.createdAt - a.createdAt;\n                // });\n                console.log(resp)\n                \n                this.setState({\n                    posts: [...this.state.posts, ...arr1],\n                    hasMore: resp.posts.post && resp.posts.post.length > 0 ? true : false,\n                    postLoaded: true, showSkeleton: false\n                });\n\n                // if(arr1.length > 0){\n                //     this.setState({})\n                // }\n                \n            }, error => {\n                \n                this.setState({ postLoaded: true, showSkeleton: false });\n            });\n        //}\n    }\n\n    loadFunc = () => {\n        if (!this.state.showSkeleton && this.state.hasMore) {\n            this.setState({ showSkeleton: true })\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    page: prevState.page + 1,\n                    showSkeleton: true\n                }\n            }, () => {\n                this.getPaginatePost();\n            })\n        }else{\n            this.setState({ showSkeleton: false, postLoaded:true })\n            console.log(this.state)\n        }\n\n    }\n\n    commentLike = (postid, commentId) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ postid, commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                   //this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                   //this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n    }\n\n    commentReply = (postid, commentId, comment, commentIndex, callBack) => {\n        replyComment({ postid: postid, commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n        });\n    }\n\n    likePost = (postid, liked) => {\n        likePost({ postid: postid }, true)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    postCmt = (postid) => {\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n\n            }, error => {\n                \n            });\n    }\n\n    showComments = (postid) => {\n\n        getComments({ postid }, true)\n            .then(async resp => {\n                this.setState({ showComments: true });\n            }, error => {\n                \n\n            });\n    }\n\n    refreshHighlights = () => {\n        \n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    getSkeletonContent = (i) => {\n        return (\n            <div className=\" post\" key={i}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <ul className=\"list-group w-100 m-0\">\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <ContentLoader\n                                    speed={2}\n                                    width={610}\n                                    height={350}\n                                    viewBox=\"0 0 610 350\"\n                                    backgroundColor=\"#f3f3f3\"\n                                    foregroundColor=\"#ecebeb\"\n                                    \n                                >\n                                    <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                    <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                    <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                    <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                    <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                                </ContentLoader>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const { post, showComments, commentText } = this.state;\n\n        return (\n            <div>\n                <InfiniteScroll\n                    pageStart={0}\n                    initialLoad={false}\n                    loadMore={this.loadFunc}\n                    hasMore={this.state.hasMore}\n                >\n                     {this.state.postLoaded && this.state.posts.map((post, i) => (\n                        // (post.subject == 'Eclipton' ||  post.subject == 'Eclipton') ?\n                        <Post post={post} filter=\"\" commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                        // :\n                        // <FeedBlog coins={this.state.coins} post={post} filter=\"\" commentLike={this.commentLike} commentReply={this.commentReply} key={i} currentUser={this.props.currentUser} />\n                    ))}\n                </InfiniteScroll>\n\n                {(this.state.showSkeleton ) &&\n                    <div>\n                        {Array(5).fill().map((item, index) => this.getSkeletonContent(index))}\n                    </div>\n                    // <Spinner />\n                }\n                    {(this.state.posts.length == 0 && this.state.postLoaded) && <div className=\"post\"><p className=\"post-inner no-found\">No Posts Found</p></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default NewsFeed;\n","import React, { useState, useEffect } from 'react';\nimport A from '../A';\nimport {GetAssetImage} from '../../globalFunctions';\nimport Button from '../Button';\nimport { switchLoader, alertBox} from '../../commonRedux/';\nimport './styles.css';\nimport Spinner from '../Spinner';\nimport config from '../../config/';\nimport { getTradePairs} from '../../http/wallet-calls';\nimport { notificationReceived, connectSocket, ticker } from '../../hooks/socket';\nimport { walletAuth } from '../../http/http-calls';\nimport walletCheck from '../../hooks/walletCheck';\n\nconst QuickBuy = props => {\n    const [coins, setCoins] = useState([]);\n    const [status, setStatus] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [balance, setBalance] = useState(0);\n    const [attempt, setAttempt] = useState(0);\n\n    useEffect(() => {\n      var kycStatus = window.localStorage.getItem(\"kycStatus\");\n        if(kycStatus != null){\n            setLoading(false);\n            setStatus(kycStatus);\n            allPairs();\n        }\n      walletCheck().then(resp=>{\n        window.localStorage.setItem(\"kycStatus\", resp.data.status);\n        setLoading(false);\n        setStatus((resp.data.status == undefined) ? '' : resp.data.status);\n        allPairs();\n      }, err => {\n        setLoading(false);\n        setError(\"Authentication Error!\");\n      })\n    \n    }, []);\n\n    \n    \n\n    const allPairs = () =>{\n      console.log(\"allpairs\");\n        // var allPairs = window.localStorage.getItem(\"allPairs\");\n        // if(allPairs != null){\n        //     allPairs = JSON.parse(allPairs);\n        //     setCoins(allPairs);\n        //     setError('');\n        //     setLoading(false);\n        //     listenSocket(allPairs);\n        // }\n        getTradePairs().then(async resp => {\n            setCoins(resp);\n            setError('');\n            setLoading(false);\n            listenSocket(resp);\n        }, error => {\n            try {\n                setLoading(false);\n                setError(error.data.toString());\n            } catch (error) {\n                setLoading(false);\n                setError(\"Error\")\n            }\n        });\n    }\n\n    const listenSocket = (da) => {\n      // da.forEach((e, i) => {\n      //   if(e.toCurrency.currencySymbol == 'EUR'){\n        ticker(`liquiditypairdetails`, (data) => {\n          if(data != undefined && data != null && data != ''){\n            var el = document.getElementById(\"mp\"+data.pair);\n          \n          if(el != null){\n            el.innerText = data.marketPrice.toFixed(2);\n          }\n          }\n          \n          // console.log(data);\n          // var temp = coins;\n          // temp[i].marketPrice = data.marketPrice;\n          // setCoins(temp);\n        });\n      // }\n      // })\n     \n    }\n\n    const toggleBody = () => {\n      var body = document.getElementById(\"walletWidgetBody\");\n      if(body.classList.contains(\"open\")){\n        body.classList.remove(\"open\");\n      }else{\n        body.classList.add(\"open\");\n      }\n    };\n\n\n    return (\n        <div className={\" empty-inner-container-with-border widget balanceWidget quickBuy \"+(props.variant != null && \" \"+props.variant)} >\n          <div className=\"col\">\n          <ul className=\"list-group w-100\">\n      \n            <li className=\"widgetTitle\">\n            <i className=\"fa fa-bitcoin\"></i> <span>Buy Cryptocurrency</span>\n            </li>\n                        </ul>\n                {/* <div className=\"list-group-item d-flex justify-content-between align-items-center header-drak widgetTitle\">\n                  <div>BUY CRYPTOCURRENCY</div>\n                </div> */}\n                <div className=\"widgetBody open\" id=\"walletWidgetBody\">\n                  <div className=\"balances\">\n                    {\n                      loading ? <Spinner />\n                      :\n                        \n                          coins.length > 0 && coins.map((e, i) => {\n                            return e.toCurrency == null ? null : e.toCurrency.currencySymbol == 'EUR' ?  <div className=\"row itemrow\" key={i}>\n                              <div className=\"col-md-7\">\n                                <div className=\"item\">\n                                  <div className=\"pair\">{`${e.pair}`}</div>\n                                  <div className=\"marketPrice\" id={\"mp\"+e.pair}>{e.marketPrice.toFixed(2)}</div>\n                                </div>\n                              </div>\n                              {status == 'Accept' && <div className=\"col-md-5\">\n                                <div className=\"right\">\n                                <A href={\"/wallet/trading/\"+e.pair}><Button variant=\"white\" size=\"small\">Buy</Button></A>\n                                </div>\n                              </div>}\n                              </div>\n                              :null\n                          })\n                          \n                      }\n                  </div>\n                </div>\n          </div>\n        </div>\n    )\n}\n\nexport default QuickBuy;","import React from 'react';\nimport A from '../../components/A';\nimport Button from '../../components/Button';\nimport RecommendedFriends from '../../components/Friends/RecommendedFriends';\nimport SocialMenu from '../../components/Menu/SocialMenu';\nimport CreatePost from '../../components/Post/CreatePost';\nimport FilteredNewsFeed from '../../components/Post/FilteredNewsFeed';\nimport NewsFeed from '../../components/Post/NewsFeed';\nimport RewardsWidget from '../../components/RewardsWidget';\nimport QuickBuy from '../../components/Wallet/quickBuy';\nimport { pic, profilePic } from '../../globalFunctions';\nimport { getLatest } from '../../http/http-calls';\nrequire (\"./styles.css\");\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      refreshing: false,\n      filter: '',\n      latestblogs: [],\n      latestgigs: [],\n      latestpost: {}\n    };\n  }\n  \n  setStateFunc = (key,value) => {\n    console.log(key);\n    this.setState({[key]:value});\n  }\n\n  componentDidMount(){\n    getLatest().then(resp=>{\n      try {\n        this.setState({\n          latestblogs: resp.blogs.post,\n          latestgigs: resp.gigs.post\n        })  \n      } catch (error) {\n        \n      }\n      \n    })\n  }\n\n\n  refreshHighlights = () => {\n    this.setState({\n      refreshing: true\n    }, ()=>{\n      this.setState({\n        refreshing: false\n      })\n    })\n  }\n\n  filterPosts = (opt) => {\n    this.setState({\n      latestpost: {},\n      filter: opt\n    });\n  }\n\n\n    render() {\n        return (\n            <div className=\"feedPage\">\n            <div className=\"container my-wall-container \">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm empty-container-with-out-border left-column\">\n                  {/* <WalletBalanceWidget  {...this.props} current=\"/\" /> */}\n                  <SocialMenu  {...this.props} current=\"/\" />\n                  <RecommendedFriends {...this.props}  />\n                </div>\n                <div className=\"col-sm empty-container-with-out-border center-column\">\n\n\n                <div  className=\"mb-4 container p-0\">\n                  <CreatePost setState={this.setStateFunc} {...this.props}  />\n                  </div>\n\n                  \n                <div className=\"highlights mb-4\">\n                  \n                  <div className=\"highlight-body d-flex align-items-start justify-content-center w-100\">\n                    <div className=\"highlight-left\">\n                      <h3 className=\"title\">Blogs</h3>\n                      <div className=\"highlight-col\">\n                        {/* <div className=\"highlight-item\">\n                          <div className=\"thumb\" style={{backgroundImage: `url(https://akm-img-a-in.tosshub.com/indiatoday/images/story/202104/photo-1531564701487-f238224b7c_1200x768.jpeg)`}}></div>\n                          <div className=\"highlight-desc\">\n                            <p className=\"highlight-title\">This is a title</p>\n                          </div>\n                        </div>\n                        <div className=\"highlight-item\">\n                          <div className=\"thumb\" style={{backgroundImage: `url(https://akm-img-a-in.tosshub.com/indiatoday/images/story/202104/photo-1531564701487-f238224b7c_1200x768.jpeg)`}}></div>\n                          <div className=\"highlight-desc\">\n                            <p className=\"highlight-title\">This is a title</p>\n                          </div>\n                        </div> */}\n                         {this.state.latestblogs.map((post, i) => (\n                            <div className=\"highlight-item\" key={i}>\n                            <A href={\"/blog/\"+post.slug}><div className=\"thumb\" style={{backgroundImage: `url(${pic(post.contents[0] == undefined ?  '' : post.contents[0].content_url)})`}}></div></A>\n                            <div className=\"highlight-desc\">\n                            <A href={\"/blogs/\"+post.category}><p className=\"highlight-category\">{post.category}</p></A>\n                            <A href={\"/blog/\"+post.slug}><p className=\"highlight-title\">{post.subject}</p></A>\n                              <div className=\"highlight-meta\">\n                                <div><strong>{post.clapsCount}</strong> Claps</div>\n                                {\n                                  post.price == 0 ? <div className=\"highlight-price\"><strong>Free</strong></div> :\n                                  <div className=\"highlight-price\">{post.preferedCurrency} <strong>{post.price}</strong></div>\n                                }\n                                \n                              </div>\n                            </div>\n                          </div>\n                          ))}\n                      </div>\n                      \n                      <A href=\"/blogs/all\"><Button variant=\"primary-outline\" className=\"pull-right mt15 \">View All</Button></A>\n                    </div>\n                    <div className=\"p-2\"></div>\n                    <div className=\"highlight-right\">\n                      <h3 className=\"title\">Passionomy</h3>\n                      <div className=\"highlight-row\">\n                      {this.state.latestgigs.map((post, i) => (\n                          <div className=\"highlight-item\" key={i}>\n                          <A href={\"/passionomy/gig/\"+post.slug}><div className=\"thumb\" style={{backgroundImage: `url(${pic(post.contents[0] == undefined ?  '' : post.contents[0].content_url)})`}}></div></A>\n                          \n                          <A href={\"/u/\"+post.userid} className=\"highlight-userinfo\">\n                            <div className=\"highlight-profile-pic\" style={{backgroundImage: `url(${ profilePic(post.userinfo.avatar)})`}}></div>\n                            <div className=\"profile-name\">{post.userinfo.name}</div>\n                          </A>\n\n                          <A href={\"/passionomy/gig/\"+post.slug}><p className=\"highlight-title\">{post.subject}</p></A>\n                          <div className=\"highlight-meta justify-center\">\n                       \n                            <div className=\"price\"> {post.preferedCurrency} {post.standardPrice}</div>\n                            {/* <A href={\"/passionomy/gig/\"+post.slug}><Button  className=\"w-100 mt-1\">View</Button></A> */}\n                          </div>\n                        </div>\n                      ))}\n                      </div>\n                      <A href=\"/passionomy\"><Button variant=\"primary-outline\"  className=\"mt15 pull-right \">View All</Button></A>\n                    </div>\n                  </div>\n                  </div>\n                 \n                  \n                  \n                    <div className=\"container p-0\">\n                    <h3 className=\"title w-100 scard\">News Feed</h3>\n                    </div>\n                  \n                  {\n                    this.state.filter == '' ? \n                    <NewsFeed setState={this.setStateFunc} latestpost={this.state.latestpost}  {...this.props} />\n                    :\n                    <FilteredNewsFeed setState={this.setStateFunc} latestpost={this.state.latestpost}  {...this.props} filter={this.state.filter}  />\n                  }\n                  \n\n                </div>\n                {/* <!-- end center column --> */}\n\n                {/* <!--  right column --> */}\n\n                <div className=\"col-sm empty-container-with-out-border right-column\">\n                  <RewardsWidget {...this.props} />\n                  <QuickBuy />\n                  {/* <PopularArticles /> */}\n                  {/* <button onClick={this.testJob}> test</button> */}\n                </div>\n                {/* <!-- end right column --> */}\n              </div>\n            </div>\n\n\n\n  \n            </div>\n\n      )\n    }\n}\n\nexport default Home;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import config from \"../config/index\";\nimport {\n    makeAxiosGetRequest,\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n\n/**\n * createPost\n * @param {object} data\n */\n\nexport const getBlogCategories = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-categories`, true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const createBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"create-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const updateBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"update-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n/**\n * register\n * @param {object} data email and password\n */\nexport const getPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-posts\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getGlobalPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-global-blogs\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getFilteredBlogPosts = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-filtered-blog-posts\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postRemove = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"remove-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getComments = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-comments`, auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\n\nexport const getSinglePost = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getPopularBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-popular-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getCategoryBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-category-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getAuthorBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-author-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const getSuggestedBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-suggested-blogs\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const clap = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"blog-clap\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const sendTips = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"send-tips\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const purchaseBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"purchase-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const checkPurchasedBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"check-purchased-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likePost = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + \"like-blog\", auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const postComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + 'comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likeComment = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'like-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const replyComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'reply-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getBlogDraft = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-draft\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const postSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postUnSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"un-save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\nexport const getBlogStats = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"blog-stats\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};","import React, { useState, useEffect } from \"react\";\nimport A from \"../A\";\nimport Button from \"../Button\";\nimport \"./style.css\";\nimport Spinner from \"../Spinner\";\nimport { getTradePairs } from \"../../http/wallet-calls\";\nimport { GetAssetImage } from \"../../globalFunctions\";\nimport walletCheck from \"../../hooks/walletCheck\";\n\nconst RewardsWidget = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(null);\n\n  useEffect(() => {\n    walletCheck().then((resp) => {\n      try {\n        setStatus(resp.data.status);\n      } catch (error) {}\n    });\n  }, []);\n\n  return (\n    <div\n      className={\n        \" empty-inner-container-with-border widget rewardsWidget \" +\n        (props.variant != null && \" \" + props.variant)\n      }\n    >\n      <div className=\"col\">\n        <ul className=\"list-group w-100\">\n          <li className=\"widgetTitle\">\n            <img src={GetAssetImage(\"icon-material-royalty.svg\")} />\n            <span>Rewards</span>\n          </li>\n        </ul>\n        {/* <div className=\"list-group-item d-flex justify-content-between align-items-center header-drak widgetTitle\">\n                  <div>BUY CRYPTOCURRENCY</div>\n                </div> */}\n        <div className=\"widgetBody\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <div className=\"flex-row\">\n              <img\n                src={GetAssetImage(\"icon-material-stars.svg\")}\n                className=\"icon-star\"\n              />\n\n              {status == \"Accept\" ? (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>400 Points</strong> on\n                    your KYC.\n                  </p>\n                  <p>\n                    Refer your friend and earn <strong>500 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              ) : (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>100 Points</strong> on\n                    your Registration.\n                  </p>\n                  <p>\n                    Complete your KYC and earn <strong>400 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RewardsWidget;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport Modal from '../../components/Popup';\nimport ReactPlayer from 'react-player';\nimport { getComments,   getReplyComments, postReport, postUnReport } from '../../http/http-calls';\nimport { postSave, postUnSave, postHide, postUnHide, postHighlight, postUnHighlight} from '../../http/post-calls';\nimport {postRemove, likePost, postComment} from '../../http/blog-calls';\nimport update from 'react-addons-update';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport { switchLoader, alertBox, modal } from '../../commonRedux/';\nimport A from '../A';\nimport {GetAssetImage, pic, profilePic} from '../../globalFunctions';\nimport Truncate from 'react-truncate';\nimport config from \"../../config/index\";\nimport Dialog from '@material-ui/core/Dialog';\nimport LeftThumbCard from '../Cards/LeftThumbCard';\nimport  Button  from '../Button';\nrequire(\"./styles.css\");\n\nconst reactStringReplace = require('react-string-replace');\n\nclass BlogPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open:false,\n            url: props.post.url,\n            post: props.post,\n            last: null,\n            key: props.post._id,\n            shareModel: false,\n            reported:props.post.reported == 1?true:false,\n            saved:props.post.saved == 1?true:false,\n            category: \"\",\n            reason: \"\",\n            reportModal:false,\n            currPost: {},\n            coins: [],\n            playing: false,\n            tips:0,\n            showComments: false,\n            commentText: '',\n            postText: '',\n            replyCmt: []\n        }\n        // this.likePostFn = this.likePostFn.bind(this);\n        this.sharePost = this.sharePost.bind(this);\n        this.closeShareModal = this.closeShareModal.bind(this);\n    }\n    extractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\t\treturn text.match(regex)\n    }\n    reportModal = () => {\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n\n    componentDidMount = () => {\n        \n        if(this.props.single){\n            this.showComments(this.state.post._id);\n        }        \n        \n        try {\n            var txt = JSON.parse(this.props.post.editorContent);\n            this.setState({\n                postText: txt.blocks[0].data.text\n            })\n        } catch (error) {\n            this.setState({\n                postText: this.props.post.text\n            })\n        }\n        this.getCoins();\n    };\n\n    componentDidUpdate(prevProps){\n        if(prevProps.coins != this.props.coins){\n            this.getCoins();\n        }\n    }\n\n    getCoins = () => {\n        this.setState({\n            coins : this.props.coins\n        },() => {\n            console.log(this.state.post.tips, this.state.coins)\n        if(this.state.post != undefined && this.state.post.tips != undefined && this.state.coins != undefined){\n                var len = this.state.post.tips.length;\n                if(len > 0){\n                    var tips = 0;\n                    this.state.post.tips.map((e, i) => {\n                        var index = this.state.coins.findIndex(function(item, i){\n                            return item.currencySymbol === e.currency\n                        });\n                        try {\n                            tips += e.amount/this.state.coins[index].EstimatedUSD;\n                        } catch (error) {\n                            \n                        }\n                        if(i == (len-1)){\n                            this.setState({\n                                tips: tips\n                            })\n                        }\n                    });\n                }\n            }\n        }\n        )\n    }\n\n    postActivityCount = (activityType, action = 'add') => {\n\n        const postObj = this.state.post;\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        this.setState({ post: postObj });\n    }\n\n    editPost = (id) => {\n\n    };\n    save = (id) => {\n        //modal(true, \"sdf\");\n        postSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ saved: true });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unSave = (id) => {\n        postUnSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ saved: false });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    report = (p) => {\n        if(this.state.category == \"\"){\n            alertBox(true, \"You need to select a category\");\n        }else{\n        var link = \"blog/\"+p.slug;\n        postReport({ id: p._id, type: 'blog', link, category: this.state.category, reason: this.state.reason })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ reportModal: false, reported: true});\n        }, error => {\n            alertBox(true, error.data.message);\n            this.setState({ reportModal: false});\n        });\n    }\n    };\n    unReport = (p) => {\n        postUnReport({ id: p._id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ reported: false  });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    hidePost = (id) => {\n        postHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unhidePost = (id) => {\n        postUnHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    removePost = (id) => {\n        this.setState({last:id, open:true})\n      \n    };\n\n    removePostConfirm = () => {\n        var id = this.state.last;\n        this.setState({open:false, last:null})\n        postRemove({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, removed: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    }\n    highlightPost = (id) => {\n        postHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 1 } }, () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unHighlight = (id) => {\n        postUnHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 0 } },  () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    likePostFn = (postId, liked) => {\n        this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                    this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                alertBox(true, error.data.message);\n            });\n    }\n\n    sharePost = (post) => {\n        this.setState({ shareModel: true, currPost: post })\n    }\n\n    closeShareModal = () => {\n        this.setState({ shareModel: false })\n    }\n\n    handleOnReady = () => setTimeout(() => this.setState({ playing: true }), 100);\n    handleClose = () => this.setState({ open: !this.state.open });\n\n    postCmt = (postid) => {\n        if(this.state.commentText != '' && this.state.commentText != null){\n        switchLoader(true, 'Please wait. Commenting...');\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n                this.postActivityCount('cmtsCount');\n                const postObj = this.state.post;\n                if (!postObj.comment) {\n                    postObj.comment = [];\n                }\n                postObj.comment.unshift(resp.comment);\n                this.setState({ post: postObj, showComments: true, commentText: '' });\n                switchLoader();\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n        }\n    }\n\n    showComments = (postid) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getComments({ postid }, true)\n            .then(async resp => {\n                switchLoader();\n                this.setState({ post: { ...this.state.post, comment: resp } })\n                this.setState({ showComments: true });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    shareSuccess = () => {\n        this.postActivityCount('shareCount');\n    }\n\n    showCommentReply = (commentId) => {\n        let index = this.state.post.comment.findIndex(el => el._id === commentId);\n        const tempPostData = this.state.post;\n        tempPostData.comment[index].showReply = true;\n        this.setState({ post: tempPostData });\n        \n        // this.setState({\n        //     post: { comment: update(this.state.post.comment, { [index]: { showReply: { $set: true } } }) }\n        // }, () => {\n        // });\n    }\n\n    showCommentReplies = (commentId) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getReplyComments({ commentId }, true)\n            .then(async resp => {\n                switchLoader();\n                let index = this.state.post.comment.findIndex(el => el._id === commentId);\n                const tempPostData = this.state.post;\n                tempPostData.comment[index].replies = resp;\n                this.setState({ post: tempPostData });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    callBackCommentReply = (replyData, commentIndex) => {\n        let postObj = this.state.post;\n        if (postObj.comment && postObj.comment[commentIndex]) {\n            if (postObj.comment[commentIndex].replies) {\n                postObj.comment[commentIndex].replies.push(replyData);\n            } else {\n                postObj.comment[commentIndex].replies = [replyData];\n            }\n            let tempReplyCmt = this.state.replyCmt;\n            tempReplyCmt[commentIndex] = '';\n            this.setState({ post: postObj, replyCmt: tempReplyCmt });\n        }\n    }\n\n    // wrapHash = (val) => {\n        \n    //     return val.replace(/#(\\w+)/g, \"<A href='/search/filter=posts&q=$&'>$&</A>\").replace(\"q=#\", \"q=%23\");  \n    // }\n\n    render() {\n\n        const { post, showComments, commentText, replyCmt, key } = this.state;\n\n        return (\n            <div className={\"post \"} key={key}>\n                     <Modal displayModal={this.state.reportModal} closeModal={this.reportModal} >\n                     <div>\n                         <div className=\"form-group\">\n                             <select className=\"form-control\" value={this.state.category}  onChange={(e) => this.setState({category: e.target.value})}>\n                                 <option value=\"\">Select Category</option>\n                                 <option>Violence</option>\n                                 <option>Racism / Hatespeech</option>\n                                 <option>Pornographic</option>\n                                 <option>Spam</option>\n                                 <option>Other</option>\n                             </select>\n                         </div>\n                         <div className=\"form-group\">\n                             <textarea type=\"text\" placeholder=\"Reason\" className=\"form-control\" onChange={(e) => this.setState({reason: e.target.value})} value={this.state.reason} />\n                         </div>\n                     </div>\n                <div className=\"\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.report(post)}>Report</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.reportModal}>Cancel</Button>\n                </div>\n             </Modal>\n                <Dialog onClose={this.handleClose} className=\"confirm-modal\"  open={this.state.open}>\n                    <strong className=\"text-center p-2\"><big>Confirmation</big></strong>\n                    <p className=\"p-2\">Are you sure about deleting this?</p>\n                    <div className=\"p-2 d-flex align-items-center justify-content-around\">\n                        <Button onClick={this.handleClose} variant=\"secondary\">Cancel</Button>\n                        <Button onClick={this.removePostConfirm} variant=\"primary\">Yes</Button>\n                    </div>\n                </Dialog>\n                {!post.sharedBy ? this.getPostContent(post, showComments, commentText, replyCmt) : null}\n                {this.state.shareModel &&\n                    <Share\n                        post={this.state.currPost}\n                        shareSuccess={this.shareSuccess}\n                        closeShareModal={this.closeShareModal}\n                    />}\n            </div>\n        );\n    }\n\n    getPostContent = (post, showComments, commentText, replyCmt) => {\n        return (\n            ((post.removed > 0 ) || (post.hidden > 0 && this.props.filter != 'hidden')) ? null : \n            <LeftThumbCard reported={this.state.reported} saved={this.state.saved} report={this.reportModal} unReport={()=>this.unReport(post)} save={() => this.save(post._id)} unSave={()=>this.unSave(post._id)} url={\"/blog/\"+post.slug} thumb={pic(post.contents != undefined && post.contents[0] != undefined ? post.contents[0].content_url : '')} k={post._id} currentUser={this.props.currentUser} post={post} title={post.subject} likes={post.clapsCount} shares={post.shareCount} tips={this.state.tips} comments={post.cmtsCount} category={post.category} description={this.state.postText} removePost={this.removePost} authorid={post.userid} />\n        )\n    }\n}\n\nexport default BlogPost;\n","import React, { useState, useEffect } from 'react';\nimport A from '../A';\nimport './styles.css';\n\nconst SocialMenu = props => {\n    return (\n        <div className=\"widget empty-inner-container-with-border SocialMenus\">\n        <div className=\"container\">\n          <div className=\"row\">\n\n            <ul className=\"list-group w-100\">\n              <li className=\"widgetTitle\">\n                <i className=\"fa fa-bars\"></i> <span>Menu</span>\n              </li>\n            </ul>\n\n            <ul className=\"list-group w-100 menu\">\n              {/* <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.current == '/' && 'current')}>\n                <A href=\"/\" className=\"align-items-center d-flex\"><i className=\"fa fa-home aicon\"></i> Home</A>\n              </li> */}\n              <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.current == '/profile' && 'current')}>\n                <A href=\"/profile\" className=\"align-items-center d-flex\"><i className=\"fa fa-user aicon\"></i> My Profile</A>\n              </li>\n              <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.current == 'trading' && 'current')}>\n                <A href=\"/wallet/deposit\" className=\"align-items-center d-flex\"><i className=\"fa fa-dollar aicon\"></i> My Wallet</A>\n              </li>\n              <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.current == 'blogs' && 'current')}>\n                <A href={\"/blogs\"} className=\"align-items-center d-flex\"><i className=\"fa fa-book aicon\"></i> My Blogs</A>\n              </li>\n              <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.current == 'gigonomy' && 'current')}>\n                <A href={\"/passionomy/dashboard\"} className=\"align-items-center d-flex\"><i className=\"fa fa-handshake-o aicon\"></i> My Gigs</A>\n              </li>\n              {/* <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.current == 'feed' && 'current')}>\n                <A href=\"/feed\" className=\"align-items-center d-flex\"><span className=\"aicon newsfeed\"></span> Feed</A>\n              </li> */}\n            </ul>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SocialMenu;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport { GetAssetImage, profilePic } from '../../globalFunctions';\nimport { getSuggestions, followUser, getPendingRequests, acceptRequest,cancelRequest } from '../../http/http-calls';\nimport ContentLoader from \"react-content-loader\";\nimport Button from '../Button';\nimport { switchLoader, alertBox } from '../../commonRedux/';\nimport { friendRequest, connectSocket } from '../../hooks/socket';\nimport A from '../A';\nimport './style.css';\n\nclass RecommendedFriends extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search:false,\n            users: [],\n            seemore:false,\n            toggleSkeleton: false\n        };\n    } \n    getSuggestedFriends = (key='') => {\n        console.log(key);\n        getSuggestions({ limit: 6, page: 1, key: key }, true)\n        .then(async resp => {\n            console.log(\"respresp\")\n            console.log(resp.message);\n            this.setState({ users: resp.message, toggleSkeleton: true }, () => {\n                this.checkMore(1, key);\n            });\n        }, error => {\n            \n        });\n    }\n\n    checkMore = (i, key = '') => {\n        getSuggestions({ limit: 6, page: i+1, key:key }, true)\n        .then(async resp => {\n           if(resp.message.length > 0){\n               this.setState({\n                   seemore: true\n               })\n           }else{\n            this.setState({\n                seemore: false\n            })\n           }\n        }, error => {\n            \n        });\n    }\n\n\n  search = (e) => {\n    var val = e.target.value;\n    if(val.length > 1){\n      this.getSuggestedFriends(val);\n    }else if(val == ''){\n      this.getSuggestedFriends();\n    }\n  };\n\n\n    componentDidMount() {\n        this.getSuggestedFriends();\n        if(this.props.currentUser != undefined){\n            connectSocket(this.props.currentUser._id);\n        }\n        friendRequest((request) => {\n            console.log(request);\n            this.getSuggestedFriends();\n        });\n    }\n\n    addFriend = (id, userIndex) => {\n        switchLoader(true, 'Following...! ');\n        followUser({ followerid: id }, true)\n          .then(async resp => {\n            switchLoader();\n            let tempUser = this.state.users;\n            tempUser[userIndex]._id = resp._id;\n            tempUser[userIndex].request = resp.request;\n            tempUser[userIndex].type = \"sent\";\n            tempUser[userIndex].uid = resp.followerid;\n            if(this.props.refresh != null){\n                this.props.refresh();\n            }\n            this.setState({\n                users: tempUser\n            })\n          }, error => {\n            switchLoader();\n            \n          });\n      }\n\n    //   callPendingRequests = () => {\n    //     getPendingRequests({}, true)\n    //       .then(async resp => {\n    //         resp.length == 0 && setShowSkeletonPR(false) ;\n    //       }, error => {\n    //         switchLoader();\n            \n    //       });\n    //   }\n    \n    //   callSuggestions = () => {\n    //     getSuggestions({ limit: 10, page: 1 }, true)\n    //       .then(async resp => {\n    //         resp.message.length == 0 && setShowSkeleton(false);\n    //         switchLoader();\n    //       }, error => {\n    //         switchLoader();\n            \n    //       });\n    //   }\n    \n\n    \n      accept = (user, index, item) => {\n        switchLoader(true, 'Following...! ');\n        if(item == 0){\n            acceptRequest({ id: user._id }, true)\n            .then(async resp => {\n            switchLoader();\n            let tempUser = this.state.users;\n            delete tempUser[index];\n            if(this.props.refresh != null){\n                this.props.refresh();\n            }\n            this.setState({\n                users: tempUser\n            })\n          }, error => {\n            switchLoader();\n          });\n        }else{\n            cancelRequest({id: user.uid}, true)\n            .then(async resp => {\n              switchLoader();\n              let tempUser = this.state.users;\n              // tempUser[index] = null;\n              delete tempUser[index].request;\n              if(this.props.refresh != null){\n                  this.props.refresh();\n              }\n              this.setState({\n                  users: tempUser\n              })\n            }, error => {\n              switchLoader();\n            });\n        }\n      }\n    \n      cancelRequest = (id,index, item) => {\n        switchLoader(true, 'Cancelling...! ');\n        cancelRequest({id}, true)\n          .then(async resp => {\n            switchLoader();\n            let tempUser = this.state.users;\n            // tempUser[index] = null;\n            delete tempUser[index].request;\n            if(this.props.refresh != null){\n                this.props.refresh();\n            }\n            this.setState({\n                users: tempUser\n            })\n          }, error => {\n            switchLoader();\n          });\n      }\n\n    render() {\n\n        return (\n            <div className=\"widget empty-inner-container-with-border myfriends friendsWidget\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <ul className=\"list-group w-100\">\n                        { this.state.search ?\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center widgetTitle\">\n                                                <form className=\"w-100\">\n                                                    <div className=\"input-group search-group\">\n                                                    <input type=\"text\" className=\"form-control\" autoFocus placeholder=\"Search\" id=\"friendSearch\" onChange={this.search} />\n                                                    <div className=\"input-group-append\">\n                                                    <button className=\"btn btn-secondary search-btn\" type=\"button\" onClick={() => this.setState({search:false})}>\n                                                    <i className=\"fa fa-times\"></i>\n                                                    </button>\n                                                    </div>\n                                                    </div>\n                                                </form>                                    \n                                    </li>\n            :\n            <li className=\"widgetTitle\">\n            <i className=\"fa fa-users\"></i> <span>Make New Friends</span>\n            </li>\n            }       \n\n                        </ul>\n                        {\n                            this.state.users.length === 0 && this.state.toggleSkeleton && <p className=\"noDataFound\">No Data Found</p> \n                        }\n                        {this.state.users.map((user, i) => (\n                            <ul className=\"list-group w-100\" key={i}>\n                                <li className=\"list-group-item\">\n                                    <div className=\"media\">\n                                        <div className=\"media-left\">\n                                            <A href={\"/u/\"+((user.request && user.request == 'pending') ? user.uid : user._id)}>\n                                                <img className=\"media-object circle widgetAvatar\" src={profilePic(user.avatar)}\n                                                    alt=\"...\" />\n                                            </A>\n                                        </div>\n                                        <div className=\"media-body\">\n                                        <A href={\"/u/\"+((user.request && user.request == 'pending') ? user.uid : user._id)}><p className=\"media-heading\">{user.name}</p></A>\n                                            {/* <p className=\"media-subheading\">{user.job == null ? \"Eclipton User\" : user.job}</p> */}\n                                        </div>\n                                        <div className=\"media-right\">\n                                            {\n                                                user.request == undefined && <Button variant=\"primary-outline round small\"   onClick={() => this.addFriend(user._id, i)}><i className=\"fa fa-plus\" ></i></Button>\n                                            }\n                                            {\n                                                user.request == 'pending' && user.type == \"sent\" &&  <Button variant=\"dark\"  layout=\"dropdown\" dropdownOptions={[\"Cancel\"]} onClick={(n) => {console.log(user); this.cancelRequest(user.uid, i, n)}}>Pending</Button>\n                                            }\n                                            {\n                                                user.request == 'pending' && user.type == \"received\" && <Button variant=\"dark\" layout=\"dropdown\" dropdownOptions={[\"Accept\", \"Reject\"]}  onClick={(n) => this.accept(user, i, n)}>Respond</Button>\n                                            }\n                                            \n                                        </div>\n\n                                    </div>\n                                </li>\n                            </ul>\n                        ))}\n\n                        {(!this.state.toggleSkeleton) &&\n                            <ul className=\"list-group w-100\">\n                                <li className=\"list-group-item\">\n                                    {\n                                    Array(3)\n                                        .fill()\n                                        .map((item, index) => (\n                                            <ContentLoader\n                                                speed={2}\n                                                height={40}\n                                                viewBox=\"0 0 200 40\"\n                                                backgroundColor=\"#f3f3f3\"\n                                                foregroundColor=\"#ecebeb\"\n                                                {...this.props}\n                                                key={index}\n                                            >\n                                                <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                                <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                                <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                            </ContentLoader>\n                                        ))}\n                                </li>\n                            </ul>\n                        }\n                        {\n                            this.state.seemore && \n                                    <A href={\"/all/suggested\"} className=\"seemore-text\">See More\n                                    </A>\n                        }\n                        \n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RecommendedFriends;"],"sourceRoot":""}