{"version":3,"sources":["components/Blog/AuthorBio/index.js","components/Blog/CategoryArticles/index.js","components/Blog/BlogWidget/index.js","components/Post/BlogPostSingle.js","pages/SingleBlog/index.js","http/blog-calls.js","components/Post/Share.js"],"names":["AuthorBio","props","useState","author","setAuthor","articles","setArticles","seemore","setMore","useEffect","getCurrentUser","authorid","getGlobalProfile","id","then","resp","a","console","log","getArticles","error","getAuthorBlogs","userid","limit","page","post","checkMore","length","className","A","href","_id","style","backgroundImage","profilePic","avatar","name","map","e","i","key","slug","undefined","contents","content_url","require","subject","CategoryArticles","category","getCategoryBlogs","removed","BlogWidget","onClick","clap","src","clapped","GetAssetImage","claps","share","shares","comments","tips","toFixed","currentUser","Fragment","to","authorname","Button","type","variant","size","sendTips","BlogPostSingle","selectModal","info","setState","modal","state","selectModal2","modal2","reportModal","data","comment","key2","lastType","lastData","lastKey","lastComment","lastKey2","report","alertBox","p","t","c","link","text","postReport","reason","message","temp","replies","reported","unReport","postUnReport","deleteComment","postid","removeComment","showComments","postActivityCount","showCommentReplies","processPay","price","currency","email","receiver","switchLoader","externalTransfer","status","purchaseBlog","err","setTimeout","window","location","reload","toString","walletLogin","extractUrl","regex","RegExp","match","componentDidMount","single","global","JSON","parse","editorContent","description","blocks","postText","walletCheck","getCoins","checkPurchased","getAllPairs","coins","len","index","findIndex","item","currencySymbol","EstimatedUSD","amount","checkPurchasedBlog","purchased","payModal","sendTip","userinfo","activityType","action","postObj","commentLike","commentId","loginRedirect","likeComment","commentActivityCount","path","commentReply","commentIndex","callBack","replyComment","getReplyComments","el","tempPostData","showCommentReply","editPost","savePost","postSave","saved","unsavePost","postUnSave","hidePost","postHide","hidden","unhidePost","postUnHide","removePost","postRemove","highlightPost","postHighlight","highlighted","refreshHighlights","unHighlight","postUnHighlight","likePostFn","postId","liked","likeActive","likePost","sharePost","shareModel","currPost","closeShareModal","handleOnReady","playing","obj","clapsCount","Number","clapActive","postCmt","commentText","postComment","unshift","getComments","handleChange","evt","target","value","replyCmt","shareSuccess","showReply","callBackCommentReply","replyData","push","tempReplyCmt","getPostContent","filter","displayModal","closeModal","onChange","placeholder","r","preferedCurrency","moment","createdAt","format","cmtsCount","shareCount","hashtags","paidPost","dangerouslySetInnerHTML","__html","sharedBy","likesCount","alt","repliesCount","reply","url","bind","this","Share","React","Component","SingleBlog","getPost","getSinglePost","posts","showSkeleton","postLoaded","loadFunc","prevState","getPaginatePost","getSkeletonContent","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","hasMore","params","pathname","indexOf","prevProps","Header","appName","Array","fill","getBlogCategories","Promise","resolve","reject","makeAxiosGetRequest","config","baseUrl","res","catch","response","createBlog","makeAxiosPostRequest","updateBlog","getPosts","auth","getFilteredBlogPosts","getPopularBlogs","getBlogDraft","getBlogStats","inputText","setInputText","data-dismiss","aria-label","aria-hidden","encodeURI","frontEnd","defaultValue","disabled","cols","rows","event"],"mappings":"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","file":"static/js/27.1d4b25b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { getGlobalProfile } from '../../../http/http-calls';\nimport { getAuthorBlogs } from '../../../http/blog-calls';\nimport {GetAssetImage, profilePic} from '../../../globalFunctions';\nimport { switchLoader, alertBox } from '../../../commonRedux/';\nimport A from '../../A';\nimport config from '../../../config/';\nimport './styles.css';\nimport { Button } from '@material-ui/core';\n\nconst AuthorBio = props => {\n    const [cid, setCid] = useState(0);\n    const [author, setAuthor] = useState({});\n    const [articles, setArticles] = useState([]);\n    const [seemore, setMore] = useState(false);\n    useEffect(() => {\n        \n          getCurrentUser();\n        \n    }, [props.authorid]);\n    \n    const getCurrentUser = () => {\n        getGlobalProfile({id: props.authorid}, true)\n        .then(async resp => {\n            console.log(resp);\n            setAuthor(resp);\n            getArticles();\n        }, error => {\n            \n        });\n    }\n\n    const getArticles = () => {\n        getAuthorBlogs({userid: props.authorid, limit:5, page:1}, true)\n        .then(async resp => {\n            setArticles(resp.post);\n            checkMore();\n        }, error => {\n            \n        });\n    };\n    const checkMore = () => {\n        getAuthorBlogs({userid: props.authorid, limit: 5, page: 2}, true).then(resp => {\n            if(resp.post.length > 0){\n                setMore(true);\n            }\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    return (\n        <div className=\"row empty-inner-container-with-border authorBio widget\">\n            <div className=\"container\">\n        <div className=\"row\">\n            <ul className=\"list-group w-100 border-bottom \">\n                    <li className=\"list-group-item widgetTitle\">\n                        <div className=\"media\">\n                            <div className=\"media-left\">\n                                <A href={\"/u/\"+author._id}>\n                                    <div className=\"thumbnail circle widgetTitlePic\" style={{backgroundImage: 'url('+profilePic(author.avatar)+')'}}>\n\n                                    </div>\n                                </A>\n                            </div>\n                            <div className=\"media-body\">\n                                <A href={\"/u/\"+author._id}><p className=\"media-heading text-white\">{author.name}</p></A>\n                            </div>\n                        </div>\n                    </li>\n            </ul>\n\n            {\n            articles.length > 0 && articles.map((e, i) => (\n                <ul className=\"list-group w-100\" key={i}>\n                    <li className=\"list-group-item\">\n                        <div className=\"media\">\n                            <div className=\"media-left\">\n                                <a href={\"/blog/\"+e.slug}>\n                                    <div className=\"thumbnail\" style={{backgroundImage: 'url('+(e.contents != undefined && e.contents[0] != undefined ? e.contents[0].content_url : require(\"../../../assets/images/post-image@2x.png\"))+')'}}>\n\n                                    </div>\n                                </a>\n                            </div>\n                            <div className=\"media-body\">\n                                <a href={\"/blog/\"+e.slug}><p className=\"media-heading\">{e.subject}</p></a>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            ))\n            }\n\n           {\n               seemore && \n               <A href={\"/all/author-blogs/\"+props.authorid} className=\"seemore-text\">See More\n               </A>\n        //        <ul className=\"list-group w-100\">\n        //        <li className=\"list-group-item d-flex justify-content-between align-items-center p-0 ml-3\">\n        //            <A href={\"/all/author-blogs/\"+props.authorid} >\n        //            <span className=\"seemore\">See More</span>\n        //            </A>\n        //        </li>\n        //    </ul>\n           }\n            \n\n        </div>\n    </div>\n        </div> \n    )\n}\n\nexport default AuthorBio;","import React, {useEffect, useState} from 'react';\nimport A from '../../A';\nimport './styles.css';\nimport { defaultPic, GetAssetImage } from '../../../globalFunctions';\nimport {getCategoryBlogs} from '../../../http/blog-calls';\nimport config from '../../../config';\n\nconst CategoryArticles = props => {\n    const [category, setCategory] = useState(props.category);\n    const [articles, setArticles] = useState([]);\n    const [seemore, setMore] = useState(false);\n    useEffect(() => {\n        console.log(props.category);\n        getArticles();        \n    }, []);\n    const getArticles = () => {\n        getCategoryBlogs({limit: 5, page:1, category: category}).then(resp => {\n            console.log(resp);\n            setArticles(resp.post);\n            checkMore();\n        }, error => {\n            console.log(error);\n        });\n    };\n    const checkMore = () => {\n        getCategoryBlogs({limit: 5, page: 2, category: category}).then(resp => {\n            if(resp.post.length > 0){\n                setMore(true);\n            }\n        }, error => {\n            console.log(error);\n        });\n    }\n  return (\n    <div className=\"row empty-inner-container-with-border categoryArticles widget\">\n    <div className=\"container\">\n        <div className=\"row\">\n            <ul className=\"list-group w-100\">\n                <li className=\"list-group-item d-flex justify-content-between align-items-center widgetTitle\">\n                    {category} Blogs\n                    {/* <A href=\"/\" className=\"text-primary\">See All</A> */}\n                </li>\n            </ul>\n\n            {\n            articles.length > 0 && articles.map((e, i) => (\n                e.removed > 0 ? null :\n                <ul className=\"list-group w-100\" key={i}>\n                    <li className=\"list-group-item\">\n                        <div className=\"media\">\n                            <div className=\"media-left\">\n                                <a href={\"/blog/\"+e.slug}>\n                                    <div className=\"thumbnail\" style={{backgroundImage: 'url('+(e.contents != undefined && e.contents[0] != undefined ? e.contents[0].content_url : require(\"../../../assets/images/post-image@2x.png\"))+')'}}>\n\n                                    </div>\n                                </a>\n                            </div>\n                            <div className=\"media-body\">\n                                <a href={\"/blog/\"+e.slug}><p className=\"media-heading\">{e.subject}</p></a>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            ))\n            }\n\n           {\n               seemore &&    <A href={\"/blogs/\"+category} className=\"seemore-text\">See More\n               </A>\n           }\n            \n\n        </div>\n    </div>\n</div>\n  );\n\n};\n\nexport default CategoryArticles;","import React, { useState, useEffect } from 'react';\nimport A from '../../A';\nimport {Link} from 'react-router-dom';\nimport {GetAssetImage} from '../../../globalFunctions';\nimport { walletAuth, likePost, getComments, postComment, likeComment, replyComment,  getReplyComments } from '../../../http/http-calls';\n\nimport { getAllPairs, getAllBalance, getKYCDetails, getWalletAddress, getAdminBankDetails, fiatDeposit, externalTransfer, internalTransfer} from '../../../http/wallet-calls';\nimport { switchLoader, alertBox, modal } from '../../../commonRedux/';\nimport Button from '../../Button';\nimport Modal from '../../Popup';\nimport './styles.css';\n\nconst BlogWidget = props => {\n    const [hashtags, setHashtags] = useState([]);\n\n    useEffect(() => {\n      \n    }, []);\n    \n    \n\n    const toggleBody = () => {\n      var body = document.getElementById(\"walletWidgetBody\");\n      if(body.classList.contains(\"open\")){\n        body.classList.remove(\"open\");\n      }else{\n        body.classList.add(\"open\");\n      }\n    };\n\n    \n\n    \n    return (\n        <div className=\"blog-widget widget\" >\n           \n          <div className=\"blog-widget-inner container\">\n          {/* <div className=\"clapped\"><img src={GetAssetImage(\"icons/clapped.svg\")} /></div> */}\n          \n          <div className=\"item\" onClick={props.clap}>\n            <img src={props.clapped == 1 ? GetAssetImage(\"icons/clapped.svg\") : GetAssetImage(\"icons/clap.svg\")} /> {props.claps} Claps\n          </div>\n          <div className=\"item\" onClick={props.share}>\n            <img src={GetAssetImage(\"icons/share.svg\")} /> {props.shares} Shares\n          </div>\n          <div className=\"item\">\n            <img src={GetAssetImage(\"icons/comment.svg\")} /> {props.comments} Comments\n          </div>\n          <div className=\"item\">\n            <img src={GetAssetImage(\"icons/tip.svg\")} /> ${props.tips.toFixed(8)} Tipped \n            {\n              props.currentUser != null && props.authorid != props.currentUser._id && \n              <React.Fragment>\n            <p>Help grow our community send tips to keep receiving new posts from <Link to={\"/u/\"+props.authorid}>{props.authorname}</Link></p>\n            \n            <Button type=\"button\" variant=\"primary\" size=\"compact\" onClick={props.sendTips}><span>Send tip</span></Button>\n            </React.Fragment>\n            }\n          \n          </div>\n          </div>\n        </div>\n    )\n}\n\nexport default BlogWidget;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport ReactPlayer from 'react-player';\nimport moment from 'moment';\nimport { sendTips } from '../../http/blog-calls';\nimport { postReport, postUnReport, walletAuth, getComments,    getReplyComments, removeComment } from '../../http/http-calls';\nimport { postSave, postUnSave, postHide, postUnHide, postHighlight, postUnHighlight} from '../../http/post-calls';\nimport {postRemove, likePost, postComment, likeComment, replyComment, clap, purchaseBlog, checkPurchasedBlog} from '../../http/blog-calls';\nimport update from 'react-addons-update';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport { switchLoader, alertBox, modal } from '../../commonRedux/';\nimport Modal from '../../components/Popup';\nimport A from '../A';\nimport {GetAssetImage, profilePic} from '../../globalFunctions';\nimport Truncate from 'react-truncate';\nimport Breadcrumb from '../../components/Breadcrumb';\nimport config from \"../../config/index\";\nimport Button from '../../components/Button';\nimport BlogWidget from '../../components/Blog/BlogWidget';\nimport { getAllPairs, externalTransfer} from '../../http/wallet-calls';\nimport walletCheck from '../../hooks/walletCheck';\nrequire(\"./styles.css\");\n\nconst reactStringReplace = require('react-string-replace');\n\nclass BlogPostSingle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: props.post.url,\n            coins: [],\n            tips: 0,\n            reportModal:false,\n            global : props.global,\n            post: props.post,\n            key: props.post._id,\n            shareModel: false,\n            currPost: {},\n            playing: false,\n            showComments: false,\n            purchased: false,\n            commentText: '',\n            postText: '',\n            currency: 'USD',\n            amount: 1,\n            description: '',\n            modal: false,\n            modal2:false,\n            replyCmt: []\n        }\n        // this.likePostFn = this.likePostFn.bind(this);\n        this.sharePost = this.sharePost.bind(this);\n        this.closeShareModal = this.closeShareModal.bind(this);\n        \n    }\n    selectModal = (info) => {\n        this.setState({modal: !this.state.modal}) // true/false toggle\n      }\n      selectModal2 = (info) => {\n        this.setState({modal2: !this.state.modal2}) // true/false toggle\n      }\n      reportModal = (type = null, data = null, key = null, comment = null, key2 = null ) => {\n        console.log(type, data, key, comment, key2)\n        if(type != null){\n            this.setState({\n                lastType: type,\n                lastData: data,\n                lastKey : key,\n                lastComment: comment,\n                lastKey2: key2\n            })\n        }\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n      report = () => {\n        if(this.state.category == \"\"){\n            alertBox(true, \"You need to select a category\");\n        }else{\n        var p = this.state.lastData;\n        var t = this.state.lastType;\n        var key = this.state.lastKey;\n        var c = this.state.lastComment;\n        var key2 = this.state.lastKey2;\n        console.log(p, t, key, c, key2);\n        var link = '';\n        if(t == 'comment'){\n            link = p.text;\n        }\n        else if(t == 'reply'){\n            link = p.text;\n        }else{\n            link = \"post/\"+p._id;\n        }\n            postReport({ id: p._id, type: t, link, category: this.state.category, reason: this.state.reason })\n            .then(async resp => {\n                alertBox(true, resp.message, 'success');\n                if(t == 'comment'){\n                    var temp = this.state.post;\n                    temp.comment[key]['reported'] = 1;\n                    this.setState({ post: temp, reportModal:false });\n                }\n                else if(t == 'reply'){\n                    var temp = this.state.post;\n                    temp.comment[key2].replies[key]['reported'] = 1;\n                    this.setState({ post: temp, reportModal:false });\n                }\n                else{\n                    this.setState({ reportModal: false, post: { ...this.state.post, reported: 1 } });\n                }\n                \n            }, error => {\n                alertBox(true, error.data.message);\n                this.setState({ reportModal: false});\n            });\n        }\n    };\n    unReport = (t, id, key=null, key2= null) => {\n        postUnReport({ id: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            if(t == 'comment'){\n                var temp = this.state.post;\n                temp.comment[key]['reported'] = 0;\n                this.setState({ post: temp });\n            }\n            else if(t == 'reply'){\n                var temp = this.state.post;\n                temp.comment[key2].replies[key]['reported'] = 0;\n                this.setState({ post: temp });\n            }\n            else{\n                this.setState({ post: { ...this.state.post, reported: 0 } });\n            }\n            \n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n      deleteComment = (type, postid, id) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        console.log(type, postid, id)\n        removeComment({ id }, true)\n            .then(async resp => {\n                if(type == 'comment'){\n                    this.showComments(postid);\n                    this.postActivityCount('cmtsCount', \"sub\");\n                }else{\n                    console.log(\"done\");\n                    this.showCommentReplies(postid);\n                }\n                \n            }, error => {\n                alertBox(true, error.data.message)\n            });\n    }\n      processPay = (id, price, currency, email, receiver) => {\n        var data = {\n            \"currency\": currency,\n            \"email\": email,\n            \"amt\": price,\n            \"note\" : \"Blog Purchase\"\n        };\n       switchLoader(\"Payment in progress...\");\n        externalTransfer(data).then(async resp => {\n            try {\n                if(resp.status == true){\n                    alertBox(true, resp.message, \"success\");\n                    data.postid = id;\n                    data.receiver = receiver;\n                    purchaseBlog(data).then(resp=>{\n                        console.log(resp);\n                    }, err => {\n                    console.log(err);\n                    })\n                    setTimeout(() => {\n                        window.location.reload();\n                    }, 1000);\n                }else{\n                    alertBox(true, resp.message)\n                }\n            } catch (error) {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n            }\n            switchLoader();\n        }, error => {\n            console.log(error);\n            if(error.data == \"unauthorized\"){\n                this.walletLogin();\n            }else{\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n                switchLoader();\n            }\n            \n        });\n      }\n\n      \n\n\n    \n    extractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\t\treturn text.match(regex)\n    }\n\n    componentDidMount = () => {\n        if(this.props.single && !this.state.global){\n            this.showComments(this.state.post._id);\n        } \n       \n        try {\n            var text = JSON.parse(this.props.post.editorContent);\n            this.setState({\n                description: text.blocks[0].data.text,\n                postText: this.props.post.text\n            });\n        } catch (error) {\n            this.setState({\n                postText: this.props.post.text\n            })\n        }\n        \n        walletCheck().then(resp=>{\n           this.getCoins();\n        }, err => {\n            console.log(err);\n        })\n\n        this.checkPurchased();\n    };\n\n    getCoins = () => {\n        getAllPairs().then(resp => {\n            this.setState({\n                coins: resp.data\n            }, () => {\n                var len = this.props.post.tips.length;\n                if(len > 0){\n                    var tips = 0;\n                    \n                    this.props.post.tips.map((e, i) => {\n                        var index = this.state.coins.findIndex(function(item, i){\n                            return item.currencySymbol === e.currency\n                        });\n                        try {\n                            tips += this.state.coins[index].EstimatedUSD*e.amount;\n                        } catch (error) {\n                            \n                        }\n                        if(i == (len-1)){\n                            this.setState({\n                                tips: tips\n                            })\n                        }\n                    });\n                }\n                // this.setState({\n                //     tips: 10\n                // })\n            });\n        }, err => {\n            console.log(err);\n        })\n    }\n\n    checkPurchased = () => {\n        checkPurchasedBlog({postid: this.state.post._id}).then(resp=>{\n            try {\n                if(resp.status == 1){\n                    this.setState({purchased: true});\n                }\n            } catch (error) {\n                \n            }\n        }, err => {\n            console.log(err);\n        })\n    }\n\n    payModal=(amount, currency)=>{\n        this.setState({modal:true});\n    };\n\n    sendTip = () => {\n        if(this.state.amount == '' || this.state.amount <= 0 || this.state.currency == ''){\n            alertBox(true, \"Amount & Currency are required\");\n        }else{\n        var data = {\n            \"currency\": this.state.currency,\n            \"email\": this.state.post.userinfo.email,\n            \"amt\": this.state.amount,\n            \"note\" : \"Tips\"\n        };\n\n        var currency = this.state.currency;\n        \n        switchLoader(true, \"Payment in progress...\");\n        externalTransfer(data).then(async resp => {\n            try {\n                if(resp.status == true){\n                    alertBox(true, resp.message, \"success\");\n                    \n                    var index = this.state.coins.findIndex(function(item, i){\n                        return item.currencySymbol === currency\n                    });\n                    try {\n                        var tips = this.state.tips+(this.state.coins[index].EstimatedUSD*this.state.amount);\n                        this.setState({\n                            tips: tips\n                        })\n                        \n                    } catch (error) {\n                        console.log(error);\n                    }\n                    data.postid = this.state.post._id;\n                    data.receiver = this.state.post.userid;\n                    sendTips(data).then(resp=>{\n                      this.selectModal2();\n                    }, err => {\n                        this.selectModal2();\n                    })\n                }else{\n                    alertBox(true, resp.message)\n                }\n            } catch (error) {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n            }\n            switchLoader();\n        }, error => {\n            console.log(error);\n            if(error.data == \"unauthorized\"){\n                alertBox(true, \"Unauthorized\");\n            }else{\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n                switchLoader();\n            }\n            \n        });\n        }\n      }\n\n    postActivityCount = (activityType, action = 'add') => {\n\n        const postObj = this.state.post;\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        this.setState({ post: postObj });\n    }\n\n    commentLike = (key, postid, commentId) => {\n        if(this.state.global){\n            this.loginRedirect();\n        }else{\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ postid, commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                  this.commentActivityCount(key, 'likesCount');\n                } else if (resp.message == 'Dislike') {\n                this.commentActivityCount(key, 'likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n        }\n    }\n\n    loginRedirect = () => {\n        window.location.href = \"/login?next=\"+this.props.path;\n    }\n\n    commentReply = (postid, commentId, comment, commentIndex, callBack) => {\n        if(comment != '' && comment != null){\n        replyComment({ postid: postid, commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n        });\n    }\n    }\n\n    commentActivityCount = (commentId, activityType, action = 'add') => {\n        const post = this.state.post;\n        const postObj = post.comment[commentId];\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        post.comment[commentId] = postObj;\n        this.setState({ post: post });\n    };\n\n    showCommentReplies = (commentId) => {\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getReplyComments({ commentId }, true)\n        .then(async resp => {\n            console.log(resp);\n            switchLoader();\n            let index = this.state.post.comment.findIndex(el => el._id === commentId);\n            const tempPostData = this.state.post;\n            tempPostData.comment[index].replies = resp;\n            this.setState({ post: tempPostData });\n            this.showCommentReply(commentId);\n        }, error => {\n            alertBox(true, error.data.message);\n            switchLoader();\n        });\n    }\n\n    editPost = (id) => {\n\n    };\n    savePost = (id) => {\n        //modal(true, \"sdf\");\n        postSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, saved: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unsavePost = (id) => {\n        postUnSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, saved: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    hidePost = (id) => {\n        postHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unhidePost = (id) => {\n        postUnHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    removePost = (id) => {\n        postRemove({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, removed: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    highlightPost = (id) => {\n        postHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 1 } }, () => {\n                this.props.refreshHighlights();\n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unHighlight = (id) => {\n        postUnHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 0 } },  () => {\n                this.props.refreshHighlights();\n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    likePostFn = (postId, liked) => {\n        console.log(this.state.global);\n        if(this.state.global){\n            this.loginRedirect();\n        }else{\n        this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                    this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                alertBox(true, error.data.message);\n            });\n        }\n    }\n\n    sharePost = (post) => {\n        if(this.state.global){\n            this.loginRedirect();\n        }else{\n        this.setState({ shareModel: true, currPost: post })\n        }\n    }\n\n    closeShareModal = () => {\n        this.setState({ shareModel: false })\n    }\n\n    handleOnReady = () => setTimeout(() => this.setState({ playing: true }), 100);\n\n    clap = () => {\n        if(this.state.global){\n            this.loginRedirect();\n        }else{\n        let obj = { postid : this.state.post._id};\n        clap(obj)\n            .then(\n                resp =>{\n                    var temp = {...this.state.post};\n                    temp.clapsCount = Number(this.state.post.clapsCount)+1;\n                    temp.clapActive = 1;\n                    this.setState({clapped: true, post: temp});\n            }, error => {\n                alertBox(true, error.data.message);\n                \n            });\n        }\n    }\n    postCmt = (postid) => {\n        if(this.state.commentText != '' && this.state.commentText != null){\n        switchLoader(true, 'Please wait. Commenting...');\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n                this.postActivityCount('cmtsCount');\n                const postObj = this.state.post;\n                if (!postObj.comment) {\n                    postObj.comment = [];\n                }\n                postObj.comment.unshift(resp.comment);\n                this.setState({ post: postObj, showComments: true, commentText: '' });\n                switchLoader();\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n        }\n    }\n\n    showComments = (postid) => {\n        if(this.state.global){\n            this.loginRedirect();\n        }else{\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getComments({ postid }, true)\n        .then(async resp => {\n            switchLoader();\n            this.setState({ post: { ...this.state.post, comment: resp } })\n            this.setState({ showComments: true });\n        }, error => {\n            alertBox(true, error.data.message);\n            switchLoader();\n        });\n    }\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    shareSuccess = () => {\n        this.postActivityCount('shareCount');\n    }\n\n    showCommentReply = (commentId) => {\n        let index = this.state.post.comment.findIndex(el => el._id === commentId);\n        const tempPostData = this.state.post;\n        tempPostData.comment[index].showReply = true;\n        this.setState({ post: tempPostData });\n        \n        // this.setState({\n        //     post: { comment: update(this.state.post.comment, { [index]: { showReply: { $set: true } } }) }\n        // }, () => {\n        // });\n    }\n\n    // showCommentReplies = (commentId) => {\n\n    //     switchLoader(true, 'Please wait. Getting Comments...');\n    //     getReplyComments({ commentId }, true)\n    //         .then(async resp => {\n    //             switchLoader();\n    //             let index = this.state.post.comment.findIndex(el => el._id === commentId);\n    //             const tempPostData = this.state.post;\n    //             tempPostData.comment[index].replies = resp;\n    //             this.setState({ post: tempPostData });\n    //         }, error => {\n    //             alertBox(true, error.data.message);\n    //             switchLoader();\n    //         });\n    // }\n\n    callBackCommentReply = (replyData, commentIndex) => {\n        let postObj = this.state.post;\n        if (postObj.comment && postObj.comment[commentIndex]) {\n            if (postObj.comment[commentIndex].replies) {\n                postObj.comment[commentIndex].replies.push(replyData);\n            } else {\n                postObj.comment[commentIndex].replies = [replyData];\n            }\n            let tempReplyCmt = this.state.replyCmt;\n            tempReplyCmt[commentIndex] = '';\n            this.setState({ post: postObj, replyCmt: tempReplyCmt });\n        }\n    }\n\n    // wrapHash = (val) => {\n        \n    //     return val.replace(/#(\\w+)/g, \"<A href='/search/filter=posts&q=$&'>$&</A>\").replace(\"q=#\", \"q=%23\");  \n    // }\n\n    render() {\n\n        const { post, showComments, commentText, replyCmt, key } = this.state;\n\n        return (\n            <div className={\"row empty-inner-container-with-out-border post \"} key={key}>\n                {!post.sharedBy ? this.getPostContent(post, showComments, commentText, replyCmt) : null}\n                {this.state.shareModel &&\n                    <Share\n                        type=\"blog\"\n                        post={this.state.currPost}\n                        shareSuccess={this.shareSuccess}\n                        closeShareModal={this.closeShareModal}\n                    />}\n            </div>\n        );\n    }\n\n    getPostContent = (post, showComments, commentText, replyCmt) => {\n        return (\n            ((post.removed > 0 ) || (post.hidden > 0 && this.props.filter != 'hidden')) ? null : \n            <React.Fragment>\n                          <Modal displayModal={this.state.reportModal} closeModal={this.reportModal} >\n                     <div>\n                         <div className=\"form-group\">\n                             <select className=\"form-control\" value={this.state.category}  onChange={(e) => this.setState({category: e.target.value})}>\n                                 <option value=\"\">Select Category</option>\n                                 <option>Violence</option>\n                                 <option>Racism / Hatespeech</option>\n                                 <option>Pornographic</option>\n                                 <option>Spam</option>\n                                 <option>Other</option>\n                             </select>\n                         </div>\n                         <div className=\"form-group\">\n                             <textarea type=\"text\" placeholder=\"Reason\" className=\"form-control\" onChange={(e) => this.setState({reason: e.target.value})} value={this.state.reason} />\n                         </div>\n                     </div>\n                <div className=\"\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.report()}>Report</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.reportModal}>Cancel</Button>\n                </div>\n             </Modal>\n                <Modal displayModal={this.state.modal2} closeModal={this.selectModal2} >\n                \n                \n                <div className=\"form-group\">\n                  <label>Currency</label>\n                  <select className=\"form-control\" name=\"currency\" onChange={this.handleChange} value={this.state.currency}>\n                    {\n                      this.state.coins.map((e, r)=>{\n                        return <option key={r} value={e.currencySymbol}>{e.currencySymbol}</option>\n                      })\n                    }\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                <label>Amount</label>\n                    <input type=\"text\" name=\"amount\" onChange={this.handleChange} value={this.state.amount} />\n                </div>\n                <div className=\"text-center\">\n                  <Button variant=\"primary\" size=\"compact m-2\" onClick={this.sendTip}>Pay Now</Button>\n                  <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.selectModal2}>Cancel</Button>\n                </div>\n               </Modal>\n             <Modal displayModal={this.state.modal} closeModal={this.selectModal} >\n                <div className=\"d-flex align-items-center justify-content-center w-100 h-100 position-absolute\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.processPay(post._id, post.price, post.preferedCurrency, post.userinfo.email, post.userid)}>Pay Now</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.selectModal}>Cancel</Button>\n                </div>\n             </Modal>\n                \n                <div className=\"container blog-header\">\n                   \n                    \n                    <div className=\"row-b\">\n                    <div className=\"tagbtn\">{(post.category == null) ? 'General' : post.category}</div>\n                    {\n          post.saved  ?\n            <Button onClick={()=>this.unsavePost(post._id)} variant=\"primary-outline\">\n            <i className=\"fa fa-undo mr-1\"></i> Remove from Wishlist</Button> \n          :\n            <Button onClick={()=>this.savePost(post._id)} variant=\"primary-outline\">\n            <i className=\"fa fa-plus mr-1\"></i> Add to Wishlist</Button> \n        }\n                    </div>\n                    <h1>{post.subject}</h1>\n                    <p className=\"p-0 m-0\">By <Link className=\"authorName\" to={\"/u/\"+post.userid}>{post.userinfo.name}</Link> | <span className=\"text-secondary text-strong time\">{moment(post.createdAt).format('DD MMM YYYY')}</span></p>\n                </div>\n                <BlogWidget sendTips={this.selectModal2} currentUser={this.props.currentUser} authorid={post.userid} authorname={post.userinfo.name} comments={post.cmtsCount} shares={post.shareCount} share={() => this.sharePost(post)} claps={post.clapsCount} clap={this.clap} postid={post._id} clapped={post.clapActive} tips={this.state.tips} email={post.userinfo.email} />\n            <div className=\"container single \" key={`${post._id}1`}>\n                <div className=\"row\">\n                \n                <div className=\"blog-cover\" style={{backgroundImage: \"url(\" + (post.contents != undefined && post.contents[0] != undefined ? post.contents[0].content_url : require(\"../../assets/images/post-image@2x.png\")) + \")\"}}>\n                        <A href=\"goBack\"><span className=\"go-back fa fa-arrow-left\">\n\n                        </span></A>\n                        {post.hashtags != null && post.hashtags.length > 0 && post.hashtags[0] != '' && <div className=\"tags\">\n                            {\n                                post.hashtags != null && post.hashtags.map((e, i) => {\n                                    return <div className=\"tag\" key={i}>{e}</div>\n                                })\n                            }\n                        </div>}\n                    </div>\n                    <div className=\"blog-content p-4 w-100\">\n                        {/* <Breadcrumb items={[{\"name\": \"Blogs\", \"link\": \"/blogs\"}, {\"name\": (post.category == null) ? 'General' : post.category, \"link\": (post.category == null) ? '/blogs/general' : \"/blogs/\"+post.category}, {\"name\": post.subject, \"link\": \"\"}]} />\n                        <div className=\"d-flex align-items-center justify-content-between\">\n                            \n                            <div className=\"blog-actions\">\n                                <A href=\"/add-blog\"><span className=\"fa fa-pencil\"></span></A>\n                                <A href=\"\"><span className=\"fa fa-star-o\"></span></A>\n                                <A href=\"\"><span className=\"fa fa-share\"></span></A>\n                            </div>\n                        </div> */}\n                        \n                        \n                        <div className=\"blog-text w-100\">\n                            {\n                                post.paidPost && (this.state.global || post.userid != this.props.currentUser._id) && !this.state.purchased ?\n                                <div>\n                                    <div dangerouslySetInnerHTML={{__html: this.state.description}}></div>\n                                    <div className=\"paymentDiv\">\n                                        <h3>Pay <strong className=\"text-danger\">{post.preferedCurrency} {post.price}</strong> to read the whole article</h3>\n                                        <Button variant=\"primary\" size=\"big\" type=\"button\" onClick={() => {this.state.global ? this.loginRedirect() : this.payModal()}}>Pay</Button>\n                                    </div>\n                                </div> \n                                : <div  className=\"w-100\">\n                                        {\n                                            this.state.postText != '' &&  <div dangerouslySetInnerHTML={{__html: this.state.postText}}></div>\n                                        }\n                                </div>\n\n                            }\n                        \n                        {/*  */}\n                        </div>\n                        \n            \n                    </div>\n                {/* new */}\n                    <ul className=\"list-group w-100 m-0\">\n                     \n                       \n                        {!post.sharedBy && <div>\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center post-meta p-1 horizontal-line-fit-top mt-4\">\n                                <div className=\"col pl-1\">\n                                    <ul className=\"list-group list-group-horizontal remove-border m-0 mt-1 mb-1\">\n                                        <li className=\"list-group-item pointer\" onClick={(e) => this.likePostFn(post._id, post.likeActive)}>\n                                            <img src={post.likeActive === 1 ? require(\"../../assets/images/icons/like_active.svg\") : require(\"../../assets/images/icons/like.svg\")} />\n                                            <span className=\"m-1\">{post.likesCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.likesCount} </span>}</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div className=\"pr-1\">\n                                <ul className=\"list-group list-group-horizontal remove-border m-0 mt-1 mb-1\">\n                                <li className=\"list-group-item pl-0 pointer\">\n                                            <span className=\"m-1\" onClick={() => this.showComments(post._id)}>{post.cmtsCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.cmtsCount} </span>} {post.cmtsCount > 1 ? 'Comments' : 'Comment'} </span>\n                                        </li>\n                                        <li className=\"list-group-item pl-0 pointer\" onClick={(e) => this.sharePost(post)}>\n                                            <span className=\"m-1\">{post.shareCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.shareCount} </span>} {post.shareCount > 1 ? 'Shares' : 'Share'} </span>\n                                        </li>\n                                        {/* <li className=\"list-group-item pl-0\"><img className=\" extraSmallIcon\" src=\"/favicon.png\" /><span className=\"m-1\"></span></li>\n                                        {post.twitterPost && <li className=\"list-group-item pl-0\"><img className=\" extraSmallIcon\" src=\"/static/media/twitter-filled.c9f12008.svg\" /><span className=\"m-1\"></span></li>}\n                                        <li className=\"list-group-item pl-0\"><img className=\" extraSmallIcon\" src={require(\"../../assets/images/\" + (post.privacy == 'public' ? \"create-visibility-icon\" : \"hide-visibility-icon@2x\") + \".png\")} /></li> */}\n                                </ul>\n                                </div>\n                            </li>\n                            {(!post.sharedBy && showComments) &&<li className=\"list-group-item d-flex justify-content-between align-items-center create-post-attachments p-1 horizontal-line-fit-top pb-4\">\n                                <div className=\"col\">\n                                    <input className=\"form-control tempcommentInput\"\n                                        type=\"text\"\n                                        placeholder=\"Add your comment\"\n                                        name=\"commentText\"\n                                        value={commentText}\n                                        onChange={(e) => this.handleChange(e)} />\n                                    <Button className=\"commentBtn\" onClick={() => this.postCmt(post._id)}>COMMENT</Button>\n                                </div>\n                        </li> }\n                        </div>}\n                        {(!post.sharedBy && showComments) &&\n                            post.comment.map((comment, i) => (\n                                \n                                <li className=\"list-group-item d-flex justify-content-between align-items-center create-post-attachments p-1 horizontal-line-fit-top\" key={i}>\n                                    <div className=\"col pl-1\">\n                                        <div className=\"media w-100 align-items-center p-1 comment-row\">\n                                            <div className=\"media-left mr-2\">\n                                            <A href={\"/u/\"+(comment.userinfo._id)}>\n                                                    <img  className=\"media-object pic commentPic\" src={profilePic(comment.userinfo.avatar)}\n                                                        alt=\"...\" />\n                                                </A>\n                                            </div>\n                                            <div className=\"media-body\">\n                                            <A href={\"/u/\"+(comment.userinfo._id)}><p className=\"media-heading\">{comment.userinfo.name}</p></A>\n                                                <p className=\"media-subheading\">{comment.text}</p>\n                                                <div className=\"d-flex\">\n                                                <span className=\"mr-2 pointer\" onClick={(e) => this.commentLike(i, post._id, comment._id)}>{comment.likeActive ? 'Liked' : 'Like'}  {(comment.likesCount && comment.likesCount > 0) ? comment.likesCount : ''}</span>\n                                                <span className=\"mr-2 pointer\" onClick={(e) => this.showCommentReplies(comment._id)}>{(comment.repliesCount && comment.repliesCount > 1) ? 'Replies' : 'Reply'} {(comment.repliesCount && comment.repliesCount > 0) ? comment.repliesCount: ''}</span>\n                                                \n                                                    {/* <span className=\"mr-2 pointer\" onClick={(e) => this.props.commentLike(comment._id)}>Like</span>\n                                                    <span className=\"mr-2 pointer\" onClick={(e) => this.showCommentReply(comment._id)}>Reply</span>\n                                                    {(comment.repliesCount && comment.repliesCount > 0) ? <span className=\"mr-2 pointer\" onClick={(e) => this.showCommentReplies(comment._id)}>{comment.repliesCount} replies</span> : ''}\n                                                    {(comment.likesCount && comment.likesCount > 0) ? <span className=\"mr-2 pointer\" >{comment.likesCount} likes</span> : ''} */}\n                                                    {/* <span className=\"mr-2\">Translate</span> */}\n                                                </div>\n                                                \n                                            </div>\n                                            <div className=\"media-right\">\n                                            <div className=\"list-group-item  p-1 pr-2 pointer  dropdown\"><i className=\"fa fa-ellipsis-h\"></i>\n                                                <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n                                                {(comment.userinfo._id == this.props.currentUser._id || post.userid == this.props.currentUser._id ) && <a className=\"dropdown-item\" onClick={(e) => this.deleteComment('comment', post._id, comment._id)}>\n                                                    <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n                                                    <span className=\"m-1\">Delete</span></a> }\n                                                    {\n                                                         comment.userinfo._id != this.props.currentUser._id ?\n                                                        comment.reported > 0 ?\n                                                        <a className=\"dropdown-item\" onClick={(e) => this.unReport('comment', comment._id, i)}>\n                                                        <i className=\"mr-1 fa fa-undo\"></i>\n                                                        <span className=\"m-1\">Undo-Report</span></a>\n                                                        :\n                                                        <a className=\"dropdown-item\" onClick={() => this.reportModal('comment', comment, i)}>\n                                                        <i className=\"mr-1 fa fa-exclamation-circle\"></i>\n                                                        <span className=\"m-1\">Report</span></a>\n                                                         : null\n                                                    }\n                                                </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {\n                                        comment.replies && comment.replies.map((reply, r) => (\n                                            <ul className=\"media w-100 align-items-center p-2\" key={r}>\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center w-100\">\n                                                        <div className=\"media align-items-center comment-row w-100\">\n                                                            <div className=\"media-left mr-2\">\n                                                                <A href={\"/u/\"+reply.userinfo._id}>\n                                                                    <img className=\"media-object pic replyPic\" src={profilePic(reply.userinfo.avatar)}\n                                                                        alt=\"...\" />\n                                                                </A>\n                                                            </div>\n                                                            <div className=\"media-body\">\n                                                            <A href={\"/u/\"+reply.userinfo._id}><p className=\"media-heading\">{reply.userinfo ? reply.userinfo.name : reply.userinfo.name}</p></A>\n                                                                <p className=\"media-subheading\">{reply.text}</p>\n                                                            </div>\n                                                            <div className=\"media-right h-auto\">\n                                                                <div className=\"list-group-item  p-0 pl-2 pointer  dropdown\"><i className=\"vertical-dot fa fa-ellipsis-h\"></i>\n                                                                    <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n                                                                    {(reply.userinfo._id == this.props.currentUser._id || post.userid == this.props.currentUser._id ) && <a className=\"dropdown-item\" onClick={(e) => this.deleteComment('reply', comment._id, reply._id)}>\n                                                                        <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n                                                                        <span className=\"m-1\">Delete</span></a> }\n                                                                        {\n                                                                            reply.userinfo._id != this.props.currentUser._id ?\n                                                                            reply.reported > 0 ?\n                                                                            <a className=\"dropdown-item\" onClick={(e) => this.unReport('reply', reply._id, r, i)}>\n                                                                            <i className=\"mr-1 fa fa-undo\"></i>\n                                                                            <span className=\"m-1\">Undo-Report</span></a>\n                                                                            :\n                                                                            <a className=\"dropdown-item\" onClick={() => this.reportModal('reply', reply, r, comment, i)}>\n                                                                            <i className=\"mr-1 fa fa-exclamation-circle\"></i>\n                                                                            <span className=\"m-1\">Report</span></a>\n                                                                             : null\n                                                                        }\n                                                                    </div>\n                                                                    </div>\n                                                                </div>\n                                                        </div>\n                                                </li>\n                                            </ul>\n                                        ))}\n\n                                        {comment.showReply && <div className=\"col pl-4 mb-2\">\n                                            <input className=\"form-control tempcommentInput\"\n                                                type=\"text\"\n                                                placeholder=\"Add your comment\"\n                                                name=\"replyCmt\"\n                                                value={replyCmt[i]}\n                                                onChange={(e) => this.handleChange(e, i)} />\n                                            <Button className=\"commentBtn\" onClick={() => this.commentReply(post._id, comment._id, replyCmt[i], i, this.callBackCommentReply)}>REPLY</Button>\n                                        </div>\n                                        }\n                                    </div>\n                                </li>\n                            ))}\n\n                    </ul>\n                </div>\n            </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default BlogPostSingle;\n","import React from 'react';\nimport ContentLoader from \"react-content-loader\";\nimport AuthorBio from '../../components/Blog/AuthorBio';\nimport CategoryArticles from '../../components/Blog/CategoryArticles';\nimport Header from '../../components/Header/index';\nimport BlogPostSingle from '../../components/Post/BlogPostSingle';\nimport { getSinglePost } from '../../http/blog-calls';\nimport { getComments, likeComment, likePost, postComment, replyComment } from '../../http/http-calls';\nrequire (\"./styles.scss\");\n\nclass SingleBlog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global:false,\n      posts: [],\n      page: 1,\n      limit: 5,\n      hasMore: true,\n      postLoaded: false,\n      showSkeleton: false,\n      showComments: false,\n      commentText: ''\n    };\n    this.loadFunc = this.loadFunc.bind(this);\n    this.likePost = this.likePost.bind(this);\n    this.getPost = this.getPost.bind(this);\n  }\n  \ncomponentDidMount() {\n    this.getPost(this.props.match.params.postid);\n    var p = this.props.location.pathname;\n    console.log(`${p} - ${this.props.currentUser}`);\n    if(p.indexOf(\"/blog/\") != -1 && (this.props.currentUser == undefined || this.props.currentUser == null)){\n      this.setState({\n        global:true\n      });\n      console.log(\"done\")\n    }else{\n        this.setState({\n            global:false\n          });\n        console.log(\"notdone\")\n     // this.logout();\n    }\n}\n\ncomponentDidUpdate(prevProps) {\n    try {\n        console.log(prevProps.match.params);\n        if (prevProps.match.params.postid !== this.props.match.params.postid) {\n            this.getPost(this.props.match.params.postid);\n        }\n    } catch (error) {\n        \n    }\n   \n}\n\n\ngetPost = (id) => {\n        getSinglePost({ postid: id, userid: (this.props.currentUser && this.props.currentUser._id ? this.props.currentUser._id : 0)})\n        .then(async resp => {\n            this.setState({\n                posts: resp.post,\n                showSkeleton: false,\n                postLoaded: true\n            });\n        }, error => {\n            this.setState({ showSkeleton: false });\n        });\n}\n\nloadFunc = () => {\n\n    if (!this.state.showSkeleton) {\n        this.setState({ showSkeleton: true })\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                page: prevState.page + 1,\n                showSkeleton: true\n            }\n        }, () => {\n            this.getPaginatePost();\n        })\n    }\n\n}\n\ncommentLike = (commentId) => {\n\n    // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n    likeComment({ commentId }, true)\n        .then(async resp => {\n            if (resp.message == 'Like') {\n                //this.postActivityCount('likesCount');\n            } else if (resp.message == 'Dislike') {\n               // this.postActivityCount('likesCount', 'sub');\n            }\n        }, error => {\n            \n        });\n}\n\ncommentReply = (commentId, comment, commentIndex, callBack) => {\n    replyComment({ commentId, comment }, true)\n        .then(async resp => {\n            callBack(resp.comment, commentIndex)\n        }, error => {\n            \n        });\n}\n\nlikePost = (postId, liked) => {\n    likePost({ postid: postId }, true)\n        .then(async resp => {\n\n        }, error => {\n            \n        });\n}\n\npostCmt = (postid) => {\n\n    let obj = { postid, comment: this.state.commentText };\n    postComment(obj)\n        .then(async resp => {\n\n        }, error => {\n            \n        });\n}\n\nshowComments = (postid) => {\n\n    getComments({ postid }, true)\n        .then(async resp => {\n            this.setState({ showComments: true });\n        }, error => {\n            \n\n        });\n}\n\nhandleChange = (evt, index) => {\n    const { name, value } = evt.target;\n    if (evt.target.name != 'replyCmt') {\n        this.setState({ [name]: value }, () => { });\n    } else {\n        this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n        });\n    }\n}\n\ngetSkeletonContent = () => {\n    return (\n        <div className=\"row empty-inner-container-with-border post\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <ul className=\"list-group w-100 m-0\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                            <ContentLoader\n                                speed={2}\n                                width={610}\n                                height={350}\n                                viewBox=\"0 0 610 350\"\n                                backgroundColor=\"#f3f3f3\"\n                                foregroundColor=\"#ecebeb\"\n                                {...this.props}\n                            >\n                                <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n                                <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                                <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n                                <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                                <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n                                <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                                <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"900\" height=\"1000\" />\n                            </ContentLoader>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n    render() {\n        const { posts, showComments, commentText } = this.state;\n        return (\n            // <!-- Wall container -->\n            <div className=\"singleBlogPage\">\n              <Header appName={this.props.appName}   currentUser={this.props.currentUser}   />\n            <div className=\"container my-wall-container \">\n              <div className=\"row mt-2\">\n\n                {/* <!-- left column --> */}\n                <div className=\"col-sm empty-container-with-out-border left-column\">\n                  \n                </div>\n                {/* <!-- end left column --> */}\n\n                {/* <!-- center column --> */}\n                <div className=\"col-sm empty-container-with-out-border center-column mx-auto p-0\">\n                    {!this.postLoaded && posts.length > 0 ?\n                    <React.Fragment>\n                        <BlogPostSingle path={this.props.location.pathname} post={posts[0]} commentLike={this.commentLike} global={this.state.global} commentReply={this.commentReply} key={0} currentUser={this.props.currentUser} single={true} />\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                            <CategoryArticles category={posts[0].category} />\n                            </div>\n                            <div className=\"col-md-6\">\n                            <AuthorBio {...this.props} authorid={posts[0].userid}  />\n                            </div>\n                        </div>\n                    </React.Fragment>\n                        \n                        : null\n                    }\n                                 {(this.state.showSkeleton && !this.state.postLoaded) &&\n                      <div>\n                          {Array(5).fill().map((item, index) => this.getSkeletonContent())}\n                      </div>\n                  }\n                </div> \n                \n                {\n                     posts[0] != undefined && <div className=\"col-sm empty-container-with-out-border right-column\">\n                   \n                  </div>\n                }\n                \n              </div>\n            </div>\n\n        \n\n            </div>\n\n      )\n    }\n}\n\nexport default SingleBlog;","import config from \"../config/index\";\nimport {\n    makeAxiosGetRequest,\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n\n/**\n * createPost\n * @param {object} data\n */\n\nexport const getBlogCategories = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-categories`, true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const createBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"create-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const updateBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"update-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n/**\n * register\n * @param {object} data email and password\n */\nexport const getPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-posts\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getGlobalPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-global-blogs\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getFilteredBlogPosts = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-filtered-blog-posts\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postRemove = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"remove-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getComments = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-comments`, auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\n\nexport const getSinglePost = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getPopularBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-popular-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getCategoryBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-category-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getAuthorBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-author-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const getSuggestedBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-suggested-blogs\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const clap = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"blog-clap\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const sendTips = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"send-tips\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const purchaseBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"purchase-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const checkPurchasedBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"check-purchased-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likePost = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + \"like-blog\", auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const postComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + 'comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likeComment = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'like-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const replyComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'reply-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getBlogDraft = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-draft\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const postSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postUnSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"un-save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\nexport const getBlogStats = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"blog-stats\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};","import React from 'react';\nimport { sharePost } from '../../http/http-calls';\nimport { switchLoader, alertBox } from '../../commonRedux/';\nimport { GetAssetImage } from '../../globalFunctions';\nimport config from '../../config/index';\n\nconst Share = props => {\n    const [post, setPost] = React.useState(props.post);\n    const [shareType, setShareType] = React.useState('post');\n    const [inputText, setInputText] = React.useState(\"\");\n\n    const sharePostFn = () => {\n        switchLoader(true, 'Please wait. Your post sharing...!')\n        sharePost({ postid: post._id, text: inputText, type: props.type }, true)\n        .then(async resp => {\n            props.shareSuccess();\n            props.closeShareModal();\n            switchLoader();\n        }, error => {\n            \n            props.closeShareModal();\n            switchLoader();\n        });\n    }\n    const onChangeHandler = event => {\n        setInputText(event.target.value);\n    }\n    return (\n        <div className=\"social-wall-share-popup \">\n            <div className=\"modal-content share-popup--content\">\n                <div className=\"modal-header d-flex align-items-center\">\n                    <h5 className=\"modal-title\">Share</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.closeShareModal}>\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                \n                <div className=\"modal-body\">\n                    <div className=\"shareIcons text-center mb-2\">\n                        {\n                            props.type == 'blog' ?\n                            <React.Fragment>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\"+encodeURI(config.frontEnd+\"blog/\"+post._id)}><img src={GetAssetImage(\"facebook.png\")} /></a>\n                                <a target=\"_blank\" href={\"http://twitter.com/share?url=\"+encodeURI(config.frontEnd+\"blog/\"+post._id)}><img src={GetAssetImage(\"twitter.png\")} /></a>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\"+encodeURI(config.frontEnd+\"post/\"+post._id)}><img src={GetAssetImage(\"facebook.png\")} /></a>\n                                <a target=\"_blank\" href={\"http://twitter.com/share?url=\"+encodeURI(config.frontEnd+\"post/\"+post._id)}><img src={GetAssetImage(\"twitter.png\")} /></a>\n                            </React.Fragment>\n                        }\n                    \n                    </div>\n                    <div className=\"mb-2 text-center\">-OR-</div>\n                    <ul className=\"p-0 m-0 w-100\">\n                        <li className=\"list-group-item p-0 pt-1\">\n                            <select className=\"form-control custom-select\" id=\"\" defaultValue={'DEFAULT'} >\n                                <option disabled value=\"DEFAULT\"> Share on my wall</option>\n                            </select>\n                        </li>\n                        <li className=\"list-group-item p-0 pt-2\">\n                            <textarea name=\"inputText\" id=\"\" cols=\"30\" rows=\"4\" placeholder=\"Message\" value={inputText} onChange={onChangeHandler}></textarea>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"modal-footer d-flex align-items-center pt-1\">\n                    <button type=\"button\" className=\"btn btn-secondary cancel-btn\" data-dismiss=\"modal\" onClick={props.closeShareModal}>Cancel</button>\n                    <button type=\"button\" className=\"btn btn-primary yes-btn\" onClick={sharePostFn}>Send</button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\nexport default Share;"],"sourceRoot":""}