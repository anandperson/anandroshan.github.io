{"version":3,"sources":["components/Post/Share.js","components/Cards/LeftThumbCard.js","components/Post/EditPost.js","components/Cards/SharedPostCard.js","components/Post/Post.js"],"names":["Share","props","React","useState","post","inputText","setInputText","className","type","data-dismiss","aria-label","onClick","closeShareModal","aria-hidden","Fragment","target","href","encodeURI","config","frontEnd","_id","src","GetAssetImage","id","defaultValue","disabled","value","name","cols","rows","placeholder","onChange","event","switchLoader","sharePost","postid","text","then","resp","a","shareSuccess","error","LeftThumbCard","setPost","useEffect","key","k","style","backgroundImage","thumb","url","history","push","status","undefined","currentUser","shared","authorid","to","slug","require","sharedBy","userid","e","removePost","reported","unReport","report","saved","unSave","save","title","description","replace","toString","likes","shares","comments","tips","toFixed","category","EditPost","enableUpload","acceptExt","accept","join","setState","postAccept","postFileInput","current","click","changeTwitter","twitter","state","changeVisibility","visibility","removeURL","clearCreatPostInputs","profileImg","postImgs","displaySelectedItem","switchLoader2","txt","loadTxt","formData","FormData","append","contents","text2","JSON","stringify","tags","updatePost","success","extractUrl","regex","RegExp","match","htmlToText","html","temp","document","createElement","innerHTML","textContent","handleChange","evt","length","toggleTag","toggleTagInput","getTagUsers","suggestions","createRef","reactTags","contentEditable","twitterID","handleChangeImage","bind","onDelete","this","sharedText","taggedPeople","privacy","twitterPost","getExt","content_url","split","pop","image","indexOf","video","file","files","URL","createObjectURL","i","slice","splice","tag","concat","map","index","ref","placeholderText","autoresize","onAddition","width","color","Component","SharedPostCard","userinfo","pic","A","profilePic","avatar","date","createdAt","subject","Truncate","lines","ellipsis","Post","componentDidMount","console","log","single","settings","followings","showComments","processText","images","content","sharedContent","postActivityCount","activityType","action","postObj","commentActivityCount","commentId","comment","editPost","modal","reportModal","data","key2","lastType","lastData","lastKey","lastComment","lastKey2","commentLike","likeComment","message","deleteComment","removeComment","showCommentReplies","alertBox","commentReply","commentIndex","callBack","replyComment","savePost","postSave","unsavePost","postUnSave","p","t","c","link","postReport","reason","replies","postUnReport","hidePost","postHide","hidden","unhidePost","postUnHide","last","open","removePostConfirm","postRemove","removed","highlightPost","postHighlight","highlighted","unHighlight","postUnHighlight","likePostFn","postId","liked","likeActive","likePost","shareModel","currPost","handleOnReady","setTimeout","playing","handleClose","postCmt","commentText","obj","postComment","unshift","getComments","replyCmt","showCommentReply","findIndex","el","tempPostData","showReply","getReplyComments","callBackCommentReply","replyData","tempReplyCmt","getPostContent","filter","Dialog","onClose","Button","variant","alt","sharedPost","dangerouslySetInnerHTML","__html","contenttype","isOpen","controls","tagPeople","j","getSharedContent","sharedType","sharedDataBlog","sharedDataPost","sharedContents","sharedUserInfo","likesCount","cmtsCount","allowSharing","shareCount","repliesCount","reply","r","enableZoom","mainSrc","onCloseRequest","onAfterOpen","querySelector","photoIndex","Spinner","follow","displayModal","closeModal","size"],"mappings":"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","file":"static/js/6.1f9c9214.chunk.js","sourcesContent":["import React from 'react';\nimport { sharePost } from '../../http/http-calls';\nimport { switchLoader, alertBox } from '../../commonRedux/';\nimport { GetAssetImage } from '../../globalFunctions';\nimport config from '../../config/index';\n\nconst Share = props => {\n    const [post, setPost] = React.useState(props.post);\n    const [shareType, setShareType] = React.useState('post');\n    const [inputText, setInputText] = React.useState(\"\");\n\n    const sharePostFn = () => {\n        switchLoader(true, 'Please wait. Your post sharing...!')\n        sharePost({ postid: post._id, text: inputText, type: props.type }, true)\n        .then(async resp => {\n            props.shareSuccess();\n            props.closeShareModal();\n            switchLoader();\n        }, error => {\n            \n            props.closeShareModal();\n            switchLoader();\n        });\n    }\n    const onChangeHandler = event => {\n        setInputText(event.target.value);\n    }\n    return (\n        <div className=\"social-wall-share-popup \">\n            <div className=\"modal-content share-popup--content\">\n                <div className=\"modal-header d-flex align-items-center\">\n                    <h5 className=\"modal-title\">Share</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.closeShareModal}>\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                \n                <div className=\"modal-body\">\n                    <div className=\"shareIcons text-center mb-2\">\n                        {\n                            props.type == 'blog' ?\n                            <React.Fragment>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\"+encodeURI(config.frontEnd+\"blog/\"+post._id)}><img src={GetAssetImage(\"facebook.png\")} /></a>\n                                <a target=\"_blank\" href={\"http://twitter.com/share?url=\"+encodeURI(config.frontEnd+\"blog/\"+post._id)}><img src={GetAssetImage(\"twitter.png\")} /></a>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\"+encodeURI(config.frontEnd+\"post/\"+post._id)}><img src={GetAssetImage(\"facebook.png\")} /></a>\n                                <a target=\"_blank\" href={\"http://twitter.com/share?url=\"+encodeURI(config.frontEnd+\"post/\"+post._id)}><img src={GetAssetImage(\"twitter.png\")} /></a>\n                            </React.Fragment>\n                        }\n                    \n                    </div>\n                    <div className=\"mb-2 text-center\">-OR-</div>\n                    <ul className=\"p-0 m-0 w-100\">\n                        <li className=\"list-group-item p-0 pt-1\">\n                            <select className=\"form-control custom-select\" id=\"\" defaultValue={'DEFAULT'} >\n                                <option disabled value=\"DEFAULT\"> Share on my wall</option>\n                            </select>\n                        </li>\n                        <li className=\"list-group-item p-0 pt-2\">\n                            <textarea name=\"inputText\" id=\"\" cols=\"30\" rows=\"4\" placeholder=\"Message\" value={inputText} onChange={onChangeHandler}></textarea>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"modal-footer d-flex align-items-center pt-1\">\n                    <button type=\"button\" className=\"btn btn-secondary cancel-btn\" data-dismiss=\"modal\" onClick={props.closeShareModal}>Cancel</button>\n                    <button type=\"button\" className=\"btn btn-primary yes-btn\" onClick={sharePostFn}>Send</button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\nexport default Share;","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport A from '../A';\nimport Truncate from 'react-truncate';\nimport {history} from '../../store';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\n\n  \nconst LeftThumbCard = props => {\n  const [post, setPost] = useState(props.post);\n  const goTo = (url) => {\n    history.push(url);\n  };\n  useEffect(()=>{\n    setPost(props.post);\n  }, [props.post]);\n  \n  return (\n   <div className=\"card leftThumbCard\" key={props.k}>\n    <div className=\"card-thumb pointer\" style={{backgroundImage: \"url(\" + props.thumb + \")\"}} onClick={() => goTo(props.url)}>\n    {post.status == 'draft' && <small className=\"badge badge-secondary draft-label ml-2 mt-1\">Draft</small> } \n    </div>\n    <div className=\"card-body\">\n      {\n        props.currentUser != undefined && props.shared == undefined && props.authorid == props.currentUser._id ? <span className=\"list-group-item  p-1 pr-2 pointer  dropdown pull-right\">\n        <i className=\"fa fa-ellipsis-h\"></i>\n    <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n    <Link to={\"/edit-blog/\"+post.slug} className=\"dropdown-item\">\n            <img className=\"mr-1\" src={require(\"../../assets/images/edit-icon.png\")} />\n            <span className=\"m-1\">Edit</span></Link> \n        \n        {props.currentUser != undefined && post.sharedBy == props.currentUser._id || post.userid == props.currentUser._id && <a className=\"dropdown-item\"  onClick={(e) => props.removePost(post._id)}>\n            <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n            <span className=\"m-1\">Remove</span></a>}\n    </div>\n    </span>\n    :\n    <span className=\"list-group-item  p-1 pr-2 pointer  dropdown pull-right\">\n        <i className=\"fa fa-ellipsis-h\"></i>\n\n      <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n        {\n          props.reported ?\n            <a onClick={()=>props.unReport()} className=\"dropdown-item\">\n            <i className=\"fa fa-undo\"></i>\n                <span className=\"m-1\">Undo Report</span></a> \n          :\n            <a onClick={()=>props.report()} className=\"dropdown-item\">\n            <i className=\"fa fa-exclamation-circle\"></i>\n                <span className=\"m-1\">Report</span></a> \n        }\n             {\n          props.saved  ?\n            <a onClick={()=>props.unSave()} className=\"dropdown-item\">\n            <i className=\"fa fa-undo\"></i>\n                <span className=\"m-1\">Remove from Wishlist</span></a> \n          :\n            <a onClick={()=>props.save()} className=\"dropdown-item\">\n            <i className=\"fa fa-plus\"></i>\n                <span className=\"m-1\">Add to Wishlist</span></a> \n        }\n        \n        </div>\n    </span>\n      }\n   \n      <A href={props.url}><h3 className=\"card-title\">{props.title} </h3> </A>\n      \n      {/* <p className=\"card-description\">{props.description}</p> */}\n      {/* <Truncate lines={2} className=\"card-description\" ellipsis={<span>... </span>}>\n        \n      </Truncate> */}\n      <div>\n      <div className=\"card-description\">\n        {props.description != undefined && props.description.replace(/<\\/?[^>]+(>|$)/g, \"\").toString()}\n      </div>\n      <div><a href={props.url} className=\"readmore\">Read more</a></div>\n      </div>\n      \n      {\n        props.shared == undefined && <div className=\"card-stats\">\n        <div><strong>{props.likes}</strong> <i className=\"fa fa-hand-paper-o\"></i></div>\n        <div><strong>{props.shares}</strong> <i className=\"fa fa-share-alt\"></i></div>\n        <div><strong>{props.comments}</strong> <i className=\"fa fa-comment-o\"></i></div>\n        <div><strong>${props.tips.toFixed(2)}</strong> <i>Tips</i></div>\n        <div className=\"card-sub-title\">{props.category}</div>\n      </div>\n      }\n      \n    </div> \n   </div>\n  );\n\n};\n\nexport default LeftThumbCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createPost, getCSRF, getTagUsers } from '../../http/http-calls';\nimport { updatePost} from '../../http/post-calls';\nimport { twitterTweet} from '../../http/twitter-calls';\nimport { image, video, file } from '../../config/constants';\nimport ReactTags from 'react-tag-autocomplete';\nimport {switchLoader,alertBox} from '../../commonRedux/';\nimport ContentEditable from 'react-contenteditable';\n// import { ReactTinyLink } from 'react-tiny-link'\nimport Loader from 'react-spinners/BarLoader';\nimport config from '../../config';\n\n\nclass EditPost extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.postFileInput = React.createRef();\n\t\tthis.reactTags = React.createRef()\n\t\tthis.contentEditable = React.createRef();\n\t\tthis.state = {html: \"<b>Hello <i>World</i></b>\"};\n\t\tthis.state = {\n\t\t\ttwitterID: 0,\n\t\t\ttwitter: false,\n\t\t\ttext: '',\n\t\t\ttext2: '',\n\t\t\tloadTxt: '',\n\t\t\turl: '',\n\t\t\tprofileImg: '',\n\t\t\tpostImgs: [],\n\t\t\tpostAccept: '',\n\t\t\tvisibility: 'public',\n\t\t\ttags: [],\n\t\t\ttoggleTagInput: false,\n\t\t\tsuggestions: [],\n\t\t\tcontents:[],\n\t\t\tdisplaySelectedItem:[]\n\t\t}\n\t\t\n\t\tthis.handleChangeImage = this.handleChangeImage.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.extractUrl = this.extractUrl.bind(this);\n\t\tthis.onDelete = this.onDelete.bind(this);\n\t\tthis.removeURL = this.removeURL.bind(this);\n\t\n\t}\n\n\tcomponentDidMount() {\n\n\t\t// getCSRF()\n\t\t// \t.then(async resp => {\n\t\t// \t\tlocalStorage.setItem('csrf', resp._csrf);\n\t\t// \t}, error => {\n\t\t// \t\t\n        // \t});\n\t\tvar post = this.props.post;\n\t\tif(!post.sharedBy){\n        this.setState({\n\t\t\ttext: post.text,\n            tags: post.taggedPeople,\n            visibility: post.privacy,\n            twitterPost: post.twitterPost,\n\t\t\turl: post.url,\n\t\t\tcontents: post.contents\n\t\t});\n\t\tvar displaySelectedItem = [];\n\t\tif(post.contents.length > 0){\n\t\t\tlet getExt = (post.contents[0].content_url.split('.')).pop();\n\t\t\tif(image.indexOf('.'+getExt) !== -1){\n\t\t\t\tlet imgTag = () => (<img className=\"displayPostImg\" src={post.contents[0].content_url} />);\n\t\t\t\tdisplaySelectedItem.push(imgTag());\n\t\t\t}else if(video.indexOf('.'+getExt) !== -1){\n\t\t\t\tdisplaySelectedItem.push(\"1 Video Selected\");\n\t\t\t}else if(file.indexOf('.'+getExt) !== -1){\n\t\t\t\tdisplaySelectedItem.push(\"1 File Selected\");\n\t\t\t}\n\t\t\tthis.setState({displaySelectedItem:displaySelectedItem});\n\t\t}\n\t\tthis.setState({twitterID: this.props.currentUser.twitterID});\n\t}else{\n\t\tthis.setState({\n\t\t\ttext: post.sharedText,\n\t\t\ttext2: post.text\n\t\t});\n\t}\n\t\t\n\t}\n\n\tenableUpload = (acceptExt) => {\n\t\tlet accept = acceptExt.join(',');\n\t\tthis.setState({ postAccept: accept }, () => {\n\t\t\tthis.postFileInput.current.click();\n\t\t});\n\t}\n\n\tchangeTwitter = () => {\n\t\tthis.setState({\n\t\t\ttwitter: !this.state.twitter\n\t\t})\n\t}\n\tchangeVisibility = () => {\n\t\tthis.setState({\n\t\t\tvisibility: this.state.visibility === 'public' ? 'onlyme' : 'public'\n\t\t})\n\t}\n\tremoveURL = () => {\n\t\tthis.setState({\n\t\t\turl: ''\n\t\t})\n\t}\n\tclearCreatPostInputs = () => {\n\t\tthis.setState({\n\t\t\ttext: '',\n\t\t\turl: '',\n\t\t\tprofileImg: '',\n\t\t\tpostImgs: [],\n\t\t\tpostAccept: '',\n\t\t\tdisplaySelectedItem:[],\n\t\t\tvisibility: 'public',\n\t\t})\n\t}\n\tswitchLoader2 = (txt = '') => {\n\t\tthis.setState({\n\t\t\tloadTxt : txt\n\t\t})\n\t}\n\tpost = () => {\n\t\tconst formData = new FormData()\n\t\tvar text = this.state.text;\n\t\ttext = text.replace(\"&nbsp;\", \"\");\n\t\tformData.append('id', this.props.post._id);\n\t\tformData.append('postImgs', this.state.postImgs);\n\t\tformData.append('postImgs2', this.state.contents);\n\t\tif(!this.props.post.sharedBy){\n\t\t\tformData.append('text', text);\n\t\t}else{\n\t\t\tformData.append('sharedText', text);\n\t\t\tformData.append('text', this.state.text2);\n\t\t}\n\t\t\n\t\tformData.append('subject', 'Eclipton');\n\t\tformData.append('taggPeople', JSON.stringify(this.state.tags));\n\t\tformData.append('privacy', this.state.visibility);\n\t\tformData.append('twitterPost', this.state.twitter);\n\t\tformData.append('url', this.state.url);\n\t\t this.switchLoader2('Your post is being updated...')\n\t\tupdatePost(formData)\n\t\t\t.then(async resp => {\n\t\t\t\tif(resp.success){\n\t\t\t\t\tthis.props.updatePost(resp.post);\n\t\t\t\t\t// if(this.state.twitter){\n\t\t\t\t\t// \ttwitterTweet({text: this.state.text}).then(async resp => {\n\t\t\t\t\t// \t\tthis.clearCreatPostInputs();\n\t\t\t\t\t// \t\tthis.setState({\n\t\t\t\t\t// \t\t\ttweet: false\n\t\t\t\t\t// \t\t});\n\t\t\t\t\t// \t});\n\t\t\t\t\t// }else{\n\t\t\t\t\t\t// this.clearCreatPostInputs();\n\t\t\t\t\t//}\n\t\t\t\t}\n\t\t\t\tthis.switchLoader2();\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\tthis.switchLoader2()\n\t\t\t});\n\t}\n\n\thandleChangeImage(e) {\n\t\tthis.setState({ postImgs: e.target.files[0] },() => {\n\t\t\tlet getExt = (this.state.postImgs.name.split('.')).pop();\n\t\t\tvar displaySelectedItem = [];\n\t\t\tif(image.indexOf('.'+getExt) !== -1){\n\t\t\t\tlet imgTag = () => (<img className=\"displayPostImg\" src={URL.createObjectURL(this.state.postImgs)} />);\n\t\t\t\tdisplaySelectedItem.push(imgTag());\n\t\t\t}else if(video.indexOf('.'+getExt) !== -1){\n\t\t\t\tdisplaySelectedItem.push(\"1 Video Selected\");\n\t\t\t}else if(file.indexOf('.'+getExt) !== -1){\n\t\t\t\tdisplaySelectedItem.push(\"1 File Selected\");\n\t\t\t}\n\t\t\tthis.setState({displaySelectedItem:displaySelectedItem});\n\t\t})\n\t}\n\n\t// handleChange = (evt) => {\n\t// \tconst { name, value } = evt.target;\n\t// \tthis.setState({ [name]: value }, () => {\n\t// \t});\n\t// }\n\textractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\n\t\treturn text.match(regex)\n\t}\n\thtmlToText = (html) => {\n\t\tvar temp = document.createElement('div');\n\t\ttemp.innerHTML = html;\n\t\treturn temp.textContent; // Or return temp.innerText if you need to return only visible text. It's slower.\n\t};\n\n\thandleChange = evt => {\n\t\tvar txt  = this.htmlToText(evt.target.value);\n\t\tthis.setState({text: txt}, () => {\n\t\t\tvar temp = this.extractUrl(this.state.text);\n\t\t\t\n\t\t\tif(temp != null && temp.length > 0 && this.url != temp[0]){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\turl: temp[0]\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\tonDelete(i) {\n\t\tconst tags = this.state.tags.slice(0)\n\t\ttags.splice(i, 1)\n\t\tthis.setState({ tags })\n\t}\n\tonAddition(tag) {\n\t\tconst tags = [].concat(this.state.tags, tag)\n\t\tthis.setState({ tags })\n\t}\n\n\ttoggleTag = () => {\n\t\tif(!this.state.toggleTagInput){\n\t\t\tgetTagUsers({key: ''}, true)\n\t\t\t.then(async resp => {\n\t\t\t\tthis.setState({ suggestions: resp }, () => {\n\t\t\t\t});\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t\tthis.setState({ toggleTagInput: !this.state.toggleTagInput });\n\t}\n\t\n\trender() {\n\t\tconst { postAccept, visibility, tags, toggleTagInput,displaySelectedItem, twitter } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"empty-inner-container-with-border create-post\" >\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<ul className=\"list-group w-100 m-0\">\n\n\t\t\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\t<div className=\"clearfix content-heading w-100\">\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">Edit post</p>\n\t\t\t\t\t\t\t\t\t{/* <span className=\"overlay pull-left\"><img className=\"\"\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../../assets/images/create-plus-icon.png\")} /></span> */}\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control pull-left border-0 p-1\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Create\"\n\t\t\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t{this.state.url != '' &&\n                                      <li className=\"mt-2  d-flex align-items-start justify-content-center\">  <i onClick={this.removeURL} className=\"fa fa-times removeIcon\"></i>\n                                      {/* { this.state.url != \"\" && <ReactTinyLink\n  cardSize=\"small\"\n  showGraphic={true}\n  maxLine={2}\n  minLine={1}\n  url={this.state.url}\n/>} */}\n</li>\n                                }\n\t\t\t\t\t\t\t{(displaySelectedItem && displaySelectedItem.length > 0 ) &&\n\t\t\t\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix content-heading w-100 pl-2 position-relative\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-times pointer removeImage\" onClick={() => this.setState({displaySelectedItem:[], contents: []})}></i>\n\t\t\t\t\t\t\t\t\t\t{displaySelectedItem[0]}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{(tags.length > 0) &&\n\t\t\t\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix content-heading w-100 tagedPeople\">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t{tags.map((value, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <li onClick={() => this.onDelete(index)} className=\"btn-light\" key={index}>{value.name} <span>X</span> </li>\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center create-post-attachments p-1\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"create-post-customize\">\n\t\t\t\t\t\t\t\t<div className='hide'>\n\t\t\t\t\t\t\t\t\t\t\t<input type='file' name=\"file\" accept={postAccept} onChange={this.handleChangeImage} ref={this.postFileInput} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<ul className=\"list-group list-group-horizontal remove-border m-0\">\n\t\t\t\t\t\t\t\t\t<li className={\"list-group-item p-2\"}>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-light btn-sm tag\" onClick={(e) => this.enableUpload(image)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img className='m-0' src={require(\"../../assets/images/icons/photo.svg\")} />\n                      \t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<li className={\"list-group-item p-2\"+(!toggleTagInput && ' mr-auto')}>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-light btn-sm tag\" onClick={() => this.toggleTag()}>\n\t\t\t\t\t\t\t\t\t\t\t\tTag Connection\n                      \t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t{toggleTagInput &&\n\t\t\t\t\t\t\t\t\t\t\t<li className=\"mr-auto list-group-item p-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ReactTags\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={this.reactTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText=\"Add Tags\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuggestions={this.state.suggestions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoresize={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonAddition={this.onAddition.bind(this)} />\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.twitterID != null && this.state.twitterID > 0 && <li className=\"list-group-item p-2\">\n\t\t\t\t\t\t\t\t\t\t\t<img className=\"pointer smallIcon\" onClick={this.changeTwitter} src={require(\"../../assets/images/\" + (twitter ? \"twitter-filled.svg\" : \"twitter-outline.svg\"))} />\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"m-1\"></span>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item p-2\">\n\t\t\t\t\t\t\t\t\t\t\t<img className=\"pointer smallIcon\" onClick={this.changeVisibility} src={require(\"../../assets/images/\" + (visibility == 'public' ? \"create-visibility-icon\" : \"hide-visibility-icon@2x\") + \".png\")} />\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"m-1\">Visibility</span>\n\t\t\t\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item p-2 \">\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-light btn-sm theme-btn\" onClick={this.post}>\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate\n                      \t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.loadTxt != '' && <div className=\"d-block w-100\"><small className=\"text-center d-block text-danger\">{this.state.loadTxt}</small><Loader width=\"100%\" color=\"#5931ea\"  /></div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div >\n\t\t);\n\t}\n}\n\nexport default EditPost;\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport A from '../A';\nimport TimeAgo from 'react-timeago';\nimport Truncate from 'react-truncate';\nimport {history} from '../../store';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\nimport { pic, profilePic } from '../../globalFunctions';\n\n  \nconst SharedPostCard = props => {\n  const goTo = (url) => {\n    history.push(url);\n  };\n  const [post, setPost] = useState(props.post);\n  const [contents, setContents] = useState(props.contents);\n  const [userinfo, setUserinfo] = useState(props.userinfo);\n  const [type, setType] = useState(props.type);\n  return (\n   <div className=\"card leftThumbCard\" key={props.k}>\n    {contents[0] == undefined ? null : <div className=\"card-thumb pointer\" style={{backgroundImage: \"url(\" + pic(contents[0].content_url) + \")\"}} onClick={() => goTo(props.url)}>\n    </div> }\n    <div className=\"card-body\">\n        <div className=\"d-flex align-items-center justify-content-between mb-2\">\n            <A href={\"/u/\"+post.userid} className=\"highlight-userinfo\">\n            <div className=\"highlight-profile-pic\" style={{backgroundImage: `url(${ profilePic(userinfo == undefined ? '' : userinfo.avatar)})`}}></div>\n            <div>{userinfo == undefined ? 'Unkown' : userinfo.name}</div>\n            </A>\n            <p className=\"media-subheading\"><TimeAgo date={post.createdAt} /></p>\n        </div>\n    \n      {type == 'blog' && <A href={props.url}><h3 className=\"card-title mb-1\">{post.subject}</h3></A> } \n      <div className=\"card-sub-title mb-1\">{post.category}</div>\n      {/* <p className=\"card-description\">{props.description}</p> */}\n      <Truncate lines={2} className=\"card-description\" ellipsis={<span>... <a href={props.url}>Read more</a></span>}>\n        {post.text != undefined && post.text.replace(/<\\/?[^>]+(>|$)/g, \"\")}\n      </Truncate>\n\n      <div><strong>{post.tags}</strong></div>      \n    </div> \n   </div>\n  );\n\n};\n\nexport default SharedPostCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../../components/Button';\nimport Modal from '../../components/Popup';\nimport TimeAgo from 'react-timeago';\nimport ReactPlayer from 'react-player';\nimport { postReport, postUnReport,  likePost, postComment, getComments,likeComment, replyComment, getReplyComments, removeComment } from '../../http/http-calls';\nimport { postSave, postUnSave, postHide, postUnHide, postHighlight, postUnHighlight, postRemove} from '../../http/post-calls';\nimport update from 'react-addons-update';\nimport ContentLoader from \"react-content-loader\";\nimport Share from './Share';\nimport LeftThumbCard from '../Cards/LeftThumbCard';\nimport { switchLoader, alertBox, modal } from '../../commonRedux/';\nimport A from '../A';\nimport {GetAssetImage, profilePic} from '../../globalFunctions';\nimport Dialog from '@material-ui/core/Dialog';\n// import { ReactTinyLink } from 'react-tiny-link'\nimport config from \"../../config/index\";\nimport EditPost from './EditPost';\nimport Spinner from '../Spinner';\nimport SharedPostCard from '../Cards/SharedPostCard';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; \nrequire(\"./styles.css\");\n\nconst reactStringReplace = require('react-string-replace');\n\nclass Post extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            images:[],\n            photoIndex: 0,\n      isOpen: false,\n            open:false,\n            last:null,\n            content: '',    \n            reason: \"\",\n            category: \"\",\n            sharedContent: '',\n            url: props.post.url,\n            post: null,\n            key: props.post._id,\n            shareModel: false,\n            currPost: {},\n            playing: false,\n            reportModal:false,\n            modal: false,\n            showComments: false,\n            commentText: '',\n            replyCmt: []\n        }\n        // this.likePostFn = this.likePostFn.bind(this);\n        this.sharePost = this.sharePost.bind(this);\n        this.closeShareModal = this.closeShareModal.bind(this);\n        this.postActivityCount = this.postActivityCount.bind(this);\n    }\n\n    extractUrl = (text) => {\n\t\tvar expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gi;\n\t\tvar regex = new RegExp(expression);\n\t\treturn text.match(regex)\n    }\n    \n    \n\n    componentDidMount = () => {\n        console.log(\"mounted\");\n        this.setState({\n            post: this.props.post\n        }, () => {\n            var post = this.state.post;\n            if(this.props.single && ((post.userid == this.props.currentUser._id) || (post.settings[0] != undefined && (post.settings[0].comments == \"Everyone\" || (post.settings[0].comments == \"Friends\" && post.followings.length > 0))))){\n                this.showComments(this.state.post._id);\n            }\n            this.processText();\n        });\n        try {\n            var i = this.props.post.contents[0].content_url;\n            this.setState({\n                images: [i]\n            })    \n        } catch (error) {\n            \n        }\n        \n    };\n\n    processText = () => {\n        if(this.state.post.text != undefined && this.state.post.text != null && this.state.post.text != ''){\n            var text = this.state.post.text;\n            text = text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n            text = text.replace(/#[a-z]+/g, \"<a target=\\\"_blank\\\" href=\\\"/search?filter=posts&q=$&\\\">$&</a>\");\n            this.setState({\n                content: text\n            });\n        }\n        if(this.state.post.sharedText != undefined && this.state.post.sharedText != null && this.state.post.sharedText != ''){\n            var text = this.state.post.sharedText;\n            text = text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n            text = text.replace(/#[a-z]+/g, \"<a target=\\\"_blank\\\" href=\\\"/search?filter=posts&q=$&\\\">$&</a>\");\n            this.setState({\n                sharedContent: text\n            });\n        }\n    }\n\n    // componentDidUpdate = (prev) => {\n    //     console.log(this.state.post.text);\n        \n    // }\n\n    postActivityCount = (activityType, action = 'add') => {\n        const postObj = this.state.post;\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        this.setState({ post: postObj });\n    };\n\n    commentActivityCount = (commentId, activityType, action = 'add') => {\n        const post = this.state.post;\n        const postObj = post.comment[commentId];\n        if (!postObj[activityType]) {\n            postObj[activityType] = 0;\n        }\n        if (action == 'sub') {\n            postObj[activityType] = postObj[activityType] - +1;\n        } else {\n            postObj[activityType] = postObj[activityType] + +1;\n        }\n        post.comment[commentId] = postObj;\n        this.setState({ post: post });\n    };\n\n    editPost = (post) => {\n        this.setState({modal: !this.state.modal}) // true/false toggle\n    };\n\n    reportModal = (type = null, data = null, key = null, comment = null, key2 = null ) => {\n        console.log(type, data, key, comment, key2)\n        if(type != null){\n            this.setState({\n                lastType: type,\n                lastData: data,\n                lastKey : key,\n                lastComment: comment,\n                lastKey2: key2\n            })\n        }\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n    \n    commentLike = (key, postid, commentId) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likeComment({ postid, commentId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                  this.commentActivityCount(key, 'likesCount');\n                } else if (resp.message == 'Dislike') {\n                this.commentActivityCount(key, 'likesCount', 'sub');\n                }\n            }, error => {\n                \n            });\n    }\n\n    deleteComment = (type, postid, id) => {\n        // this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        console.log(type, postid, id)\n        removeComment({ id }, true)\n            .then(async resp => {\n                if(type == 'comment'){\n                    this.showComments(postid);\n                    this.postActivityCount('cmtsCount', \"sub\");\n                }else{\n                    console.log(\"done\");\n                    this.showCommentReplies(postid);\n                }\n            }, error => {\n                alertBox(true, error.data.message)\n            });\n    }\n\n    commentReply = (postid, commentId, comment, commentIndex, callBack) => {\n        if(comment != '' && comment != null){\n        replyComment({ postid: postid, commentId, comment }, true)\n            .then(async resp => {\n                callBack(resp.comment, commentIndex)\n            }, error => {\n                \n        });\n    }\n    }\n    savePost = (id) => {\n        //modal(true, \"sdf\");\n        postSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, saved: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unsavePost = (id) => {\n        postUnSave({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, saved: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    report = () => {\n        if(this.state.category == \"\"){\n            alertBox(true, \"You need to select a category\");\n        }else{\n        var p = this.state.lastData;\n        var t = this.state.lastType;\n        var key = this.state.lastKey;\n        var c = this.state.lastComment;\n        var key2 = this.state.lastKey2;\n        console.log(p, t, key, c, key2);\n        var link = '';\n        if(t == 'comment'){\n            link = p.text;\n        }\n        else if(t == 'reply'){\n            link = p.text;\n        }else{\n            link = \"post/\"+p._id;\n        }\n            postReport({ id: p._id, type: t, link, category: this.state.category, reason: this.state.reason })\n            .then(async resp => {\n                alertBox(true, resp.message, 'success');\n                if(t == 'comment'){\n                    var temp = this.state.post;\n                    temp.comment[key]['reported'] = 1;\n                    this.setState({ post: temp, reportModal:false });\n                }\n                else if(t == 'reply'){\n                    var temp = this.state.post;\n                    temp.comment[key2].replies[key]['reported'] = 1;\n                    this.setState({ post: temp, reportModal:false });\n                }\n                else{\n                    this.setState({ reportModal: false, post: { ...this.state.post, reported: 1 } });\n                }\n                \n            }, error => {\n                alertBox(true, error.data.message);\n                this.setState({ reportModal: false});\n            });\n        }\n    };\n    unReport = (t, id, key=null, key2= null) => {\n        postUnReport({ id: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            if(t == 'comment'){\n                var temp = this.state.post;\n                temp.comment[key]['reported'] = 0;\n                this.setState({ post: temp });\n            }\n            else if(t == 'reply'){\n                var temp = this.state.post;\n                temp.comment[key2].replies[key]['reported'] = 0;\n                this.setState({ post: temp });\n            }\n            else{\n                this.setState({ post: { ...this.state.post, reported: 0 } });\n            }\n            \n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    hidePost = (id) => {\n        postHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 1 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unhidePost = (id) => {\n        postUnHide({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, hidden: 0 } });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    // removePost = (id) => {\n    //     postRemove({ postid: id })\n    //     .then(async resp => {\n    //         alertBox(true, resp.message, 'success');\n    //         this.setState({ post: { ...this.state.post, removed: 1 } });\n    //         switchLoader();\n    //     }, error => {\n    //         alertBox(true, error.data.message);\n    //         switchLoader();\n    //     });\n    // };\n    removePost = (id) => {\n        this.setState({last:id, open:true})\n    };\n\n    removePostConfirm = () => {\n        var id = this.state.last;\n        this.setState({open:false, last:null})\n        postRemove({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, removed: 1 } });\n            switchLoader();\n        }, error => {\n            alertBox(true, error.data.message);\n            switchLoader();\n        });\n    }\n    highlightPost = (id) => {\n        postHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 1 } }, () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n    unHighlight = (id) => {\n        postUnHighlight({ postid: id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            this.setState({ post: { ...this.state.post, highlighted: 0 } },  () => {\n                \n            });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    likePostFn = (postId, liked) => {\n        this.setState({ post: { ...this.state.post, likeActive: 1 - liked } });\n        likePost({ postid: postId }, true)\n            .then(async resp => {\n                if (resp.message == 'Like') {\n                    this.postActivityCount('likesCount');\n                } else if (resp.message == 'Dislike') {\n                    this.postActivityCount('likesCount', 'sub');\n                }\n            }, error => {\n                alertBox(true, error.data.message);\n            });\n    }\n\n    sharePost = (post) => {\n        this.setState({ shareModel: true, currPost: post })\n    }\n\n    closeShareModal = () => {\n        this.setState({ shareModel: false })\n    }\n\n    handleOnReady = () => setTimeout(() => this.setState({ playing: true }), 100);\n    handleClose = () => this.setState({ open: !this.state.open });\n\n    postCmt = (postid) => {\n        if(this.state.commentText != '' && this.state.commentText != null){\n        switchLoader(true, 'Please wait. Commenting...');\n        let obj = { postid, comment: this.state.commentText };\n        postComment(obj)\n            .then(async resp => {\n                this.postActivityCount('cmtsCount');\n                const postObj = this.state.post;\n                if (!postObj.comment) {\n                    postObj.comment = [];\n                }\n                postObj.comment.unshift(resp.comment);\n                this.setState({ post: postObj, showComments: true, commentText: '' });\n                switchLoader();\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n        }\n    }\n\n    showComments = (postid) => {\n\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getComments({ postid }, true)\n            .then(async resp => {\n                switchLoader();\n                this.setState({ post: { ...this.state.post, comment: resp } })\n                this.setState({ showComments: true });\n            }, error => {\n                alertBox(true, error.data.message);\n                switchLoader();\n            });\n    }\n\n    handleChange = (evt, index) => {\n        const { name, value } = evt.target;\n        if (evt.target.name != 'replyCmt') {\n            this.setState({ [name]: value }, () => { });\n        } else {\n            this.setState({ [`${name}`]: { ...this.state.replyCmt, [index]: value } }, () => {\n            });\n        }\n    }\n\n    shareSuccess = () => {\n        this.postActivityCount('shareCount');\n    }\n\n    showCommentReply = (commentId) => {\n        let index = this.state.post.comment.findIndex(el => el._id === commentId);\n        const tempPostData = this.state.post;\n        tempPostData.comment[index].showReply = true;\n        this.setState({ post: tempPostData });\n        \n        // this.setState({\n        //     post: { comment: update(this.state.post.comment, { [index]: { showReply: { $set: true } } }) }\n        // }, () => {\n        // });\n    }\n\n    updatePost = (k, post) => {\n        const tempPostData = {...this.state.post};\n        console.log(this.state.post);\n        tempPostData.text = post.text;\n        tempPostData.sharedText = post.sharedText;\n        tempPostData.taggedPeople = post.taggedPeople;\n        tempPostData.twitterPost = post.twitterPost;\n        \n            tempPostData.contents = post.contents;\n        console.log(tempPostData);\n       this.setState({ modal:false, post: tempPostData}, ()=>{\n        this.processText();\n       });\n\n    //    setTimeout(() => {\n    //     //this.setState({post: tempPostData});\n    //     this.props.updatePost(k, tempPostData);\n    //    },500);\n    };\n\n    showCommentReplies = (commentId) => {\n        switchLoader(true, 'Please wait. Getting Comments...');\n        getReplyComments({ commentId }, true)\n        .then(async resp => {\n            console.log(resp);\n            switchLoader();\n            let index = this.state.post.comment.findIndex(el => el._id === commentId);\n            const tempPostData = this.state.post;\n            tempPostData.comment[index].replies = resp;\n            this.setState({ post: tempPostData });\n            this.showCommentReply(commentId);\n        }, error => {\n            alertBox(true, error.data.message);\n            switchLoader();\n        });\n    }\n\n    callBackCommentReply = (replyData, commentIndex) => {\n        let postObj = this.state.post;\n        if (postObj.comment && postObj.comment[commentIndex]) {\n            if (postObj.comment[commentIndex].replies) {\n                postObj.comment[commentIndex].replies.push(replyData);\n            } else {\n                postObj.comment[commentIndex].replies = [replyData];\n            }\n            let tempReplyCmt = this.state.replyCmt;\n            tempReplyCmt[commentIndex] = '';\n            this.setState({ post: postObj, replyCmt: tempReplyCmt });\n        }\n    }\n\n    \n\n    // wrapHash = (val) => {\n        \n    //     return val.replace(/#(\\w+)/g, \"<A href='/search/filter=posts&q=$&'>$&</A>\").replace(\"q=#\", \"q=%23\");  \n    // }\n\n    render() {\n\n        const { post, showComments, commentText, replyCmt, key } = this.state;\n\n        return (\n            post == null ?\n            <div className=\"text-center\">\n                <Spinner />\n            </div>\n            :\n            ((post.userid == this.props.currentUser._id) || (post.settings[0] != undefined && (post.settings[0].follow == \"Everyone\" || (post.settings[0].comments == \"Friends\" && post.followings.length > 0)))) ?  \n            <React.Fragment>\n                 <Modal displayModal={this.state.reportModal} closeModal={this.reportModal} >\n                     <div>\n                         <div className=\"form-group\">\n                             <select className=\"form-control\" value={this.state.category}  onChange={(e) => this.setState({category: e.target.value})}>\n                                 <option value=\"\">Select Category</option>\n                                 <option>Violence</option>\n                                 <option>Racism / Hatespeech</option>\n                                 <option>Pornographic</option>\n                                 <option>Spam</option>\n                                 <option>Other</option>\n                             </select>\n                         </div>\n                         <div className=\"form-group\">\n                             <textarea type=\"text\" placeholder=\"Reason\" className=\"form-control\" onChange={(e) => this.setState({reason: e.target.value})} value={this.state.reason} />\n                         </div>\n                     </div>\n                <div className=\"\">\n                <Button variant=\"primary\" size=\"compact m-2\" onClick={() => this.report()}>Report</Button>\n                <Button variant=\"secondary\" size=\"compact m-2\" onClick={this.reportModal}>Cancel</Button>\n                </div>\n             </Modal>\n                <Modal displayModal={this.state.modal} closeModal={this.editPost} >\n                    <EditPost {...this.props} post={post} updatePost={(p) => this.updatePost(key, p)} />\n                </Modal>\n            <div className={\"post \"} key={key}>\n                {\n                    this.getPostContent(post, showComments, commentText, replyCmt)\n                }\n          \n                {\n                    this.state.shareModel &&\n                    <Share\n                        post={this.state.currPost}\n                        shareSuccess={this.shareSuccess}\n                        closeShareModal={this.closeShareModal}\n                    />\n                }\n            </div>\n\n            </React.Fragment>\n            :\n            null\n        );\n    }\n\n    getPostContent = (post, showComments, commentText, replyCmt, shared = false) => {\n        return (\n            ((post.removed > 0 ) || (post.privacy == \"onlyme\" && this.props.filter != 'hidden' && post.userid != this.props.currentUser._id)) ? null : \n            <div className=\"container post-inner\" key={`${post._id}1`}>\n                <Dialog onClose={this.handleClose} className=\"confirm-modal\"  open={this.state.open}>\n                    <strong className=\"text-center p-2\"><big>Confirmation</big></strong>\n                    <p className=\"p-2\">Are you sure about deleting this?</p>\n                    <div className=\"p-2 d-flex align-items-center justify-content-around\">\n                        <Button onClick={this.handleClose} variant=\"secondary\">Cancel</Button>\n                        <Button onClick={this.removePostConfirm} variant=\"primary\">Yes</Button>\n                    </div>\n                </Dialog>\n                <div className=\"row\">\n                    <ul className=\"list-group w-100 m-0\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                            <div className=\"media w-100\">\n                                <div className=\"media-left\">\n                                    <A href={\"/u/\"+post.userinfo._id}>\n                                        <img className=\"media-object pic\" src={profilePic(post.userinfo.avatar)}\n                                            alt=\"...\" />\n                                    </A>\n                                </div>\n\n                                <div className=\"media-body pagination-centered \">\n                                <A href={\"/u/\"+post.userinfo._id}><p className=\"media-heading\">{post.userinfo && post.userinfo.name ? post.userinfo.name : ''}</p></A>\n                               <p className=\"media-subheading d-flex align-items-center justify-content-start\"> <A href={'/post/'+(shared ? post.sharedPost : post._id)}><TimeAgo date={post.createdAt} /></A> {\n                                    post.privacy == 'onlyme' && <i className=\"fa fa-lock ml-2\"></i> \n                                }</p>\n                                \n                                </div>\n\n                                {!post.sharedBy && <div className=\"media-right\">\n                                    <ul className=\"d-flex align-items-center\">\n                                    {post.twitterPost && <li className=\"list-group-item splLi\"><img className=\" extraSmallIcon\" src={GetAssetImage(\"icons/twitter.svg\")} /></li> }\n                                    {/* {post.saved > 0 && <li className=\"list-group-item splLi\"><img className=\"mr-1\" src={require(\"../../assets/images/save-icon.png\")} /></li> }\n                                    {post.highlighted > 0 && <li className=\"list-group-item splLi\"><img className=\"mr-1\" src={require(\"../../assets/images/icons/pin.png\")} /></li> } */}\n                                    \n                                    {/* <li className=\"list-group-item splLiLast mr-4\"><img className=\" extraSmallIcon\" src={require(\"../../assets/images/\" + (post.privacy == 'public' ? \"create-visibility-icon\" : \"hide-visibility-icon@2x\") + \".png\")} /></li> */}\n                                  \n                                  \n                                        <li className=\"list-group-item  p-1 pr-2 pointer  dropdown\"><i className=\"fa fa-ellipsis-h\"></i>\n                                        <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n                                        {post.userid == this.props.currentUser._id &&  <a className=\"dropdown-item\" onClick={(e) => this.editPost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/edit-icon.png\")} />\n                                                <span className=\"m-1\">Edit</span></a> }\n                                                {/* {post.hidden ?\n                                                <a className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#dropdownHideModal\" onClick={(e) => this.unhidePost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/hide-visibility-icon.png\")} />\n                                                <span className=\"m-1\">Un-Hide</span></a>\n                                                :\n                                                <a className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#dropdownHideModal\" onClick={(e) => this.hidePost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/hide-visibility-icon.png\")} />\n                                                <span className=\"m-1\">Hide</span></a>\n                                                \n                                                 }  */}\n                                            {post.saved > 0 ?\n                                            <a className=\"dropdown-item\" onClick={(e) => this.unsavePost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/save-icon.png\")} />\n                                                <span className=\"m-1\">Un-Save</span></a>\n                                                :\n                                                <a className=\"dropdown-item\" onClick={(e) => this.savePost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/save-icon.png\")} />\n                                                <span className=\"m-1\">Save</span></a>\n                                            }\n                                             {\n                                                post.reported > 0 ?\n                                                <a className=\"dropdown-item\" onClick={(e) => this.unReport('post', post._id)}>\n                                                <i className=\"mr-1 fa fa-undo\"></i>\n                                                <span className=\"m-1\">Undo-Report</span></a>\n                                                :\n                                                <a className=\"dropdown-item\" onClick={() => this.reportModal('post', post)}>\n                                                <i className=\"mr-1 fa fa-exclamation-circle\"></i>\n                                                <span className=\"m-1\">Report</span></a>\n                                            }\n                                            {/*                                             \n                                            {post.highlighted ?\n                                            <a className=\"dropdown-item\" onClick={(e) => this.unHighlight(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/icons/pin.png\")} />\n                                                <span className=\"m-1\">Un-Highlight</span></a>\n                                                :\n                                                <a className=\"dropdown-item\" onClick={(e) => this.highlightPost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/icons/pin.png\")} />\n                                                <span className=\"m-1\">Highlight</span></a>\n                                            } */}\n                                            {\n                                                post.userid == this.props.currentUser._id && <a className=\"dropdown-item\"  onClick={(e) => this.removePost(post._id)}>\n                                                <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n                                                <span className=\"m-1\">Remove</span></a>\n                                            }\n\n                                                {/* <a className=\"dropdown-item\" onClick={(e) => this.reportPost(post._id)}>\n                                                <i className=\"fa fa-exclamation-circle\"></i>\n                                                <span className=\"m-1\">Report</span></a> */}\n                                        </div>\n                                        </li>\n                                  </ul>\n                                \n                                        \n                                    \n                                </div>}\n                            </div>\n                        </li>\n\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center post-content-area\">\n                            <div className=\"container p-0\">\n\n                                \n                                <div className=\"post-content\" dangerouslySetInnerHTML={{__html: this.state.content}}>\n                                    {/* {(this.state.url != null && this.state.url != '' && typeof this.state.url != undefined)  &&\n                                      <div className=\"mt-2\">\n                                          <ReactTinyLink\n                                        cardSize=\"small\"\n                                        \n                                        showGraphic={true}\n                                        maxLine={2}\n                                        minLine={1}\n                                        url={this.state.url}\n                                        />\n                                        </div>\n                                    } */}\n                                </div>\n                                {\n                                            post.contents != undefined && post.contents[0] != undefined && post.contents[0].contenttype == 'Image' &&\n                                            <div className=\"w-100 pointer post-thumb\" onClick={() => {this.setState({ isOpen: true }); console.log(this.state.images)}} style={{backgroundImage: `url(${post.contents[0].content_url})`}} />\n                                        }\n                                        \n                                <div className=\"row\">\n                                    <span className=\"set-overlay\">\n                                        \n                                        {\n                                            post.contents != undefined && post.contents[0] != undefined &&  post.contents[0].contenttype == 'Video' &&\n                                            <ReactPlayer controls={true} url={post.contents[0].content_url || 'https://www.youtube.com/watch?v=ysz5S6PUM-U'} />\n                                        }\n                                    </span>\n                                </div>\n                                <div className=\"post-tags\">\n                                {((post.taggedPeople) && (post.taggedPeople.length !== 0)) &&\n                                    <div className=\"\">\n                                        <span> With {post.taggedPeople.map((tagPeople, j) => (\n                                            <Link className=\"taggedName\" to={\"/u/\"+tagPeople._id} key={j}>{tagPeople.name}</Link>\n                                        ))}\n                                        </span>\n                                    </div>\n                                }\n                                </div>\n\n                                {\n                                \n                                    post.sharedBy != undefined && post.sharedBy != null && post.sharedBy != '' ? \n                                    this.getSharedContent(post.sharedType, post.sharedType == 'blog' ? post.sharedDataBlog : post.sharedDataPost, post.sharedContents, post.sharedUserInfo)\n                                    : null\n                                }\n                            </div>\n                        </li>\n\n                        {/* {!post.sharedBy && <li className=\"list-group-item d-flex justify-content-between align-items-center create-post-attachments p-1\">\n                            <div className=\"col pl-1\">\n                                <ul className=\"list-group list-group-horizontal remove-border m-0\">\n                                    <li className=\"list-group-item pl-0\">\n                                        {post.likesCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.likesCount} </span>}\n                                        <span className=\"\">Likes</span>\n                                    </li>\n                                    <li className=\"list-group-item pl-0\">\n                                        \n                                        <span className=\"\">Shares</span>\n                                    </li>\n                                    <li className=\"list-group-item pl-0\">\n                                        {post.cmtsCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.cmtsCount} </span>}\n                                        <span className=\"\">Comments</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>} */}\n                        {!post.sharedBy && <div>\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center post-meta p-1 horizontal-line-fit-top mt-4\">\n                                <div className=\"col pl-1\">\n                                    <ul className=\"list-group list-group-horizontal remove-border m-0 mt-1 mb-1\">\n                                        <li className=\"list-group-item pointer\" onClick={(e) => this.likePostFn(post._id, post.likeActive)}>\n                                            <img src={post.likeActive === 1 ? require(\"../../assets/images/icons/like_active.svg\") : require(\"../../assets/images/icons/like.svg\")} />\n                                            <span className=\"m-1\">{post.likesCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.likesCount} </span>}</span>\n                                        </li>\n\n                                       \n                                    </ul>\n                                </div>\n                                <div className=\"pr-1\">\n                                <ul className=\"list-group list-group-horizontal remove-border m-0 mt-1 mb-1\">\n                                        {\n                                            ((post.userid == this.props.currentUser._id) || (post.settings[0] != undefined && (post.settings[0].comments == \"Everyone\" || (post.settings[0].comments == \"Friends\" && post.followings.length > 0)))) &&  <li className=\"list-group-item pl-0 pointer\">\n                                                <span className=\"m-1\" onClick={() => this.showComments(post._id)}>{post.cmtsCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.cmtsCount} </span>} {post.cmtsCount > 1 ? 'Comments' : 'Comment'} </span>\n                                            </li>\n                                        }\n                                       \n                                        {\n                                           ((post.userid == this.props.currentUser._id) || (post.settings[0] != undefined && post.settings[0].allowSharing)) && <li className=\"list-group-item pl-0 pointer\" onClick={(e) => this.sharePost(post)}>\n                                            <span className=\"m-1\">{post.shareCount > 0 && <span className=\"m-1 font-weight-bold\"> {post.shareCount} </span>} {post.shareCount > 1 ? 'Shares' : 'Share'} </span>\n                                        </li>\n                                        }\n                                        {/* <li className=\"list-group-item pl-0\"><img className=\" extraSmallIcon\" src=\"/favicon.png\" /><span className=\"m-1\"></span></li>\n                                        {post.twitterPost && <li className=\"list-group-item pl-0\"><img className=\" extraSmallIcon\" src=\"/static/media/twitter-filled.c9f12008.svg\" /><span className=\"m-1\"></span></li>}\n                                        <li className=\"list-group-item pl-0\"><img className=\" extraSmallIcon\" src={require(\"../../assets/images/\" + (post.privacy == 'public' ? \"create-visibility-icon\" : \"hide-visibility-icon@2x\") + \".png\")} /></li> */}\n                                </ul>\n                                </div>\n                            </li>\n                            {(!post.sharedBy && showComments) && <li className=\"list-group-item d-flex justify-content-between align-items-center create-post-attachments p-1 horizontal-line-fit-top\">\n                                <div className=\"col pl-1\">\n                                <Button  className=\"commentBtn\" onClick={() => this.postCmt(post._id)}>COMMENT</Button>\n                                    <input className=\"form-control tempcommentInput\"\n                                        type=\"text\"\n                                        placeholder=\"Add your comment\"\n                                        name=\"commentText\"\n                                        value={commentText}\n                                        onChange={(e) => this.handleChange(e)} />\n                                    \n                                </div>\n                        </li> }\n                        </div>}\n                        {(!post.sharedBy && showComments) &&\n                            post.comment.map((comment, i) => (\n                                \n                                <li className=\"list-group-item d-flex justify-content-between align-items-center create-post-attachments p-1 horizontal-line-fit-top\" key={i}>\n                                    <div className=\"col pl-1\">\n                                        <div className=\"media w-100 align-items-center p-1 comment-row\">\n                                            <div className=\"media-left mr-2\">\n                                            <A href={\"/u/\"+(comment.userinfo._id)}>\n                                                    <img  className=\"media-object pic commentPic\" src={profilePic(comment.userinfo.avatar)}\n                                                        alt=\"...\" />\n                                                </A>\n                                            </div>\n                                            <div className=\"media-body\">\n                                            <A href={\"/u/\"+(comment.userinfo._id)}><p className=\"media-heading\">{comment.userinfo.name}</p></A>\n                                                <p className=\"media-subheading\">{comment.text}</p>\n                                                <div className=\"d-flex\">\n                                                <span className=\"mr-2 pointer\" onClick={(e) => this.commentLike(i, post._id, comment._id)}>{comment.likeActive ? 'Liked' : 'Like'}  {(comment.likesCount && comment.likesCount > 0) ? comment.likesCount : ''}</span>\n                                                <span className=\"mr-2 pointer\" onClick={(e) => this.showCommentReplies(comment._id)}>{(comment.repliesCount && comment.repliesCount > 1) ? 'Replies' : 'Reply'} {(comment.repliesCount && comment.repliesCount > 0) ? comment.repliesCount: ''}</span>\n                                                \n                                                    {/* <span className=\"mr-2 pointer\" onClick={(e) => this.props.commentLike(comment._id)}>Like</span>\n                                                    <span className=\"mr-2 pointer\" onClick={(e) => this.showCommentReply(comment._id)}>Reply</span>\n                                                    {(comment.repliesCount && comment.repliesCount > 0) ? <span className=\"mr-2 pointer\" onClick={(e) => this.showCommentReplies(comment._id)}>{comment.repliesCount} replies</span> : ''}\n                                                    {(comment.likesCount && comment.likesCount > 0) ? <span className=\"mr-2 pointer\" >{comment.likesCount} likes</span> : ''} */}\n                                                    {/* <span className=\"mr-2\">Translate</span> */}\n                                                </div>\n                                                \n                                            </div>\n                                            <div className=\"media-right\">\n                                            <div className=\"list-group-item  p-1 pr-2 pointer  dropdown\"><i className=\"fa fa-ellipsis-h\"></i>\n                                                <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n                                                {(comment.userinfo._id == this.props.currentUser._id || post.userid == this.props.currentUser._id ) && <a className=\"dropdown-item\" onClick={(e) => this.deleteComment('comment', post._id, comment._id)}>\n                                                    <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n                                                    <span className=\"m-1\">Delete</span></a> }\n                                                    {\n                                                        comment.userinfo._id != this.props.currentUser._id ?\n                                                        comment.reported > 0 ?\n                                                        <a className=\"dropdown-item\" onClick={(e) => this.unReport('comment', comment._id, i)}>\n                                                        <i className=\"mr-1 fa fa-undo\"></i>\n                                                        <span className=\"m-1\">Undo-Report</span></a>\n                                                        :\n                                                        <a className=\"dropdown-item\" onClick={() => this.reportModal('comment', comment, i)}>\n                                                        <i className=\"mr-1 fa fa-exclamation-circle\"></i>\n                                                        <span className=\"m-1\">Report</span></a>\n                                                        : null\n                                                    }\n                                                </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {\n                                        comment.replies && comment.replies.map((reply, r) => (\n                                            <ul className=\"media w-100 align-items-center p-2\" key={r}>\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center w-100\">\n                                                        <div className=\"media align-items-center comment-row w-100\">\n                                                            <div className=\"media-left mr-2\">\n                                                                <A href={\"/u/\"+reply.userinfo._id}>\n                                                                    <img className=\"media-object pic replyPic\" src={profilePic(reply.userinfo.avatar)}\n                                                                        alt=\"...\" />\n                                                                </A>\n                                                            </div>\n                                                            <div className=\"media-body\">\n                                                            <A href={\"/u/\"+reply.userinfo._id}><p className=\"media-heading\">{reply.userinfo ? reply.userinfo.name : reply.userinfo.name}</p></A>\n                                                                <p className=\"media-subheading\">{reply.text}</p>\n                                                            </div>\n                                                            <div className=\"media-right h-auto\">\n                                                                <div className=\"list-group-item  p-0 pl-2 pointer  dropdown\"><i className=\"vertical-dot fa fa-ellipsis-h\"></i>\n                                                                    <div className=\"dropdown-menu hasUpArrow dropdown-menu-right\">\n                                                                    {(reply.userinfo._id == this.props.currentUser._id || post.userid == this.props.currentUser._id ) && <a className=\"dropdown-item\" onClick={(e) => this.deleteComment('reply', comment._id, reply._id)}>\n                                                                        <img className=\"mr-1\" src={require(\"../../assets/images/remove-icon.png\")} />\n                                                                        <span className=\"m-1\">Delete</span></a> }\n                                                                        {\n                                                                            reply.userinfo._id != this.props.currentUser._id ?\n                                                                            reply.reported > 0 ?\n                                                                            <a className=\"dropdown-item\" onClick={(e) => this.unReport('reply', reply._id, r, i)}>\n                                                                            <i className=\"mr-1 fa fa-undo\"></i>\n                                                                            <span className=\"m-1\">Undo-Report</span></a>\n                                                                            :\n                                                                            <a className=\"dropdown-item\" onClick={() => this.reportModal('reply', reply, r, comment, i)}>\n                                                                            <i className=\"mr-1 fa fa-exclamation-circle\"></i>\n                                                                            <span className=\"m-1\">Report</span></a>\n                                                                            : null\n                                                                        }\n                                                                    </div>\n                                                                    </div>\n                                                                </div>\n                                                        </div>\n                                                </li>\n                                            </ul>\n                                        ))}\n\n                                        {comment.showReply && <div className=\"col pl-4 mb-2\">\n                                            <input className=\"form-control tempcommentInput\"\n                                                type=\"text\"\n                                                placeholder=\"Add your comment\"\n                                                name=\"replyCmt\"\n                                                value={replyCmt[i]}\n                                                onChange={(e) => this.handleChange(e, i)} />\n                                            <Button className=\"commentBtn\" onClick={() => this.commentReply(post._id, comment._id, replyCmt[i], i, this.callBackCommentReply)}>REPLY</Button>\n                                        </div>\n                                        }\n                                    </div>\n                                </li>\n                            ))}\n\n                    </ul>\n                </div>\n                {this.state.isOpen && (\n                                        <Lightbox\n                                        id={\"light\"+post._id}\n                                        enableZoom={false}\n                                            mainSrc={post.contents[0].content_url}\n                                            onCloseRequest={() => this.setState({ isOpen: false })}\n                                            onAfterOpen={console.log(document.querySelector(\".ril-image-current\"))}\n                                            // onMovePrevRequest={() =>\n                                            // this.setState({\n                                            //     photoIndex: (this.state.photoIndex + this.state.images.length - 1) % this.state.images.length,\n                                            // })\n                                            // }\n                                            // onMoveNextRequest={() =>\n                                            // this.setState({\n                                            //     photoIndex: (this.state.photoIndex + 1) % this.state.images.length,\n                                            // })\n                                            // }\n                                        />\n                                        )}\n            </div>\n        )\n    }\n\n    getSharedContent = (type, post, contents, userinfo) => {\n        return (\n            post == undefined ?\n            <div className=\"deleted\"><i className=\"fa fa-trash\"></i> This content was removed</div>\n            :\n            ((post.removed > 0 ) || (post.hidden > 0 && this.props.filter != 'hidden')) ? null : \n            <SharedPostCard type={type} url={type == 'blog' ? \"/blog/\"+post.slug : \"/post/\"+post._id}  k={post._id} currentUser={this.props.currentUser} post={post} userinfo={userinfo} contents={contents} />\n        )\n    }\n}\n\nexport default Post;\n"],"sourceRoot":""}