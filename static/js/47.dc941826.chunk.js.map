{"version":3,"sources":["pages/Register/index.js","components/FrontPageFooter/index.js"],"names":["ccodes","require","Register","props","componentDidMount","setState","rcode","undefined","match","params","username","error","handleChange","evt","target","name","value","submitForm","e","preventDefault","handleValidation","obj","state","email","full_phone","countryCode","phone","password","passwordrepeat","cPassword","group","liquidity","switchLoader","register","then","resp","a","localStorage","setItem","id","alertBox","history","push","alert","data","message","Object","values","join","errors","pwdtype","cpwdtype","countryCodes","code","bind","fields","this","formIsValid","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","RegExp","test","Fragment","className","href","src","GetAssetImage","alt","action","method","onSubmit","type","placeholder","required","pattern","title","onChange","style","color","width","options","labelField","valueField","console","log","dial_code","variant","disabled","inProgress","React","Component","FrontPageFooter","useState","layout","config","frontEnd"],"mappings":"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","file":"static/js/47.dc941826.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-dropdown-select';\nimport { alertBox, switchLoader } from '../../commonRedux/';\nimport A from '../../components/A';\nimport Button from '../../components/Button';\nimport FrontPageFooter from '../../components/FrontPageFooter';\nimport { GetAssetImage } from '../../globalFunctions';\nimport { register } from '../../http/http-calls';\nimport { history } from '../../store';\nlet ccodes = require('./ccodes.json');\nrequire(\"../Login/styles.scss\");\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      rcode: '',\n      values:[],\n      countryCode: '',\n      phone: '',\n      password: '',\n      cPassword: '',\n      errors: {},\n      pwdtype: 'password',\n      cpwdtype: 'password',\n      countryCodes: [{ name: 'US', code: '+1' }, { name: 'IN', code: '+91' }, { name: 'GB', code: '+44' }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  componentDidMount = () =>{\n    try {\n      this.setState({\n        rcode: this.props.match.params.username == undefined || this.props.match.params.username == 'new' ? '' : this.props.match.params.username\n      })\n    } catch (error) {\n      \n    }\n  }\n\n  handleChange = (evt) => {\n    const { name, value } = evt.target;\n    this.setState({ [name]: value }, () => { });\n  }\n\n  handleValidation() {\n\n    let fields = this.state,\n      formIsValid = true,\n      errors = {};\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (this.state.countryCode == '') {\n      formIsValid = false;\n      errors[\"ccode\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"name\"]) {\n      // if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n      //   formIsValid = false;\n      //   errors[\"name\"] = \"Only letters\";\n      // }\n      if(fields[\"name\"].length > 160)\n        formIsValid = false;\n      errors[\"name\"] = \"160 Characters only\";\n    }\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\" && fields[\"email\"]) {\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    if (!fields[\"phone\"]) {\n      formIsValid = false;\n      errors[\"phone\"] = \"Cannot be empty\";\n    }\n\n    // if (typeof fields[\"phone\"] !== \"undefined\" && fields[\"phone\"]) {\n    //   if (!fields[\"phone\"].match(/^[0-9]+$/) || fields[\"phone\"].length != 10) {\n    //     formIsValid = false;\n    //     errors[\"phone\"] = \"Invalid Phone\";\n    //   }\n    // }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"Cannot be empty\";\n    }\n\n    if (fields[\"password\"]) {\n      const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n      if(!strongRegex.test(fields[\"password\"])){\n      formIsValid = false;\n      errors[\"password\"] = \"Minimum 8 Characters including, 1 uppercase, 1 lowercase, 1 numeric and 1 special charcater\";\n      }\n    }\n    if (!fields[\"cPassword\"]) {\n      formIsValid = false;\n      errors[\"cPassword\"] = \"Cannot be empty\";\n    }\n    if (fields[\"password\"] != fields[\"cPassword\"]) {\n      formIsValid = false;\n      errors[\"cPassword\"] = \"Password doesn't match\";\n    }\n    \n    \n\n\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    if (this.handleValidation()) {\n      let obj = {\n        name: this.state.name,\n        email: this.state.email,\n        full_phone: `${this.state.countryCode}${this.state.phone}`,\n        password: this.state.password,\n        passwordrepeat: this.state.cPassword,\n        rcode: this.state.rcode,\n        group: 'customer',\n        liquidity: '',\n      };\n      switchLoader(true, 'Please wait...');\n      register(obj)\n        .then(async resp => {\n          localStorage.setItem(\"vid\", resp.id);\n          switchLoader();\n          alertBox(true, \"Please verify your email\", 'success');\n          //history.push(\"/verify-phone\");\n          history.push(\"/login\");\n        }, error => {\n          switchLoader();\n          let alert = error && error.data && error.data.message ? typeof error.data.message == 'object' ? Object.values(error.data.message).join(',') : error.data.message: '';\n          alertBox(true, alert);\n        });\n    } else {\n      \n    }\n  }\n  render() {\n    const { email, name, phone, password, cPassword, pwdtype, rcode } = this.state;\n    return (\n      <React.Fragment>\n      <div className=\"loginPage\">\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n          <A href=\"/\"><img className=\"logo\" src={GetAssetImage('logo-main.png')} alt=\"\" /></A>\n          <p className=\"intro-text\">Social Media Platform with Trusted Cryptocurrency Exchange</p>\n          <img className=\"coins\" src={GetAssetImage('front/coins1.png')} />\n          </div>\n          <div className=\"col-md-5\">\n            <div className=\"loginForm\">\n              <form action=\"\" method=\"post\" onSubmit={this.submitForm} >\n                <h1>Signup</h1>\n                <div className=\"input-group mb-3\">\n                          <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Full Name\"\n                            name=\"name\"\n                            required\n                            pattern=\"[a-zA-Z0-9 ]{6,160}\"\n                            title=\"Enter Minimum 6 characters, Maximum 160 characters, Alpha-Numeric without special charcters\"\n                            value={name}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"name\"]}</span>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                          <input\n                            className=\"form-control\"\n                            type=\"email\"\n                            required\n                            placeholder=\"hello@eclipton.com\"\n                            name=\"email\"\n                            value={email}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"email\"]}</span>\n\n                        </div>\n                        <div className=\"input-group mb-3\">\n                          <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            required\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"password\"]}</span>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                          <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            name=\"cPassword\"\n                            required\n                            value={cPassword}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"cPassword\"]}</span>\n                          \n                        </div>\n                <div className=\"input-group mb-3\">\n                          <div className=\"input-group-append mr-2 d-block\">\n                              {/* <select required className=\"form-control\" name=\"countryCode\" id=\"\"\n                                onChange={(e) => this.handleChange(e)}\n                                value={this.state.countryCode} >\n                                {ccodes.map((country, i) => (\n                                  <option key={i} value={country.dial_code} >\n                                    {country.code} {country.dial_code}\n                                  </option>\n                                ))}\n                              </select> */}\n                               <Select\n                                options={ccodes}\n                                values={this.state.values}\n                                labelField=\"name\"\n                                valueField=\"name\"\n                                required\n                                name=\"ccode\"\n                                onChange={(values) => {\n                                  console.log(values);\n                                  try {\n                                    this.setState({\n                                      countryCode: values[0].dial_code,\n                                      values:values\n                                    })\n                                  } catch (error) {\n                                    \n                                    this.setState({\n                                      countryCode: '',\n                                      values: values\n                                    })\n                                  }\n                                }}\n                              />\n                              <div><span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"ccode\"]}</span></div>\n                          </div>\n                          <input\n                            className=\"form-control\"\n                            type=\"tel\"\n                            required\n                            placeholder=\"Mobile\"\n                            pattern=\"[0-9]{6,}\"\n                            title=\"Minimum 6 digit, numbers only\"\n                            name=\"phone\"\n                            value={phone}\n                            onChange={(e) => this.handleChange(e)} />\n                          <span style={{ color: \"red\", width: \"100%\" }}>{this.state.errors[\"phone\"]}</span>\n\n                        </div>\n                        <div className=\"input-group mb-3\">\n                          <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Referral Code\"\n                            name=\"rcode\"\n                            value={rcode}\n                            onChange={(e) => this.handleChange(e)} />\n                          \n                        </div>\n                        <div className=\"terms\"><input type=\"checkbox\" required /> I am over age 18 and I agree to <a href=\"https://blockoville.com/tampc\" target=\"_BLANK\" className=\"terms\"><span className=\"pointer text-blue\" >Terms & Conditions </span></a></div>\n                <div className=\"form-group\">\n                  <Button variant=\"primary\" className=\"big box w-100  mt-2 d-block\" disabled={this.props.inProgress}>GET STARTED</Button>\n                </div>\n              </form>\n               \n                <h3 className=\"new\">Already have an account?</h3>\n                <A href=\"/login\" className=\"join\">Login</A>\n\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      <FrontPageFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport A from '../A';\nimport { GetAssetImage } from '../../globalFunctions';\nimport './styles.css';\nimport config from '../../config';\n\n  \nconst FrontPageFooter = props => {\n    const [layout, setLayout] = useState(props.layout != undefined ? props.layout : \"default\");\n    // const [size, setSize] = useState(props.size != undefined ? props.size : \"\");\n    \n  return (\n    <footer className=\"frontFooter\">\n      <div className=\"container\">\n      <p>Copyright &copy; 2021 Eclipton | All rights reserved</p>\n      <p className=\"pl-3 pr-3\">Activity licence FVT000294</p>\n      <div className=\"d-flex align-items-center justify-content-end flex-wrap foot-menu\">\n        {/* <A href=\"#\">Privacy Policy</A> */}\n        <a href={config.frontEnd+\"terms-and-conditions.pdf\"} target=\"_BLANK\">Terms & Conditions</a>\n        <A href=\"/contact-us\">Contact Us</A>\n        {/* <A href=\"#\">Request Partnership</A> */}\n      </div>\n      </div>\n    </footer>\n  );\n\n};\n\nexport default FrontPageFooter;"],"sourceRoot":""}