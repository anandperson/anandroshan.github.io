{"version":3,"sources":["pages/Wallet/address.js","components/CoinSelector/index.js"],"names":["WithdrawAddresses","props","changeTab","newValue","setState","currentTab","componentDidMount","console","log","match","params","coin","currentCoin","allPairs","getAddresses","error","componentDidUpdate","prevProps","state","coins","length","getAllPairs","then","resp","a","data","forEach","element","currencySymbol","symbol","getWithdrawAddresses","status","addresses","err","loading","getDetails","getUserDetails","tfa_status","delete","el","deleteWhitelist","_id","currency","alertBox","message","selectCurrency","cur","history","push","submit","e","preventDefault","switchLoader","address","whitelistAddress","Message","undefined","toString","attempt","reset","with_pass","to","withdrawals","amountCurrency","amount","usdCurrency","usd","tfa","note","fee","estUsd","agree","takeFee","content","className","this","selectCoin","selected","action","method","onSubmit","type","placeholder","value","onChange","target","map","i","key","formatDate","createddate","onClick","React","Component","CoinSelector","useState","setCoins","filtered","setFiltered","setCurrent","val","useEffect","getCoins","toLowerCase","currencyName","indexOf","curnType"],"mappings":"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","file":"static/js/62.8acd6439.chunk.js","sourcesContent":["import React from 'react';\nimport { alertBox, switchLoader } from '../../commonRedux/';\nimport Button from '../../components/Button';\nimport CoinSelector from '../../components/CoinSelector';\nimport WalletMenu from '../../components/Menu/WalletMenu';\nimport WalletMenuMobile from '../../components/Menu/WalletMenuMobile';\nimport WalletAllBalance from '../../components/Wallet/allBalance';\nimport { formatDate } from '../../globalFunctions';\nimport { deleteWhitelist, getAllPairs, getUserDetails, getWithdrawAddresses, whitelistAddress } from '../../http/wallet-calls';\nimport './styles.css';\n\nclass WithdrawAddresses extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            attempt:0,\n            loading:true,\n            reset:false,\n            tfa_status: null,\n            with_pass: null,\n            to:'',\n            address: '',\n            withdrawals: null,\n            amountCurrency: '',\n            amount: '',\n            usdCurrency: '',\n            addresses: [],\n            usd: '',\n            tfa: '',\n            note: '',\n            fee:0,\n            estUsd:0,\n            agree:false,\n            takeFee: false,\n            status:null,\n            currentCoin: this.props.match.params.coin == undefined ? '' : this.props.match.params.coin,\n            coins: [],\n            content : 'loading',\n            currentTab: 0,\n            coin: null,\n        };\n    }\n\n    changeTab = (newValue) => {\n        \n        this.setState({\n            currentTab: newValue});\n     };\n\n     componentDidMount = () => {\n         try {\n             console.log(\"fav\", this.props.match.params.coin)\n             this.setState({\n                coin: this.props.match.params.coin,\n                currentCoin: this.props.match.params.coin\n             },()=> {\n                 this.allPairs(this.props.match.params.coin);\n                 this.getAddresses(this.props.match.params.coin);\n             })\n         } catch (error) {\n             \n         }\n    };\n\n    componentDidUpdate = (prevProps) => {\n        if(prevProps.match.params.coin != this.props.match.params.coin){\n        try {\n            console.log(\"fav2\", this.props.match.params.coin)\n            this.setState({\n               coin: this.props.match.params.coin,\n               currentCoin: this.props.match.params.coin\n            },()=> {\n                this.allPairs(this.props.match.params.coin);\n                this.getAddresses(this.props.match.params.coin);\n            })\n        } catch (error) {\n            \n        }\n    }\n   };\n\n\n\n    allPairs = (coin) =>{\n        console.log(coin);\n        if(coin != null){\n            if(this.state.coins.length > 0){\n\n            }else{\n                getAllPairs().then(async resp => {\n                    var allPairs = resp.data;\n                        allPairs.forEach(element => {\n                            if(element.currencySymbol == coin){\n                                this.setState({\n                                    coins: allPairs,\n                                    error: ''\n                                },()=>{\n                                    if(element != null){\n                                        this.setState({\n                                            currentCoin: element\n                                        })\n                                    }\n                                });\n                            }\n                        });\n                }, error => {\n        \n                });\n            }\n        }\n    }\n\n    getAddresses = (symbol) => {\n        getWithdrawAddresses({\n    \t\"currency\" : symbol\n        }).then(async resp => {\n            if(resp.status == true){\n                this.setState({\n                    addresses: resp.data\n                })    \n            }else{\n                this.setState({\n                    addresses: []\n                })\n            }\n            \n        }, err => {\n            this.setState({\n                loading: false\n            });\n        })\n    }\n\n\n\n    getDetails = () => {\n        getUserDetails().then(async resp => {\n            this.setState({\n                loading:false,\n                tfa_status: resp.data.tfa_status\n            })\n        }, err => {\n            this.setState({\n                loading: false\n            });\n        })\n    }\n\n\n    delete = (el) => {\n        deleteWhitelist({\n            _id: el._id,\n            currency: el.currency\n        }).then(async resp => {\n            if(resp.status == true){\n                this.getAddresses(el.currency);\n            }else{\n                alertBox(true, resp.message);\n            }\n        }, err => {\n            alertBox(true, \"Something went wrong\");\n        })\n    }\n\n\n    selectCurrency = (cur) => {\n        this.props.history.push(\"/wallet/address/\"+cur.currencySymbol);\n        this.setState({\n            currentCoin: cur\n        })\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n      \n            switchLoader(\"Submitting Request...\");\n        var data = {\n            \"currency\": this.state.currentCoin.currencySymbol,\n            \"currencyId\": this.state.currentCoin._id,\n            \"address\": this.state.address,\n            \"status\" : 1,\n            \"url\": \"https://eclipton.com/wallet/confirm/address/\",\n            \"whitelistStatus\" : 1,\n          };\n\n        whitelistAddress(data).then(async resp => {\n            try {\n                if(resp.status == true){\n                    this.setState({\n                        address: ''\n                    })\n                    alertBox(true, resp.Message, \"success\")\n                }else{\n                    alertBox(true, resp.Message)\n                }\n            } catch (error) {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n            }\n            switchLoader();\n        }, error => {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n                switchLoader();\n        });\n    \n    };\n\n    render() {\n\n        return (\n            <div className=\"container my-wall-container depositPage\">\n                <div className=\"row mt-2\">\n\n                    {/* <!-- left column --> */}\n                    <div className=\"col-sm empty-container-with-out-border left-column\">\n                        <WalletMenu {...this.props} />\n                    </div>\n                    {/* <!-- end left column --> */}\n\n                    {/* <!-- center column --> */}\n                  \n                     {\n                       <div className=\"col-sm empty-container-with-out-border center-column\">\n                    <WalletMenuMobile {...this.props} />\n                    \n               \n                        <div className={\"tab row \"+(this.state.currentTab != 0 && \"d-none\" )}>\n                            <div className=\"col-md-5 p-1\">\n                            <div className=\"bordered p-3\">\n                            <CoinSelector selectCoin={this.selectCurrency} selected={this.state.currentCoin} />\n                            </div>\n                            </div>\n                            <div className=\"col-md-7 p-1\">\n                              <div className=\"bordered p-3\">\n                                  <form action=\"\" method=\"POST\" onSubmit={this.submit}>\n                                      <div className=\"form-group\">\n                                          <input type=\"text\" className=\"form-control\" placeholder=\"To Address\" value={this.state.address} onChange={(e) => this.setState({address: e.target.value})} />\n                                      </div>\n                                      <div className=\"form-group\">\n                                          <Button>Add Address</Button>\n                                      </div>\n                                  </form>\n                                  <hr />\n                                  <div className=\"mt-3\">\n                                      <h3 className=\"subtitle\">Address Book</h3>\n                                      {\n                                          this.state.addresses.length == 0 && <p>No Address Found</p>\n                                      }\n                                      {\n                                          this.state.addresses.map((el, i)=>{\n                                              return <div key={i} className=\"d-flex align-items-center justify-content-between\">\n                                              <div>\n                                                  <strong className=\"text-big\">{el.address}</strong>\n                                                  <div className=\"text-small\">{formatDate(el.createddate)}</div>\n                                                </div>\n                                                <div>\n                                                    <i className=\"fa fa-times pointer\" onClick={() => this.delete(el)}></i>\n                                                </div>\n                                          </div>\n                                          })\n                                      }\n                                      \n                                  </div>\n                              </div>\n                            </div>\n                        </div>                   \n                    </div> }\n                    {/* <!-- end center column --> */}\n                    <div className=\"col-sm empty-container-with-out-border right-column\">\n                    <WalletAllBalance />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WithdrawAddresses;\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport {getAllPairs} from '../../http/wallet-calls';\nimport './styles.css';\nimport { search } from 'superagent';\n\n  \nconst CoinSelector = props => {\n    const [coins, setCoins] = useState(null);\n    const [filtered, setFiltered] = useState(null);\n    const [currentCoin, setCurrent] = useState(props.selected);\n\n    const selectCoin = (val, i) => {\n       setCurrent(val.currencySymbol);\n       props.selectCoin(val);\n    };\n    \n    useEffect(() => {\n        getCoins();\n    }, []);\n    \n    // useEffect(() => {\n    //     if(props.selected != undefined && props.selected != null && props.selected != ''){\n    //     console.log(\"selected\" , props.selected)\n    //     setCurrent(props.selected);\n    //     }\n    // }, [props.selected]);\n\n    const getCoins = () => {\n        // var allPairs = window.localStorage.getItem(\"allPairs\");\n        // if(allPairs != null){\n        //     allPairs = JSON.parse(allPairs);\n        //     setCoins(allPairs);\n        // }\n        getAllPairs().then(async resp => {\n            setCoins(resp.data);\n        }, error => {\n            setCoins(null);\n        });\n    }\n\n    const search = (e) => {\n        var val = e.target.value;\n        if(val == ''){\n            setFiltered(null);\n        }else{\n            val = val.toLowerCase();\n            var temp = coins;\n            var selected = [];\n            coins.forEach(element => {\n                if(element.currencyName.toLowerCase().indexOf(val) != -1 || element.currencySymbol.toLowerCase().indexOf(val) != -1){\n                    selected.push(element);\n                }\n            });\n            setFiltered(selected);\n        }\n    }\n\n  return (\n   <div className=\"coinSelector\">\n       <input type=\"text\" placeholder=\"Search\" onChange={search} />\n        <div className=\"bottom-border-list\">\n            {\n                coins == null ?\n                <Spinner />\n                :\n                filtered == null ?\n                coins.map((e, i) => {\n                    return (\n                        e.curnType == 1 || e.currencySymbol == 'BLCK' ?\n                        null\n                        :\n                        <div key={i} className={\"list-item pointer \"+(e.currencySymbol == currentCoin ? 'active' : '')} onClick={() => {selectCoin(e, i)}}>{e.currencyName + \" (\"+e.currencySymbol+\")\"} <span className=\"fa fa-chevron-right\"></span></div>\n                    )\n                })\n                :\n                filtered.map((e, i) => {\n                    return  e.currencySymbol == 'BLCK' ? null : <div key={i} className={\"list-item pointer \"+(e.currencySymbol == currentCoin ? 'active' : '')}  onClick={() => { selectCoin(e, i)}}>{e.currencyName + \" (\"+e.currencySymbol+\")\"} <span className=\"fa fa-chevron-right\"></span></div>\n                })\n            }\n        </div>\n   </div>\n  );\n\n};\n\nexport default CoinSelector;"],"sourceRoot":""}