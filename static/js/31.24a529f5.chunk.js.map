{"version":3,"sources":["components/Gigs/PopularGigRequests/index.js","pages/Gionomy/requests/index.js","components/RewardsWidget/index.js","components/Menu/MyGigsMenu.js"],"names":["PopularGigRequests","props","reportModal","p","i","t","setState","lastData","lastI","lastType","state","report","link","_id","postReport","id","type","category","reason","then","resp","a","alertBox","message","temp","posts","reported","error","data","unReport","post","postUnReport","componentDidMount","getData","categoryChange","c","cid","currentTab","dataChange","d","page","limit","currentUser","allGigRequests","err","changeTab","newValue","subCategory","priceFrom","priceTo","rating","key","gigs","className","A","href","Button","variant","this","length","map","gig","GigRequest","React","Component","useStyles","makeStyles","theme","root","flexGrow","padding","spacing","paper","textAlign","color","palette","text","secondary","createBtn","borderRadius","paddingTop","paddingBottom","marginLeft","textTransform","fontSize","customerList","marginTop","display","paddingRight","UserPanel","MyGigsMenu","Seller","useState","open","modal","setModal","setGigs","del","stats","setStats","filter","setFilter","anchorRef","useRef","getGigs","f","console","log","myGigRequests","filterPosts","va","prevOpen","useEffect","getGigRequestStats","current","focus","displayModal","closeModal","e","onClick","switchLoader","removeGig","index","findIndex","requests","bids","jobs","activeLabel","inactiveLabel","value","onToggle","history","push","mine","RewardsWidget","loading","status","setStatus","walletCheck","src","GetAssetImage","size","match","path"],"mappings":"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","file":"static/js/31.24a529f5.chunk.js","sourcesContent":["import React from 'react';\nimport { alertBox } from '../../../commonRedux/';\nimport A from '../../../components/A';\nimport Button from '../../../components/Button';\nimport GigFilter from '../../../components/Filter/gigFilter';\nimport CreateGigWidget from '../../../components/Gigs/Create';\nimport Gig from '../../../components/Gigs/Gig';\nimport GigRequest from '../../../components/Gigs/GigRequest';\nimport PopularGigs from '../../../components/Gigs/PopularGigs';\nimport Modal from '../../../components/Popup';\nimport RewardsWidget from '../../../components/RewardsWidget';\nimport TabsUI from '../../../components/Tabs/index';\nimport { allGigRequests, getGigs } from '../../../http/gig-calls';\nimport { postReport, postUnReport } from '../../../http/http-calls';\nimport './style.css';\n\nclass PopularGigRequests extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 4,\n            page: 1,\n            cid: 0,\n            posts: [],\n            category: '',\n            reason: '',\n            reportModal:false,\n            data: {\n                category: \"\",\n                subCategory : \"\",\n                priceFrom : \"\",\n                priceTo : \"\",\n                rating : \"\",\n                key: \"\"\n            },\n            lastData: null,\n            lastI: null,\n            lastType:null,\n            gigs: [],\n            currentTab:0\n        }\n    }\n\n    reportModal = (p = null, i = null, t=null) => {\n        this.setState({\n            lastData: p,\n            lastI: i,\n            lastType: t\n        });\n        this.setState({reportModal: !this.state.reportModal}) // true/false toggle\n    };\n\n    report = () => {\n            var lastData = this.state.lastData;\n            var lastI = this.state.lastI;\n            var link = \"gigonomy/gig/\"+lastData._id;\n            postReport({ id: lastData._id, type: this.state.lastType, link, category: this.state.category, reason: this.state.reason })\n            .then(async resp => {\n                alertBox(true, resp.message, 'success');\n                var temp = this.state.posts;\n                temp[lastI].reported = 1;\n                this.setState({ reportModal: false, posts: temp });\n            }, error => {\n                alertBox(true, error.data.message);\n                this.setState({ reportModal: false});\n            });\n    \n    };\n    unReport = (post, i) => {\n        postUnReport({ id: post._id })\n        .then(async resp => {\n            alertBox(true, resp.message, 'success');\n            var temp = this.state.posts;\n            temp[i].reported = 0;\n            this.setState({ reportModal: false, posts: temp });\n        }, error => {\n            alertBox(true, error.data.message);\n        });\n    };\n\n    componentDidMount = () => {\n        // this.getData();\n        // this.getRequests();\n        this.getData();\n    }\n\n    categoryChange = (c) => {\n        this.setState({\n            cid: c,\n            currentTab: 0\n        })\n    }\n    \n    dataChange = (data = {}) => {  \n        this.getData(data);\n    }\n\n    getData =(data = {}) => {\n        this.setState({\n            posts: []\n        })\n        var d = data;\n        d['page']  = this.state.page;\n        d['limit'] = this.state.limit;\n        d['userid'] = this.props.currentUser._id;\n        allGigRequests(data).then(resp => {\n          this.setState({\n            posts: resp\n          })\n        }, err => {\n  \n        });\n    }\n\n    changeTab = (newValue) => {\n        this.setState({currentTab: newValue});\n    };\n\n    render() {\n        return (\n            <div className=\"gigsWidget\">\n                    \n                    <div className=\"d-flex align-items-center justify-content-between\">\n                        <div>\n                            <h3 className=\"gtitle mt-4\">Jobs you may like</h3>\n                            <h4 className=\"gsubtitle\">Gigs that are popular now</h4>\n                        </div>\n                        <A href={\"/passionomy/requests\"}><Button variant=\"primary-outline\">View All</Button> </A>\n                    </div>\n                    \n                    <div className=\"clearfix\">\n                    {\n                        this.state.posts.length == 0 ?\n                        <p className=\"no-found\">No Gig Requests Found</p>\n                        :\n                        <div className=\"row-1\">\n                            {\n                        this.state.posts.map((gig, i) => {\n                            return <GigRequest {...this.props} post={gig} />\n                        })\n                    }\n                    </div>\n                    }\n                \n                    \n                </div>\n\n                \n                    \n                </div>\n        );\n    }\n}\n\nexport default PopularGigRequests;","import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { alertBox, switchLoader } from '../../../commonRedux';\nimport A from '../../../components/A';\nimport Gig from '../../../components/Gigs/Gig';\nimport Button from '../../../components/Button';\nimport LeftThumbCard2 from '../../../components/Cards/LeftThumbCard2';\nimport GigFilter from '../../../components/Filter/gigFilter';\nimport CreateGigWidget from '../../../components/Gigs/Create';\nimport MyGigsMenu from '../../../components/Menu/MyGigsMenu';\nimport Modal from '../../../components/Popup';\nimport RewardsWidget from '../../../components/RewardsWidget';\nimport { getGigRequestStats, getGigStats, myGigRequests, myGigs, removeGig } from '../../../http/gig-calls';\nimport { history } from '../../../store';\nimport ToggleButton from 'react-toggle-button';\nimport \"../Seller/Seller.scss\";\nimport GigRequest from '../../../components/Gigs/GigRequest';\nimport PopularGigRequests from '../../../components/Gigs/PopularGigRequests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  createBtn:{\n    borderRadius: '25px',\n    paddingTop: '2px',\n    paddingBottom: '2px',\n    marginLeft: '20px',\n    textTransform: 'none',\n    fontSize:'12px',\n    '& .MuiSvgIcon-root':{\n      fontSize:'16px'\n    }\n  },\n  customerList:{\n    marginTop: '10px',\n    display: 'flex',\n    paddingRight: '10px'\n  }\n}));\nexport function UserPanel(props) {\n  const classes = useStyles();\n  return(\n    <>\n      {/* <Paper variant=\"outlined\" square className={classes.paper} borderBottom={0}>\n        <UserDetails {...props} />\n      </Paper>\n      <Paper variant=\"outlined\" square className={classes.paper}>\n        <MenuItems activeIndex={props.activeIndex} />\n      </Paper> */}\n      <MyGigsMenu {...props} />\n    </>\n  )\n}\n\nexport default function Seller(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [modal, setModal] = React.useState(false);\n  const [gigs, setGigs] = React.useState([]);\n  const [del, setDelete] = React.useState(0);\n  const [page, setPage] = React.useState(1);\n  const [limit, setLimit] = React.useState(20);\n  const [stats, setStats] = React.useState(null);\n  const [filter, setFilter] = React.useState('');\n  const anchorRef = React.useRef(null);\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const deleteGig = (item) =>{\n    console.log(\"delet\");\n    setDelete(item._id);\n    setModal(!modal);\n  };\n\n  const editGig = (item) =>{\n    props.history.push(\"/passionomy/gig/edit/\"+item.slug);\n  };\n\n  const previewGig = (item) =>{\n    props.history.push(\"/passionomy/gig/\"+item.slug);\n  };\n\n  const processDelete = () => {\n    setModal(!modal);\n    switchLoader(true, \"Deleting the gig, please wait...\");\n    removeGig({id: del}).then(resp=>{\n      var temp = gigs;\n      var index = temp.findIndex((i) => i._id == del);\n      console.log(index);\n      delete temp[index];\n      setGigs(temp);\n      switchLoader();\n      alertBox(true, \"Gig has been deleted\", \"success\");\n    }, err => {\n      switchLoader();\n      alertBox(true, err.data.message);\n    });\n  }\n\n  const getGigs=(f ='', data={}) =>{\n    var d = data;\n  console.log(d)\n  d['page']  = page;\n  d['limit'] = limit;\n  d['userid'] = props.currentUser._id;\n  if(f != ''){\n    d['filter'] = f;\n  }\n    myGigRequests(d).then(resp=>{\n      setGigs(resp);\n    })\n  }\n\n  const getStats=() =>{\n    getGigRequestStats().then(resp=>{\n      setStats(resp);\n    })\n  }\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const filterPosts = (va) =>{\n    setFilter(va);\n    setGigs([]);\n    getGigs(va);\n  }\n\n const  dataChange = (data = {}) => {\n  getGigs(filter, data);\n}\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    getStats();\n    getGigs();\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  const selectCustomer = (id) => {\n    history.push(\"/passionomy/dashboard/\"+id);\n  }\n  return (\n    <div className={\"seller-customers\"}>\n      <Modal displayModal={modal} closeModal={(e)=>{setModal(!modal)}} >\n  <p>Are you sure about deleting this gig?</p>\n  <div className=\"d-flex align-items-center justify-content-center\">\n  <Button color=\"primary\" variant=\"contained\" onClick={() => processDelete()}>Yes</Button> &nbsp; <Button onClick={() => {setModal(!modal)}}  color=\"dark\" variant=\"contained\">Cancel</Button>\n  </div>\n</Modal>\n    <div className=\"container my-wall-container \">\n      <div className=\"row \">\n        {/* <!-- left column --> */}\n        <div className=\"col-sm empty-container-with-out-border left-column\">\n        <GigFilter dataChange={dataChange}/>\n        </div>\n        {/* <!-- end left column --> */}\n\n        {/* <!-- center column --> */}\n        <div className=\"col-sm empty-container-with-out-border center-column gigs-details-container\" >\n        <div className=\"banner\">\n                        <div className=\"banner-body\">\n                            <div className=\"banner-desc\">\n                                <h3>My Hire Profiles</h3>\n                                <div className='row-s mt-3'>\n                                  <div className=\"mr-3\"><strong>{stats == null ? 0 : stats.requests}</strong> Listings</div>\n                                  <div className=\"mr-3\"><strong>{stats == null ? 0 : stats.bids}</strong> Bids</div>\n                                  <div><strong>{stats == null ? 0 : stats.jobs}</strong> Completed</div>\n                                </div>\n                            </div>\n                            <div className=\"banner-btns\">\n                                <span className=\"pr-2\">Find Jobs</span>\n                                    <ToggleButton activeLabel=\"\" inactiveLabel=\"\" value={true} onToggle={(value) => {\n                                      if(value){\n                                          props.history.push(\"/passionomy/dashboard\");\n                                      }\n                                    }} />\n                                <span className=\"pl-2\">Hire Talents</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"banner bottom\">\n                        <div className=\"banner-body\">\n                        \n     <ul className=\"filters\">\n       <li><span className={\"filter \"+(filter == '' ? 'active' : '')} onClick={(e) => filterPosts('')}>All</span></li>\n       {/* <li><button className={\"btn \"+(filter == 'saved' ? 'btn-main' : 'btn-outline')} onClick={(e) => this.filterPosts('saved')}>Saved</button></li> */}\n       <li><span className={\"filter \"+(filter == 'draft' ? 'active' : '')} onClick={(e) => filterPosts('draft')}>Draft</span></li>\n       {/* <li><span className={\"filter \"+(filter == 'purchased' ? 'active' : '')} onClick={(e) => filterPosts('purchased')}>Purchased</span></li> */}\n       {/* <li><button className={\"btn \"+(filter == 'hidden' ? 'btn-main' : 'btn-outline')} onClick={(e) => this.filterPosts('hidden')}>Hidden</button></li>\n       <li><button className={\"btn \"+(filter == 'paid' ? 'btn-main' : 'btn-outline')} onClick={(e) => this.filterPosts('paid')}>Paid</button></li>\n       <li className=\"ml-auto\"><button className={\"btn \"+(filter == 'purchased' ? 'btn-main' : 'btn-outline')} onClick={(e) => this.filterPosts('purchased')}>Blogs purchased by me</button></li> */}\n       {/* <li><button className={\"btn \"+(filter == 'highlighted' ? 'btn-main' : 'btn-outline')} onClick={(e) => this.filterPosts('highlighted')}>Highlighted</button></li> */}\n     </ul>\n     \n     <A href=\"/passionomy/requests/add\"><Button>Add</Button></A>\n                          </div>\n                  </div>\n                  <div className=\"row-1 clearfix\">\n                    {gigs.map((gig, i) => (\n                      <GigRequest {...props} post={gig} mine={true} />\n                      \n                    ))}\n                </div>\n                <div className=\"mt-3\">\n                <PopularGigRequests {...props} />\n                </div>\n                </div>\n                <div className=\"col-sm empty-container-with-out-border right-column\">\n              <RewardsWidget {...props} />\n                \n        </div>\n        </div>\n        </div>\n        </div>\n   \n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport A from \"../A\";\nimport Button from \"../Button\";\nimport \"./style.css\";\nimport Spinner from \"../Spinner\";\nimport { getTradePairs } from \"../../http/wallet-calls\";\nimport { GetAssetImage } from \"../../globalFunctions\";\nimport walletCheck from \"../../hooks/walletCheck\";\n\nconst RewardsWidget = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(null);\n\n  useEffect(() => {\n    walletCheck().then((resp) => {\n      try {\n        setStatus(resp.data.status);\n      } catch (error) {}\n    });\n  }, []);\n\n  return (\n    <div\n      className={\n        \" empty-inner-container-with-border widget rewardsWidget \" +\n        (props.variant != null && \" \" + props.variant)\n      }\n    >\n      <div className=\"col\">\n        <ul className=\"list-group w-100\">\n          <li className=\"widgetTitle\">\n            <img src={GetAssetImage(\"icon-material-royalty.svg\")} />\n            <span>Rewards</span>\n          </li>\n        </ul>\n        {/* <div className=\"list-group-item d-flex justify-content-between align-items-center header-drak widgetTitle\">\n                  <div>BUY CRYPTOCURRENCY</div>\n                </div> */}\n        <div className=\"widgetBody\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <div className=\"flex-row\">\n              <img\n                src={GetAssetImage(\"icon-material-stars.svg\")}\n                className=\"icon-star\"\n              />\n\n              {status == \"Accept\" ? (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>400 Points</strong> on\n                    your KYC.\n                  </p>\n                  <p>\n                    Refer your friend and earn <strong>500 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              ) : (\n                <div>\n                  <p>\n                    Congrats! You have earned <strong>100 Points</strong> on\n                    your Registration.\n                  </p>\n                  <p>\n                    Complete your KYC and earn <strong>400 Points</strong>.\n                  </p>\n                  <A href={\"/wallet/verification\"}>\n                    <Button variant=\"primary-outline\" size=\"big\">\n                      Earn Points\n                    </Button>\n                  </A>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RewardsWidget;\n","import React, { useState, useEffect } from 'react';\nimport A from '../A';\nimport Button from '../Button';\nimport './styles.scss';\n\nconst MyGigsMenu = props => {\n\n    return (\n        <div className=\"widget empty-inner-container-with-border\">\n        <div className=\"container\">\n          <div className=\"row\">\n\n          <ul className=\"list-group w-100\">\n              <li className=\"list-group-item d-flex justify-content-between align-items-center header-drak widgetTitle\">\n                My Gigs\n              </li>\n            </ul>\n            <ul className=\"list-group w-100 menu\">\n            <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.match.path == '/passionomy/dashboard' && 'current')}>\n                <A href='/passionomy/dashboard' className=\"align-items-center d-flex\"><span className=\"aicon fa fa-handshake-o aicon\"></span> My Gigs</A>\n              </li>\n              <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.match.path == '/passionomy/gig/purchased' && 'current')}>\n                <A href='/passionomy/gig/purchased' className=\"align-items-center d-flex\"><span className=\"aicon fa fa-star-half-empty\"></span> Purchased Gigs</A>\n              </li>\n              <li className={\"list-group-item d-flex justify-content-between align-items-center \"+(props.match.path == '/passionomy/request/my' && 'current')}>\n                <A href=\"/passionomy/request/my\" className=\"align-items-center d-flex\"><span className=\"aicon fa fa-send\"></span> My Gig Requests</A>\n              </li>\n            \n            \n            </ul>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyGigsMenu;"],"sourceRoot":""}