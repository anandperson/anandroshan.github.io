{"version":3,"sources":["pages/MyBlogs/add.js","http/blog-calls.js","pages/MyBlogs/tools.js","components/FormFields/FileBrowse.js"],"names":["require","AddBlog","props","tagChange","val","console","log","setStateFunc","key","value","setState","getData","getSinglePost","postid","match","params","id","then","res","post","_id","title","subject","draft","data","JSON","parse","editorContent","text","amount","price","tags","undefined","hashtags","currency","preferedCurrency","category","categoryId","paymentType","paidPost","edit_image","contents","content_url","category2","setTimeout","loading","err","getDraft","getBlogDraft","onEditorStateChange","editorState","handleInput","e","target","name","handleRemove","getAttribute","handleFile","type","reader","FileReader","onload","document","getElementById","src","result","readAsDataURL","handleCheckbox","checked","handleCategory","v","split","dataChange","submit","t","a","preventDefault","editor","save","edata","status","state","push","blocks","length","post_image","alertBox","join","edjsParser","postImages","formData","FormData","append","stringify","switchLoader","createBlog","resp","window","location","href","history","slug","error","uploadImageCallBack","file","Promise","resolve","reject","uploadFile","out","link","filePath","review","editorjsHTML","contentBlock","htmlToDraft","React","createRef","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","categories","editorInstance","refreshing","filter","latestpost","currentTab","suggestions","reactTags","i","this","slice","splice","tag","concat","currentUser","getBlogCategories","prevProps","className","onSubmit","method","placeholder","onChange","instanceRef","instance","tools","EDITOR_JS_TOOLS","uncheckedValue","for","page","fileChange","accept","tmp_name","onClick","map","selected","onItemAdded","item","allItems","onItemDeleted","label","values","variant","size","Component","makeAxiosGetRequest","config","baseUrl","catch","response","makeAxiosPostRequest","updateBlog","getPosts","auth","getFilteredBlogPosts","postRemove","getPopularBlogs","getCategoryBlogs","getAuthorBlogs","clap","sendTips","purchaseBlog","checkPurchasedBlog","likePost","postComment","likeComment","replyComment","getBlogStats","embed","Embed","table","Table","marker","Marker","list","List","warning","Warning","code","Code","image","class","Image","endpoints","byFile","byUrl","raw","Raw","header","Header","quote","Quote","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","FileBrowse","useState","setSelected","setAccept","setLoading","useEffect","st","s","forEach","el","trim","browse","click","data-target","files","ft","ft2","indexOf","message","inputChange"],"mappings":"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","file":"static/js/35.55a2920c.chunk.js","sourcesContent":["import { ContentState, EditorState } from 'draft-js';\nimport editorjsHTML from 'editorjs-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport React from 'react';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport EditorJs from 'react-editor-js';\nimport MultipleValueTextInput from 'react-multivalue-text-input';\nimport { alertBox, switchLoader } from '../../commonRedux/';\nimport Button from '../../components/Button';\nimport FileBrowse from '../../components/FormFields/FileBrowse';\nimport Spinner from '../../components/Spinner';\nimport { createBlog, getBlogCategories, getBlogDraft, getSinglePost } from '../../http/blog-calls';\nimport { uploadFile } from '../../http/http-calls';\nimport { EDITOR_JS_TOOLS } from './tools';\n\n\n\n\nrequire (\"./styles.scss\");\n\nclass AddBlog extends React.Component {\n  constructor(props) {\n    super(props);\n    const edjsParser = editorjsHTML();\n    const html = '{\"time\":1612692654392,\"blocks\":[{\"type\":\"paragraph\",\"data\":{\"text\":\"sdff\"}},{\"type\":\"paragraph\",\"data\":{\"text\":\"<b>sdfsdf</b>\"}}],\"version\":\"2.19.1\"}';\n    const contentBlock = htmlToDraft(html);\n    this.editor = React.createRef();\n\n    var editor = null;\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      editor = editorState;\n    }\n      this.state = {\n        id:0,\n        data: '',\n        loading:true,\n        categories: [],\n        editorState: editor,\n        editorInstance:null,\n        edjsParser: edjsParser,\n        refreshing: false,\n        filter: '',\n        title: '',\n        post_image: null,\n        edit_image: null,\n        latestpost: {},\n        paymentType: 'free',\n        currentTab: 0,\n        tags: [],\n        currency: \"\",\n        amount: 0,\n        category2: \"\",\n        category: \"\",\n        categoryId: \"\",\n        suggestions: [\n          { id: 3, name: \"Bananas\" },\n          { id: 4, name: \"Mangos\" },\n          { id: 5, name: \"Lemons\" },\n          { id: 6, name: \"Apricots\" }\n        ]\n      };\n    \n  \n    this.reactTags = React.createRef()\n  }\n  onDelete (i) {\n    const tags = this.state.tags.slice(0)\n    tags.splice(i, 1)\n    this.setState({ tags })\n  }\n \n  onAddition (tag) {\n    const tags = [].concat(this.state.tags, tag)\n    this.setState({ tags })\n  }\n\n  tagChange = (val) => {\n    console.log(val)\n  }\n  setStateFunc = (key,value) => {\n    this.setState({[key]:value});\n  }\n  componentDidMount() {\n    console.log(this.props.currentUser);\n    getBlogCategories().then(resp=>{\n      this.setState({\n        categories : resp\n      })\n    }, err=> {})\n    try {\n      if(this.props.match.params.id != undefined){\n        this.getData();\n      }else{\n        this.setState({\n          loading:false,\n          })\n      }\n    } catch (error) {\n      this.setState({\n        loading:false,\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.match.params.id != this.props.match.params.id){\n      try {\n        if(this.props.match.params.id != undefined){\n          this.getData();\n        }else{\n          this.setState({\n            loading:false,\n            })\n        }\n      } catch (error) {\n        this.setState({\n          loading:false,\n          })\n      }\n    }\n  }\n\n  getData = () => {\n    getSinglePost({postid: this.props.match.params.id}).then(res=>{\n      var post = res.post[0];\n      console.log(post);\n      this.setState({\n        id: post._id,\n        title: post.subject,\n        draft: post,\n        data: JSON.parse(post.editorContent),\n        text: post.text,\n        amount: post.price,\n        tags: post.hashtags == undefined || post.hashtags[0] == undefined || post.hashtags[0] == '' ? [] : post.hashtags,\n        currency: post.preferedCurrency,\n        category: post.category,\n        categoryId: post.categoryId,\n        paymentType: post.paidPost ? 'paid' : 'free',\n        edit_image: post.contents[0] == undefined ? null : post.contents[0].content_url,\n        category2: post.category+\"^\"+post.categoryId\n      },() => {\n        setTimeout(() => {\n          this.setState({\n          loading:false,\n          })\n        }, 1000);\n        \n      });\n    \n    }, err => {\n      this.setState({\n        loading:false\n      })\n    })\n  }\n\n\ngetDraft = () => {\n  getBlogDraft().then(post=>{\n    this.setState({\n      id: post._id,\n      title: post.subject,\n      draft: post,\n      data: JSON.parse(post.editorContent),\n      text: post.text,\n      amount: post.price,\n      tags: post.hashtags == undefined || post.hashtags[0] == undefined || post.hashtags[0] == '' ? [] : post.hashtags,\n      currency: post.preferedCurrency,\n      category: post.category,\n      categoryId: post.categoryId,\n      paymentType: post.paidPost ? 'paid' : 'free',\n      edit_image: post.contents[0] == undefined ? null : post.contents[0].content_url,\n      category2: post.category+\"^\"+post.categoryId\n    },() => {\n      setTimeout(() => {\n        this.setState({\n        loading:false,\n        })\n      }, 1000);\n      \n    });\n  \n  }, err => {\n    this.setState({\n      loading:false\n    })\n  })\n}\n\n\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  handleInput = (e) => {\n    var val =  e.target.value;\n    var name =  e.target.name;\n    console.log(name+\":\"+val);\n    this.setState({\n        [name] : val\n    })\n  };\n\n  handleRemove = (e) => {\n    var name =  e.target.getAttribute(\"name\");\n    this.setState({\n        [name] : null\n    })\n  };\n\n  handleFile = (name, type, value) => {\n    console.log(value);\n    this.setState({\n        [name] : value\n    },()=>{\n      var reader  = new FileReader();\n    // it's onload event and you forgot (parameters)\n      reader.onload = function(e)  {\n          var image = document.getElementById(name+\"_preview\");\n          image.src = e.target.result;\n      }\n      // you have to declare the file loading\n      reader.readAsDataURL(value);\n    })\n  };\n  \n\n  handleCheckbox = (e) => {\n    var name =  e.target.name;\n    console.log(name);\n    if(e.target.checked){\n      var val =  e.target.value;\n      console.log(val);\n      this.setState({\n        [name] : val\n      })\n    }else{\n      var val =  e.target.getAttribute(\"uncheckedValue\");\n      console.log(val);\n      this.setState({\n        [name] : val\n      })\n    }\n    \n  };\n  handleCategory = (e) => {\n    var val =  e.target.value;\n    var v = val.split(\"^\");\n    console.log(v);\n    this.setState({\n      category2: val,\n      category: v[0],\n      categoryId: v[1]\n    });\n  };\n  dataChange = (e) => {\n    console.log(e);\n  };\n\n  submit = async (e, t) => {\n    e.preventDefault();\n    var edata = await this.editor.save();\n    var err = [];\n    var status = 'active';\n    if(t == 1){\n      if(this.state.title == ''){\n        err.push(\"Title is required\");\n      }\n      if(this.state.category == ''){\n        err.push(\"Category is required\");\n      }\n      if(edata.blocks.length <= 0 ){\n        err.push(\"Content is required\");\n      }\n      if(this.state.post_image == null && this.state.edit_image == null){\n        err.push(\"Main Image is required\");\n      }\n    }else{\n      if(this.state.title == ''){\n        err.push(\"Title is required\");\n      }\n      status = 'draft';\n    }\n\n    if(err.length > 0){\n      alertBox(true, err.join(\", \"));\n    }\n    else {\n    var data = this.state.edjsParser.parse(edata);\n    data = data.join(\" \");\n    var postImages = this.state.post_image;\n    if(this.state.tags.length > 0){\n      var hashtags = this.state.tags.join(\",\");\n    }else{\n      var hashtags = '';\n    }\n    \n    const formData = new FormData();    \n    if(this.state.id != 0){\n      formData.append('id', this.state.id);\n    }\n\t\tformData.append('postImgs', postImages);\n    formData.append('text', data);\n    formData.append('editorContent', JSON.stringify(edata));\n    formData.append('subject', this.state.title);\n    formData.append('hashtags', hashtags);\n    formData.append('paymentType', this.state.paymentType);\n    formData.append('amount', this.state.amount);\n    formData.append('currency', this.state.currency);\n    formData.append('category', this.state.category);\n    formData.append('categoryId', this.state.categoryId);\n    formData.append('status', status);\n\t\tswitchLoader('Your post is being updated...');\n\t\tcreateBlog(formData)\n    .then(async resp => {\n      switchLoader();\n      if(t==1){\n        window.location.href=\"/blogs\";\n      }else{\n        alertBox(true, \"Draft has been saved!\", \"success\");\n        this.props.history.push(\"/edit-blog/\"+resp.post.slug);\n      }\n\n\n\n    }, error => {\n      switchLoader();\n    });\n    }\n  }\n  \n  uploadImageCallBack = (file) => {\n    return new Promise(  (resolve, reject) => {\n    uploadFile({file: file}).then(resp => {\n      var out = {data: {link: resp.file.filePath }};\n      console.log(out);\n      resolve(out);\n    }, error =>{\n      reject(error);\n    })\n  });\n    // return new Promise(\n    //   (resolve, reject) => {\n    //     const xhr = new XMLHttpRequest();\n    //     xhr.open('POST', 'https://api.imgur.com/3/image');\n    //     xhr.setRequestHeader('Authorization', 'Client-ID ##clientid##');\n    //     const data = new FormData();\n    //     data.append('image', file);\n    //     xhr.send(data);\n    //     xhr.addEventListener('load', () => {\n    //       const response = JSON.parse(xhr.responseText);\n    //       console.log(response)\n    //       resolve(response);\n    //     });\n    //     xhr.addEventListener('error', () => {\n    //       const error = JSON.parse(xhr.responseText);\n    //       console.log(error)\n    //       reject(error);\n    //     });\n    //   }\n    // );\n  }\n\n  review =()=>{\n\n  };\n\n    render() {\n    \n        return (\n            // <!-- Wall container -->\n            <div className=\"addBlogPage\">\n            <div className=\"container my-wall-container \">\n              <div className=\"row mt-2\">\n\n                {/* <!-- left column --> */}\n                \n                {/* <!-- end left column --> */}\n\n                {/* <!-- center column --> */}\n                <div className=\"col-sm empty-container-with-border center-column big mx-auto p-4\">\n                  <h1 className=\"text-center\">Add an Article</h1>\n                  <form onSubmit={(e) => this.submit(e, 1)} method=\"post\">\n                      <div className=\"form-group\">\n                          <strong>Title of the Article</strong>\n                          <input type=\"text\" placeholder=\"Alpha numeric\" name=\"title\" value={this.state.title} className=\"form-control\" onChange={this.handleInput} />\n                      </div>\n                     \n                        <div className=\"form-group\">\n                          <strong>Content</strong>\n                          {/* <Editor\n          editorState={this.state.editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n        /> */}\n        {/* <Editor\n        editorState={this.state.editorState}\n        onEditorStateChange={this.onEditorStateChange}    \n        toolbar={{\n          inline: { inDropdown: true },\n          list: { inDropdown: true },\n          textAlign: { inDropdown: true },\n          link: { inDropdown: true },\n          history: { inDropdown: true },\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\n        }}\n      /> */}\n                    {\n                     this.state.loading ? \n                     <Spinner />\n                     : <EditorJs instanceRef={instance => {this.editor = instance}} data={this.state.data} tools={EDITOR_JS_TOOLS} /> }\n\n       \n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" name=\"paymentType\" value=\"paid\" uncheckedValue=\"free\" checked={this.state.paymentType == 'paid' ? true : false} onChange={this.handleCheckbox} />\n                        <label className=\"form-check-label\" for=\"defaultCheck1\">\n                            Make this article paid\n                        </label>\n                        </div>\n                        </div>\n                        {\n                          this.state.paymentType == 'paid' && <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Price</strong>\n                                <input type=\"text\" placeholder=\"Amount\" name=\"amount\" className=\"form-control\" value={this.state.amount}  onChange={this.handleInput} />\n                                <small className=\"text-secondary\">Enter how much you want to charge for your content</small>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Currency</strong>\n                                <select type=\"text\" placeholder=\"Amount\" className=\"form-control\" name=\"currency\" value={this.state.currency}  onChange={this.handleInput} >\n                                  <option value=\"\">Choose</option>\n                                  <option>BTC</option>\n                                  <option>ETH</option>\n                                  <option>LTC</option>\n                                  <option>XRP</option>\n                                  <option>BCH</option>\n                                  <option>USDT</option>\n                                  <option>DASH</option>\n                                  <option>USD</option>\n                                  <option>EUR</option>\n                                  <option>INR</option>\n                                </select>\n                                <small className=\"text-secondary\">Enter how much you want to charge for your content</small>\n                            </div>\n                          </div>\n                          </div>\n                        }\n                        \n                          <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Main Image</strong>\n                                <FileBrowse name=\"post_image\" page=\"blogs\" fileChange={this.handleFile} value={this.state.post_image} accept=\"image/*\" />\n                                <small className=\"text-secondary\">Select the main image for your article</small>\n                                {\n                                  this.state.post_image == null && this.state.edit_image != null && <div className=\"uploadedImage\"><img src={this.state.edit_image} id=\"post_image_preview\" /></div>\n                                }\n                                \n                                {\n                                  this.state.post_image != null && <div className=\"uploadedImage\"><img src={this.state.post_image.tmp_name} id=\"post_image_preview\" /><div className=\"fa fa-times remove\" name=\"post_image\" onClick={this.handleRemove}></div></div>\n                                }\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <strong>Category</strong>\n                                <select type=\"text\" name=\"category\" className=\"form-control\" value={this.state.category2} onChange={this.handleCategory}>\n                                   <option value=\"\">Select</option>\n                                  {\n                                    this.state.categories.map((e, i) => {\n                                      return <option value={e.category+\"^\"+e._id} key={i} selected={e.category == this.state.category}>{e.category}</option>\n                                    })\n                                  }\n                                </select>\n                                <small className=\"text-secondary\">Select one related</small>\n                            </div>\n                          </div>\n                          \n                      </div>\n                      <div className=\"form-group\">\n                                <strong>Tags</strong>\n                                <MultipleValueTextInput\n                                    onItemAdded={(item, allItems) => this.setState({tags: allItems})}\n                                    onItemDeleted={(item, allItems) => this.setState({tags: allItems})}\n                                    label=\"\"\n                                    values={this.state.tags}\n                                    name=\"item-input\"\n                                    placeholder=\"Do not include #\"\n                                />\n                                \n                                <small className=\"text-secondary\">Separate tags using commas</small>\n                            </div>\n                            <div className=\"form-group text-center\">\n                                <Button type=\"button\" onClick={(e) => this.submit(e, 0)} variant=\"primary-outline\" size=\"big mr-2\" >Save Draft</Button>\n                                <Button variant=\"primary\" size=\"big\" >Publish</Button>\n                                {/* <Button type=\"button\" variant=\"primary-outline\" className=\"ml-2\" size=\"big\" onClick={(e) => this.review(e)}>Review</Button> */}\n                            </div>\n\n                  </form>\n                </div>\n                {/* <div className=\"col-sm empty-container-with-out-border center-column\">\n                  Twitter Tweets\n                </div> */}\n                {/* <!-- end center column --> */}\n\n                {/* <!--  right column --> */}\n              \n                {/* <!-- end right column --> */}\n              </div>\n            </div>\n\n        \n\n            </div>\n\n      )\n    }\n}\n\nexport default AddBlog;\n","import config from \"../config/index\";\nimport {\n    makeAxiosGetRequest,\n    makeAxiosPostRequest\n} from \"./http-service\";\n\n\n/**\n * createPost\n * @param {object} data\n */\n\nexport const getBlogCategories = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-categories`, true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const createBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"create-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const updateBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"update-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n/**\n * register\n * @param {object} data email and password\n */\nexport const getPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-posts\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getGlobalPosts = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-global-blogs\", auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getFilteredBlogPosts = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-filtered-blog-posts\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postRemove = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"remove-blog-post\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const getComments = (params, auth) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(`${config.baseUrl}get-blog-comments`, auth, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\n\nexport const getSinglePost = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getPopularBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-popular-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getCategoryBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-category-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getAuthorBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-author-blogs\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const getSuggestedBlogs = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-suggested-blogs\", false, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const clap = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"blog-clap\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const sendTips = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"send-tips\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const purchaseBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"purchase-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const checkPurchasedBlog = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"check-purchased-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likePost = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + \"like-blog\", auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const postComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + 'comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const likeComment = (data, auth) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'like-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const replyComment = (data, auth = true) => {\n    return new Promise((resolve, reject) => {\n\n        makeAxiosPostRequest(config.baseUrl + 'reply-comment-blog', auth, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\nexport const getBlogDraft = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"get-blog-draft\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};\n\n\nexport const postSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\n\nexport const postUnSave = (data) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosPostRequest(config.baseUrl + \"un-save-blog\", true, data)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                reject(e.response);\n            });\n    });\n};\nexport const getBlogStats = (params) => {\n    return new Promise((resolve, reject) => {\n        makeAxiosGetRequest(config.baseUrl + \"blog-stats\", true, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(e => {\n                \n                reject(e.response);\n            });\n    });\n};","import Embed from \"@editorjs/embed\";\nimport Table from \"@editorjs/table\";\nimport List from \"@editorjs/list\";\nimport Warning from \"@editorjs/warning\";\nimport Code from \"@editorjs/code\";\nimport LinkTool from \"@editorjs/link\";\nimport Image from \"@editorjs/image\";\nimport Raw from \"@editorjs/raw\";\nimport Header from \"@editorjs/header\";\nimport Quote from \"@editorjs/quote\";\nimport Marker from \"@editorjs/marker\";\nimport CheckList from \"@editorjs/checklist\";\nimport Delimiter from \"@editorjs/delimiter\";\nimport InlineCode from \"@editorjs/inline-code\";\nimport SimpleImage from \"@editorjs/simple-image\";\nimport config from \"../../config\";\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  marker: Marker,\n  list: List,\n  warning: Warning,\n  code: Code,\n  // linkTool: LinkTool,\n  image: {\n      class: Image,\n      config: {\n        endpoints: {\n          byFile: config.baseUrl+'editor-upload', // Your backend file uploader endpoint\n          byUrl: config.baseUrl+'fetchUrl', // Your endpoint that provides uploading by Url\n        }\n      }\n    },\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n};\n","import React, {useEffect, useState} from 'react';\nimport Spinner from '../Spinner/index';\nimport { uploadFile } from '../../http/http-calls';\nimport { alertBox } from '../../commonRedux/';\nimport './styles.css';\n\n  \nconst FileBrowse = props => {\n    const [selected, setSelected] = useState('');\n    const [accept, setAccept] = useState('valid');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(()=>{\n        var st = props.accept;\n        if(st != undefined && st != null && st != '' && st != '*'){\n            var s = 'valid ';\n            var sts = st.split(\",\");\n            sts.forEach((el)=> {\n                if(el.trim() == 'image/*'){\n                    s += \"image\";\n                }else{\n                    s += \", pdf\";\n                }\n            });\n            setAccept(s);\n        }\n    }, []);\n\n    const browse = (e) => {\n        var target = e.target.getAttribute(\"data-target\");\n        document.getElementById(target).click();\n    };\n    \n    const inputChange = (e) => {\n        var val = e.target.files[0];\n        var st = props.accept;\n        var ft = val['type'];\n        console.log(ft)\n        var ft2 = ft.split('/')[0];\n        var ftf = ft2;\n        if(ft2 == 'application'){\n            ft2 = ft; \n            ftf = ft.split('/')[1];\n        }\n        if(st == undefined || st == null || st == '' || st == '*' || st.indexOf(ft2) != -1){\n            setSelected(val.name);\n            if(props.type == \"upload\"){\n                setLoading(true);\n                uploadFile({page: props.page == null ? \"general\" : props.page, file: val}).then(async resp => {\n                    props.fileChange(props.name, props.type, resp.file.filePath )\n                    console.log(resp);\n                    setLoading(false);\n                }, error => {\n                    setLoading(false);\n                    alertBox(true, error.message);\n                });\n            }else{\n                props.fileChange(props.name, props.type, val);\n            }\n        }else{\n            alertBox(true,\"Please choose \"+accept+\" files only\");\n        }\n    };\n\n  return (\n   <div className=\"fileBrowse\">\n    <div className=\"d-flex justify-content-start align-items\">\n        <input className=\"form-control\" value={props.type == \"upload\" ? selected : props.value != undefined ? props.value.name : ''} type=\"text\" placeholder=\"jpg, png, jpeg, pdf files only\" data-target={props.name} onClick={(e) => browse(e)}  />\n        <input type=\"file\" name=\"file\" className=\"hide\" id={props.name} onChange={(e) => inputChange(e)} accept={props.accept != undefined && props.accept != null ? props.accept : \"*\"} />\n        <button className=\"btn btn-main box\" data-target={props.name} type=\"button\" onClick={(e) => browse(e)}>\n            {loading ? <Spinner /> : \"Browse\"}\n        </button>\n    </div>\n   </div>\n  );\n\n};\n\nexport default FileBrowse;\n\n"],"sourceRoot":""}