{"version":3,"sources":["pages/Wallet/transfer.js"],"names":["WalletTransfer","props","componentDidMount","thePath","location","pathname","coin","substring","lastIndexOf","console","log","checkWallet","walletCheck","then","resp","setState","loading","status","undefined","data","allPairs","error","err","inputChange","e","val","target","value","input","getAttribute","estUsd","selectedOptions","extUsd","state","extAmount","extCurrency","temp","intUsd","intAmount","intCurrency","intFrom","alertBox","intTo","resetExt","extEmail","extAgree","extSave","extNote","resetInt","submitExt","switchLoader","usd","window","localStorage","setItem","JSON","stringify","externalTransfer","a","message","toString","submitInt","internalTransfer","success","getAllPairs","coins","document","getElementById","allBalance","getItem","parse","getAllBalance","balances","changeTab","newValue","currentTab","attempt","filterCurrency","className","this","href","tabs","type","name","onChange","id","map","i","curnType","currencySymbol","data-usd","EstimatedUSD","key","placeholder","readOnly","onClick","currencyName","krakenBalance","align","selected","intAmout","balance","p2p","lending","lending_hold","React","Component"],"mappings":"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","file":"static/js/75.67621d28.chunk.js","sourcesContent":["import React from 'react';\nimport { alertBox, switchLoader } from '../../commonRedux/';\nimport A from '../../components/A';\nimport WalletMenu from '../../components/Menu/WalletMenu';\nimport WalletMenuMobile from '../../components/Menu/WalletMenuMobile';\nimport Spinner from '../../components/Spinner/index';\nimport TabsUI from '../../components/Tabs/index';\nimport WalletAllBalance from '../../components/Wallet/allBalance';\nimport walletCheck from '../../hooks/walletCheck';\nimport { externalTransfer, getAllBalance, getAllPairs, internalTransfer } from '../../http/wallet-calls';\nimport './styles.css';\n\nclass WalletTransfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            attempt:0,\n            estUsd:0,\n            filterCurrency: 'USD',\n            resetExt:false,\n            resetInt:false,\n            extCurrency: '',\n            intCurrency: '',\n            extEmail: '',\n            extAmount: '',\n            extUsd:'',\n            extAgree: false,\n            extSave:false,\n            extNote:'',\n            intFrom: 'trading',\n            intTo: 'lending',\n            intCurrency: '',\n            intAmount: '',\n            status: null,\n            intUsd: '',\n            loading:true,\n            coins: null,\n            balances: null,\n            content : 'loading',\n            currentTab: 0\n        };\n    }\n\n    componentDidMount = () => {\n        var thePath = this.props.location.pathname;\n        var coin = thePath.substring(thePath.lastIndexOf('/') + 1);\n        console.log(coin);\n        // if(coin != undefined && coin != 'despoit' && coin != null && coin != ''){\n        //     this.setState({\n        //         extCurrency: coin,\n        //         intCurrency: coin\n        //     });\n        // } else {\n        // var favouriteExt = window.localStorage.getItem(\"favourite_external_transfer\");\n        //  console.log(\"favfav\", favouriteExt)\n        // if(favouriteExt != null){\n        //     favouriteExt = JSON.parse(favouriteExt);\n        //     console.log(favouriteExt);\n        //     this.setState({\n        //         extCurrency : favouriteExt.currency,\n        //         extEmail: favouriteExt.email,\n        //         extAmount: favouriteExt.amt,\n        //         extUsd: favouriteExt.usd,\n        //         extNote: favouriteExt.note,\n        //         estUsd: favouriteExt.estUsd\n        //     });\n        // }\n        \n        // }\n        this.checkWallet();\n    };\n\n    checkWallet = () => {\n        // var kycStatus = window.localStorage.getItem(\"kycStatus\");\n        // if(kycStatus != null){\n        //     kycStatus = kycStatus;\n        //     this.setState({\n        //         loading:false,\n        //         status : kycStatus\n        //     }, () => {\n        //         this.allPairs();\n        //     }); \n        // }\n        walletCheck().then(resp=>{\n            // window.localStorage.setItem(\"kycStatus\", resp.data.status);\n            console.log(\"loaded0\")\n            try {\n                this.setState({\n                    loading:false,\n                    status : resp.data.status == undefined ? '' : resp.data.status\n                }, () => {\n                    if(resp.data.status == 'Accept'){\n                    this.allPairs();\n                    }\n                });\n            } catch (error) {\n                console.log(\"loaded\")\n                this.setState({\n                    loading:false\n                })\n            }\n          \n        }, err => {\n            this.setState({\n                loading:false\n            })\n        })\n    };\n\n    inputChange = (e) => {\n        var val = e.target.value;\n        var input = e.target.getAttribute(\"name\");\n        if(input == 'extCurrency'){\n            var estUsd = e.target.selectedOptions[0].getAttribute(\"data-usd\");\n            var extUsd = this.state.extUsd;\n            if(this.state.extAmount != ''){\n                extUsd = this.state.extAmount*estUsd;\n            }\n            this.setState({\n                extCurrency : val,\n                estUsd: estUsd,\n                extUsd:extUsd\n            });\n        }\n        else if(input == 'extAmount'){\n            var temp = val*this.state.estUsd;\n            this.setState({\n                extAmount: val,\n                extUsd : temp\n            });\n        }\n        else if(input == 'intCurrency'){\n            var estUsd = e.target.selectedOptions[0].getAttribute(\"data-usd\");\n            var intUsd = this.state.intUsd;\n            if(this.state.intAmount != ''){\n                intUsd = this.state.intAmount*estUsd;\n            }\n            this.setState({\n                intCurrency : val,\n                estUsd: estUsd,\n                intUsd: intUsd\n            });\n        }\n        else if(input == 'intAmount'){\n            var temp = val*this.state.estUsd;\n            this.setState({\n                intAmount: val,\n                intUsd : temp\n            });\n        }\n        else if(val == 'check'){\n            this.setState({\n                [input] : !this.state[input]\n            });\n        }\n        else if(input == 'intTo'){\n            if(this.state.intFrom == val){\n                alertBox(true, \"You cannot transfer funds between same wallet\");\n            }else{\n                this.setState({\n                    [input] : val\n                });\n            }\n            \n        }\n        else if(input == 'intFrom'){\n            if(this.state.intTo == val){\n                alertBox(true, \"You cannot transfer funds between same wallet\");\n            }else{\n                this.setState({\n                    [input] : val\n                });\n            }\n            \n        }\n        else{\n            this.setState({\n                [input] : val\n            });\n        }\n    }\n\n   \n    resetExt = () => {\n        this.setState({\n            extCurrency: '',\n            extEmail: '',\n            extAmount: '',\n            extUsd:'',\n            extAgree: false,\n            extSave:false,\n            extNote:'',\n        })\n        // this.setState({\n        //     resetExt:true\n        // });\n        // setTimeout(()=>{\n        //     this.setState({\n        //         resetExt:false\n        //     })\n        // }, 200);\n    }\n    resetInt = () => {\n        this.setState({\n            intCurrency: '',\n            intFrom: 'trading',\n            intTo: 'lending',\n            intAmount: '',\n            intUsd: '',\n        })\n        // this.setState({\n        //     resetInt:true\n        // });\n        // setTimeout(()=>{\n        //     this.setState({\n        //         resetInt:false\n        //     })\n        // }, 200);\n    }\n\n    submitExt = () => {\n        console.log(this.state);\n        if(!this.state.extAgree){\n            alertBox(true, \"You need to agree to the terms and conditions in order to continue!\");\n        }\n        else if(this.state.extCurrency == '' || this.state.extEmail == '' || this.state.extAmount == '' || this.state.extUsd == ''){\n            alertBox(true, \"Please fill all required fields\");\n        }else{\n            switchLoader(\"Submitting Transfer Request...\");\n        var data = {\n            \"currency\": this.state.extCurrency,\n            \"email\": this.state.extEmail,\n            \"amt\": this.state.extAmount,\n            \"note\" : this.state.extNote\n          };\n\n          if(this.state.extSave){\n              data.usd = this.state.extUsd;\n              data.estUsd = this.state.estUsd;\n              window.localStorage.setItem(\"favourite_external_transfer\", JSON.stringify(data));\n          }\n\n        externalTransfer(data).then(async resp => {\n            try {\n                if(resp.status == true){\n                    this.resetExt();\n                    alertBox(true, resp.message, \"success\")\n                }else{\n                    alertBox(true, resp.message)\n                }\n            } catch (error) {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n            }\n            switchLoader();\n        }, error => {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n                switchLoader();\n        });\n    }\n    };\n\n    submitInt = () => {\n        console.log(this.state);\n        if(this.state.intCurrency == '' || this.state.intAmount == '' || this.state.intTo == '' || this.state.intFrom == ''){\n            alertBox(true, \"Please fill all fields\");\n        }else{\n            switchLoader(\"Submitting Transfer Request...\");\n        var data = {\n            \"amount\": this.state.intAmount,\n            \"currency\": this.state.intCurrency,\n            \"receivee\": this.state.intTo,\n            \"sendd\" : this.state.intFrom,\n            \"baseCurr\" : \"USD\"\n          };\n\n        internalTransfer(data).then(async resp => {\n            try {\n                if(resp.success == 1){\n                    this.resetExt();\n                    alertBox(true, \"Successfully Transfered\", \"success\")\n                }else{\n                    alertBox(true, \"Transfer Failed\")\n                }\n            } catch (error) {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n            }\n            switchLoader();\n        }, error => {\n                alertBox(true, (error == undefined ? 'Error' : error.toString()));\n                switchLoader();\n        });\n    }\n    };\n\n\n\n    allPairs = () =>{\n        // var allPairs = window.localStorage.getItem(\"allPairs\");\n        // if(allPairs != null){\n        //     allPairs = JSON.parse(allPairs);\n        //     this.setState({\n        //         loading:false,\n        //         coins: allPairs,\n        //         error: ''\n        //     });\n        // }\n        \n        getAllPairs().then(async resp => {\n            this.setState({\n                loading:false,\n                coins: resp.data,\n                error: ''\n            },() => {\n                window.localStorage.setItem(\"allPairs\", JSON.stringify(resp.data));\n                if(this.state.extCurrency != ''){\n                    document.getElementById(\"extCurrency\").value = this.state.extCurrency;\n                }\n            });\n        }, error => {\n                this.setState({\n                loading: false\n            });\n        });\n\n        var allBalance = window.localStorage.getItem(\"allBalance\");\n        if(allBalance != null){\n            allBalance = JSON.parse(allBalance);\n            this.setState({\n                loading:false,\n                coins: allBalance,\n                error: ''\n            });\n        }\n        getAllBalance().then(async resp => {\n            this.setState({\n                loading:false,\n                balances: resp.data,\n                error: ''\n            });\n            window.localStorage.setItem(\"allBalance\", JSON.stringify(resp.data));\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    changeTab = (newValue) => {\n        this.setState({currentTab: newValue});\n    };\n\n    render() {\n\n        return (\n            <div className=\"container my-wall-container depositPage\">\n                <div className=\"row mt-2\">\n\n                    {/* <!-- left column --> */}\n                    <div className=\"col-sm empty-container-with-out-border left-column\">\n                        <WalletMenu {...this.props} />\n                    </div>\n                    {/* <!-- end left column --> */}\n\n                    {/* <!-- center column --> */}\n                    {\n                        this.state.loading && <div className=\"col-sm empty-container-with-border center-column\"><Spinner /></div>\n                    }\n                    {\n                        this.state.status != 'Accept' && !this.state.loading && <div className=\"col-sm empty-container-with-border center-column\">\n                            <p className=\"text-danger text-center mt-4\">Finish KYC to use this feature</p>\n                            <div className=\"text-center\">\n                                <A href=\"/wallet/verification\"><button className=\"btn btn-main\">Go to Verification</button></A>\n                            </div>\n                        </div>\n                    }\n                     {\n                       !this.state.loading && this.state.status == 'Accept' && <div className=\"col-sm empty-container-with-border center-column\">\n                    <WalletMenuMobile {...this.props} />\n                    <TabsUI tabs={['External Transfer', 'Internal Transfer']} type=\"transactions\" className=\"noBorder\" currentTab={this.state.currentTab} changeTab={this.changeTab} />\n                    \n                        {\n                            this.state.resetExt ? <Spinner /> :\n                            <div className={\"tab row m--1 mt-2 \"+(this.state.currentTab != 0 && \"d-none\" )}>\n                                <div className=\"bordered p-3 w-100\">\n                                <div className=\"form-group\">\n                                <label>Currency</label>\n                                <select className=\"form-control\" name=\"extCurrency\" onChange={this.inputChange} value={this.state.extCurrency} id=\"extCurrency\">\n                                    <option value=\"\">Select</option>\n                                        {\n                                        this.state.coins != null && this.state.coins.map((e,i) => {\n                                        return e.curnType == 1 || e.currencySymbol == 'BLCK' ? null : <option value={e.currencySymbol} data-usd={e.EstimatedUSD}  key={i}>{e.currencySymbol}</option>\n                                    })\n                                }\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Recipient</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Email\" name=\"extEmail\" onChange={this.inputChange} value={this.state.extEmail} />\n                            </div>\n\n\n                                <div className=\"form-group\">\n                                <label>Amount</label>\n                                <div className=\"row\">\n                                <div className=\"d-flex justify-content-start align-items col-md-6\">\n                                    <input type=\"text\" placeholder=\"Select\" value={this.state.extCurrency} className=\"form-control currencySelect\" readOnly />\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Amount\" name=\"extAmount\" value={this.state.extAmount} onChange={this.inputChange} />\n                                </div>\n                                <div className=\"d-flex justify-content-start align-items col-md-6\">\n                                <input type=\"text\" placeholder=\"Select\" value=\"USD\" className=\"form-control currencySelect\" readOnly />\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Amount\" name=\"extUsd\" value={this.state.extUsd} onChange={this.inputChange} />\n                                </div>\n                                </div>\n                            </div>\n                           \n                            <div className=\"form-group\">\n                                <label>Note</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Write a message (eg: Thanks for fast delivery)\" name=\"extNote\" onChange={this.inputChange} value={this.state.extNote} />\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"checkbox\"><input type=\"checkbox\" name=\"extAgree\" value=\"check\" onChange={this.inputChange} /> I agree to the <A href=\"\" className=\"text-main\">Terms & Conditions</A></div>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <div className=\"checkbox\"><input type=\"checkbox\" name=\"extSave\" value=\"check\" onChange={this.inputChange} /> Save as favourite transaction</div>\n                            </div> */}\n                            <div className=\"form-group mt-80 d-flex align-items-center justify-content-end\">\n                                <button className=\"btn btn-outline box mr-2 big\" onClick={this.resetExt}>Reset</button>\n                                <button className=\"btn btn-main box big\" onClick={this.submitExt}>Submit</button>\n                            </div>\n                                </div>\n                            \n                            <div className=\"d-flex justify-content-between align-items-center w-100 mt-4\">\n                                <h3 className=\"subtitle\">Available Wallet Balance</h3>\n                                <select className=\"borderless\" name=\"filterCurrency\" onChange={this.inputChange}>\n                                    <option>USD</option>\n                                    <option>EUR</option>\n                                </select>\n                            </div>\n                                <div className=\"tableHold\">\n                            <table className=\"table\">\n                                <tbody>\n                                {\n                                    this.state.coins == null ? <Spinner />\n                                    :\n                                    this.state.coins.map((e,i) => {\n                                        return <tr className=\"whiteBg\" key={i}>\n                                        <td className=\"\"><div>{e.currencyName} ({e.currencySymbol})</div><div className=\"time\">{e.krakenBalance}</div></td>\n                                        <td className=\"time\"  align=\"right\">{this.state.filterCurrency}<br />{e['Estimated'+this.state.filterCurrency]}</td>\n                                        \n                                    </tr>\n                                    })\n                                }\n                                </tbody>\n                            </table>               \n                            </div>    \n\n                        </div>\n                        }\n                        \n                        {\n                            this.state.resetInt ? <Spinner /> :\n                        <div className={\"tab row m--1 mt-2 \"+(this.state.currentTab == 0 && \"d-none\")}>\n                            <div className=\"bordered p-3 w-100\">\n                            <div className=\"form-group\">\n                                <label>Currency</label>\n                                <select className=\"form-control\" name=\"intCurrency\" onChange={this.inputChange} value={this.state.intCurrency}>\n                                        <option value=\"\">Select</option>\n                                        {\n                                        this.state.coins != null && this.state.coins.map((e,i) => {\n                                        return  e.currencySymbol == 'BLCK' ? null : <option value={e.currencySymbol} data-usd={e.EstimatedUSD} key={i}>{e.currencySymbol}</option>\n                                    })\n                                }\n                                        </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Transfer From</label>\n                                <select className=\"form-control\" name=\"intFrom\" value={this.state.intFrom} onChange={this.inputChange}>\n                                    <option value=\"\">Select</option>\n                                    <option value=\"trading\" selected>Exhange</option>\n                                    <option value=\"p2p\">P2P</option>\n                                    <option value=\"lending\">Lending</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Transfer To</label>\n                                <select className=\"form-control\" name=\"intTo\"  value={this.state.intTo} onChange={this.inputChange}>\n                                    <option value=\"\">Select</option>\n                                    <option value=\"trading\">Exhange</option>\n                                    <option value=\"p2p\">P2P</option>\n                                    <option value=\"lending\" selected>Lending</option>\n                                </select>\n                            </div>\n\n\n                                <div className=\"form-group\">\n                                <label>Amount</label>\n                                <div className=\"row\">\n                                <div className=\"d-flex justify-content-start align-items col-md-6\">\n                                    <input type=\"text\" placeholder=\"Select\" value={this.state.intCurrency} className=\"form-control currencySelect\" readOnly />\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Amount\" value={this.state.intAmout} name=\"intAmount\" onChange={this.inputChange} />\n                                </div>\n                                <div className=\"d-flex justify-content-start align-items col-md-6\">\n                                <input type=\"text\" placeholder=\"Select\" value=\"USD\" className=\"form-control currencySelect\" readOnly />\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Amount\" value={this.state.intUsd} name=\"intUsd\" onChange={this.inputChange}/>\n                                </div>\n                                </div>\n                            </div>\n                           \n                            \n                            <div className=\"form-group mt-80 d-flex align-items-center justify-content-end\">\n                                <button className=\"btn btn-outline box mr-2 big\" onClick={this.resetInt}>Reset</button>\n                                <button className=\"btn btn-main box big\"  onClick={this.submitInt}>Submit</button>\n                            </div>\n                            \n\n                          \n                            </div>\n                            <div className=\"d-flex justify-content-between align-items-center w-100 mt-4\">\n                                <h3 className=\"subtitle\">Available Wallet Balance</h3>\n                                {/* <select className=\"borderless\">\n                                    <option>USD</option>\n                                </select> */}\n                            </div>\n                            <table className=\"table\">\n                                <thead><tr className=\"whiteBg title\">\n                                  <td>Currency</td>\n                                  <td>Exchange</td>\n                                  <td>P2P</td>\n                                  <td>Lending</td>\n                                  <td>Tradeable</td>\n                                </tr></thead>\n                                <tbody>\n                                    {\n                                        this.state.balances == null ? <Spinner />\n                                        :\n                                        this.state.balances.map((e,i) => {\n                                            return <tr key={i}>\n                                            <td className=\"\">{e.currencyName} ({e.currencySymbol})</td>\n                                            <td className=\"time\">{e.balance}</td>\n                                            <td className=\"time\">{e.p2p}</td>\n                                            <td className=\"time\">{e.lending}</td>\n                                        <td className=\"time\">{e.lending_hold}</td>\n                                        </tr>\n                                        })\n\n                                    }\n                                    \n                                </tbody>\n                                \n                            </table>\n                           \n                        </div>\n                        }\n                    \n                    </div> }\n                    {/* <!-- end center column --> */}\n                    <div className=\"col-sm empty-container-with-out-border right-column\">\n                    {this.state.resetExt ? <Spinner /> : <WalletAllBalance />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WalletTransfer;\n"],"sourceRoot":""}